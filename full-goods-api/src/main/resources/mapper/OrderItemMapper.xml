<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.api.mapper.OrderItemMapper">
  <resultMap id="BaseResultMap" type="org.example.common.entity.OrderItem">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="order_id" jdbcType="BIGINT" property="orderId" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="fruit_id" jdbcType="BIGINT" property="fruitId" />
    <result column="fruit_name" jdbcType="VARCHAR" property="fruitName" />
    <result column="fruit_image" jdbcType="VARCHAR" property="fruitImage" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="quantity" jdbcType="INTEGER" property="quantity" />
    <result column="total_price" jdbcType="DECIMAL" property="totalPrice" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, order_id, order_no, fruit_id, fruit_name, fruit_image, price, quantity, total_price, 
    create_time, update_time
  </sql>
  
  <select id="selectByOrderId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM t_order_item
    WHERE order_id = #{orderId}
  </select>
  
  <select id="selectByOrderNo" parameterType="java.lang.String" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List"/>
    FROM t_order_item
    WHERE order_no = #{orderNo}
  </select>
  
  <insert id="insert" parameterType="org.example.common.entity.OrderItem">
    INSERT INTO t_order_item (id, order_id, order_no, fruit_id, fruit_name, fruit_image, 
      price, quantity, total_price, create_time, update_time)
    VALUES (#{id,jdbcType=BIGINT}, #{orderId,jdbcType=BIGINT}, #{orderNo,jdbcType=VARCHAR}, 
      #{fruitId,jdbcType=BIGINT}, #{fruitName,jdbcType=VARCHAR}, #{fruitImage,jdbcType=VARCHAR}, 
      #{price,jdbcType=DECIMAL}, #{quantity,jdbcType=INTEGER}, #{totalPrice,jdbcType=DECIMAL}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  
  <insert id="insertBatch" parameterType="org.example.common.entity.OrderItem">
    INSERT INTO t_order_item (order_id, order_no, fruit_id, fruit_name, fruit_image, 
      price, quantity, total_price, create_time, update_time)
    VALUES
    <foreach collection="orderItems" item="item" separator=",">
      (#{item.orderId,jdbcType=BIGINT}, #{item.orderNo,jdbcType=VARCHAR}, 
      #{item.fruitId,jdbcType=BIGINT}, #{item.fruitName,jdbcType=VARCHAR}, #{item.fruitImage,jdbcType=VARCHAR}, 
      #{item.price,jdbcType=DECIMAL}, #{item.quantity,jdbcType=INTEGER}, #{item.totalPrice,jdbcType=DECIMAL}, 
      #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  
  <update id="update" parameterType="org.example.common.entity.OrderItem">
    UPDATE t_order_item
    SET order_id = #{orderId,jdbcType=BIGINT},
      order_no = #{orderNo,jdbcType=VARCHAR},
      fruit_id = #{fruitId,jdbcType=BIGINT},
      fruit_name = #{fruitName,jdbcType=VARCHAR},
      fruit_image = #{fruitImage,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      quantity = #{quantity,jdbcType=INTEGER},
      total_price = #{totalPrice,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    WHERE id = #{id,jdbcType=BIGINT}
  </update>
  
  <delete id="deleteById" parameterType="java.lang.Long">
    DELETE FROM t_order_item
    WHERE id = #{id,jdbcType=BIGINT}
  </delete>
  
  <delete id="deleteByOrderId" parameterType="java.lang.Long">
    DELETE FROM t_order_item
    WHERE order_id = #{orderId,jdbcType=BIGINT}
  </delete>
</mapper>