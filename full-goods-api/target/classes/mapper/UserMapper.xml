<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.api.mapper.UserMapper">

    <resultMap id="BaseResultMap" type="org.example.common.entity.User">
        <id column="id" property="id" />
        <result column="mobile" property="mobile" />
        <result column="password" property="password" />
        <result column="username" property="username" />
        <result column="nickname" property="nickname" />
        <result column="avatar" property="avatar" />
        <result column="status" property="status" />
        <result column="last_login_time" property="lastLoginTime" />
        <result column="last_login_ip" property="lastLoginIp" />
        <result column="gender" property="gender" />
        <result column="birthday" property="birthday" />
        <result column="email" property="email" />
        <result column="address" property="address" />
        <result column="bio" property="bio" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <result column="create_by" property="createBy" />
        <result column="update_by" property="updateBy" />
        <result column="remark" property="remark" />
    </resultMap>

    <sql id="Base_Column_List">
        id, mobile, password, username, nickname, avatar, status, last_login_time, last_login_ip,
        gender, birthday, email, address, bio, create_time, update_time, create_by, update_by, remark
    </sql>

    <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM t_user
        WHERE id = #{id}
    </select>

    <select id="selectByMobile" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM t_user
        WHERE mobile = #{mobile}
    </select>

    <insert id="insert" parameterType="org.example.common.entity.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO t_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="mobile != null">mobile,</if>
            <if test="password != null">password,</if>
            <if test="username != null">username,</if>
            <if test="nickname != null">nickname,</if>
            <if test="avatar != null">avatar,</if>
            <if test="status != null">status,</if>
            <if test="lastLoginTime != null">last_login_time,</if>
            <if test="lastLoginIp != null">last_login_ip,</if>
            <if test="gender != null">gender,</if>
            <if test="birthday != null">birthday,</if>
            <if test="email != null">email,</if>
            <if test="address != null">address,</if>
            <if test="bio != null">bio,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="createBy != null">create_by,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="remark != null">remark,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="mobile != null">#{mobile},</if>
            <if test="password != null">#{password},</if>
            <if test="username != null">#{username},</if>
            <if test="nickname != null">#{nickname},</if>
            <if test="avatar != null">#{avatar},</if>
            <if test="status != null">#{status},</if>
            <if test="lastLoginTime != null">#{lastLoginTime},</if>
            <if test="lastLoginIp != null">#{lastLoginIp},</if>
            <if test="gender != null">#{gender},</if>
            <if test="birthday != null">#{birthday},</if>
            <if test="email != null">#{email},</if>
            <if test="address != null">#{address},</if>
            <if test="bio != null">#{bio},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="remark != null">#{remark},</if>
        </trim>
    </insert>

    <update id="update" parameterType="org.example.common.entity.User">
        UPDATE t_user
        <set>
            <if test="mobile != null">mobile = #{mobile},</if>
            <if test="password != null">password = #{password},</if>
            <if test="username != null">username = #{username},</if>
            <if test="nickname != null">nickname = #{nickname},</if>
            <if test="avatar != null">avatar = #{avatar},</if>
            <if test="status != null">status = #{status},</if>
            <if test="lastLoginTime != null">last_login_time = #{lastLoginTime},</if>
            <if test="lastLoginIp != null">last_login_ip = #{lastLoginIp},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="birthday != null">birthday = #{birthday},</if>
            <if test="email != null">email = #{email},</if>
            <if test="address != null">address = #{address},</if>
            <if test="bio != null">bio = #{bio},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="remark != null">remark = #{remark},</if>
        </set>
        WHERE id = #{id}
    </update>

    <update id="updatePassword">
        UPDATE t_user
        SET password = #{password},
            update_time = NOW()
        WHERE id = #{id}
    </update>

    <update id="updateLoginInfo">
        UPDATE t_user
        SET last_login_time = #{lastLoginTime},
            last_login_ip = #{lastLoginIp},
            update_time = NOW()
        WHERE id = #{id}
    </update>

    <delete id="deleteById" parameterType="java.lang.Long">
        DELETE FROM t_user WHERE id = #{id}
    </delete>
    
    <!-- ==================== Admin相关SQL映射 ==================== -->
    
    <!-- 兼容方法：根据主键查询用户 -->
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM t_user
        WHERE id = #{id}
    </select>
    
    <!-- 兼容方法：根据主键更新用户 -->
    <update id="updateByPrimaryKey" parameterType="org.example.common.entity.User">
        UPDATE t_user
        <set>
            <if test="mobile != null">mobile = #{mobile},</if>
            <if test="password != null">password = #{password},</if>
            <if test="username != null">username = #{username},</if>
            <if test="nickname != null">nickname = #{nickname},</if>
            <if test="avatar != null">avatar = #{avatar},</if>
            <if test="status != null">status = #{status},</if>
            <if test="lastLoginTime != null">last_login_time = #{lastLoginTime},</if>
            <if test="lastLoginIp != null">last_login_ip = #{lastLoginIp},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="birthday != null">birthday = #{birthday},</if>
            <if test="email != null">email = #{email},</if>
            <if test="address != null">address = #{address},</if>
            <if test="bio != null">bio = #{bio},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="remark != null">remark = #{remark},</if>
        </set>
        WHERE id = #{id}
    </update>
    
    <!-- 兼容方法：根据主键删除用户 -->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        DELETE FROM t_user WHERE id = #{id}
    </delete>
    
    <!-- 分页查询所有用户 -->
    <select id="selectAllWithPage" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM t_user
        ORDER BY create_time DESC
    </select>
    
    <!-- 根据条件分页查询用户 -->
    <select id="selectByConditionsWithPage" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM t_user
        <where>
            <if test="search != null and search != ''">
                AND (
                    mobile LIKE CONCAT('%', #{search}, '%')
                    OR username LIKE CONCAT('%', #{search}, '%')
                    OR nickname LIKE CONCAT('%', #{search}, '%')
                )
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
        </where>
        ORDER BY create_time DESC
    </select>
    
    <!-- 统计用户总数 -->
    <select id="countTotal" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_user
    </select>
    
    <!-- 统计今日注册用户数 -->
    <select id="countTodayRegistered" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_user
        WHERE DATE(create_time) = CURDATE()
    </select>
    
    <!-- 根据状态统计用户数 -->
    <select id="countByStatus" resultType="java.lang.Long">
        SELECT COUNT(*) FROM t_user
        WHERE status = #{status}
    </select>
    
    <!-- 计算月增长率 -->
    <select id="calculateMonthlyGrowth" resultType="java.lang.Double">
        SELECT 
            CASE 
                WHEN last_month_count = 0 THEN 100.0
                ELSE ROUND((this_month_count - last_month_count) * 100.0 / last_month_count, 2)
            END as growth_rate
        FROM (
            SELECT 
                (SELECT COUNT(*) FROM t_user WHERE YEAR(create_time) = YEAR(CURDATE()) AND MONTH(create_time) = MONTH(CURDATE())) as this_month_count,
                (SELECT COUNT(*) FROM t_user WHERE YEAR(create_time) = YEAR(DATE_SUB(CURDATE(), INTERVAL 1 MONTH)) AND MONTH(create_time) = MONTH(DATE_SUB(CURDATE(), INTERVAL 1 MONTH))) as last_month_count
        ) as counts
    </select>
    
</mapper>