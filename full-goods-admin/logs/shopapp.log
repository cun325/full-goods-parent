2025-08-20 14:17:42 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-08-20 14:17:42 [main] INFO  org.example.admin.AdminApplication - Starting AdminApplication using Java 1.8.0_351 on 192.168.2.7 with PID 95474 (/Users/peng/Downloads/full-goods-parent/full-goods-admin/target/classes started by peng in /Users/peng/Downloads/full-goods-parent/full-goods-admin)
2025-08-20 14:17:42 [main] DEBUG org.example.admin.AdminApplication - Running with Spring Boot v2.7.5, Spring v5.3.23
2025-08-20 14:17:42 [main] INFO  org.example.admin.AdminApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-20 14:17:43 [main] DEBUG o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@514646ef
2025-08-20 14:17:44 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-20 14:17:44 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-20 14:17:44 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 26 ms. Found 0 Redis repository interfaces.
2025-08-20 14:17:44 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - Skipping MapperFactoryBean with name 'adminBannerMapper' and 'org.example.admin.mapper.AdminBannerMapper' mapperInterface. Bean already defined with the same name!
2025-08-20 14:17:44 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - Skipping MapperFactoryBean with name 'categoryMapper' and 'org.example.admin.mapper.CategoryMapper' mapperInterface. Bean already defined with the same name!
2025-08-20 14:17:44 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[org.example.common.mapper, org.example.admin.mapper]' package. Please check your configuration.
2025-08-20 14:17:44 [main] DEBUG o.s.b.w.e.tomcat.TomcatServletWebServerFactory - Code archive: /Users/peng/.m2/repository/org/springframework/boot/spring-boot/2.7.5/spring-boot-2.7.5.jar
2025-08-20 14:17:44 [main] DEBUG o.s.b.w.e.tomcat.TomcatServletWebServerFactory - Code archive: /Users/peng/.m2/repository/org/springframework/boot/spring-boot/2.7.5/spring-boot-2.7.5.jar
2025-08-20 14:17:44 [main] DEBUG o.s.b.w.e.tomcat.TomcatServletWebServerFactory - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2025-08-20 14:17:44 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8082 (http)
2025-08-20 14:17:45 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8082"]
2025-08-20 14:17:45 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-08-20 14:17:45 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.68]
2025-08-20 14:17:45 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/admin] - Initializing Spring embedded WebApplicationContext
2025-08-20 14:17:45 [main] DEBUG o.s.b.w.s.c.ServletWebServerApplicationContext - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2025-08-20 14:17:45 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2168 ms
2025-08-20 14:17:45 [main] DEBUG o.s.b.web.servlet.ServletContextInitializerBeans - Mapping filters: filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, hiddenHttpMethodFilter urls=[/*] order=2147483647
2025-08-20 14:17:45 [main] DEBUG o.s.b.web.servlet.ServletContextInitializerBeans - Mapping servlets: dispatcherServlet urls=[/], statViewServlet urls=[/druid/*]
2025-08-20 14:17:45 [main] DEBUG o.s.b.w.servlet.filter.OrderedRequestContextFilter - Filter 'requestContextFilter' configured for use
2025-08-20 14:17:45 [main] DEBUG o.s.web.filter.HiddenHttpMethodFilter - Filter 'hiddenHttpMethodFilter' configured for use
2025-08-20 14:17:45 [main] DEBUG o.s.b.w.s.filter.OrderedCharacterEncodingFilter - Filter 'characterEncodingFilter' configured for use
2025-08-20 14:17:45 [main] DEBUG o.s.b.web.servlet.filter.OrderedFormContentFilter - Filter 'formContentFilter' configured for use
2025-08-20 14:17:45 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2025-08-20 14:17:46 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-08-20 14:17:46 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'messageServiceImpl': Unsatisfied dependency expressed through field 'webSocketMessageService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.example.api.service.WebSocketMessageService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2025-08-20 14:17:47 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-08-20 14:17:47 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-08-20 14:17:47 [main] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-20 14:17:47 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-08-20 14:17:47 [main] ERROR o.s.b.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field webSocketMessageService in org.example.api.service.impl.MessageServiceImpl required a bean of type 'org.example.api.service.WebSocketMessageService' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'org.example.api.service.WebSocketMessageService' in your configuration.

2025-08-20 14:18:55 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-08-20 14:18:55 [main] INFO  org.example.admin.AdminApplication - Starting AdminApplication using Java 1.8.0_351 on 192.168.2.7 with PID 96179 (/Users/peng/Downloads/full-goods-parent/full-goods-admin/target/classes started by peng in /Users/peng/Downloads/full-goods-parent/full-goods-admin)
2025-08-20 14:18:55 [main] DEBUG org.example.admin.AdminApplication - Running with Spring Boot v2.7.5, Spring v5.3.23
2025-08-20 14:18:55 [main] INFO  org.example.admin.AdminApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-20 14:18:55 [main] DEBUG o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@514646ef
2025-08-20 14:18:56 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-20 14:18:56 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-20 14:18:56 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 27 ms. Found 0 Redis repository interfaces.
2025-08-20 14:18:56 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - Skipping MapperFactoryBean with name 'adminBannerMapper' and 'org.example.admin.mapper.AdminBannerMapper' mapperInterface. Bean already defined with the same name!
2025-08-20 14:18:56 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - Skipping MapperFactoryBean with name 'categoryMapper' and 'org.example.admin.mapper.CategoryMapper' mapperInterface. Bean already defined with the same name!
2025-08-20 14:18:56 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[org.example.common.mapper, org.example.admin.mapper]' package. Please check your configuration.
2025-08-20 14:18:57 [main] DEBUG o.s.b.w.e.tomcat.TomcatServletWebServerFactory - Code archive: /Users/peng/.m2/repository/org/springframework/boot/spring-boot/2.7.5/spring-boot-2.7.5.jar
2025-08-20 14:18:57 [main] DEBUG o.s.b.w.e.tomcat.TomcatServletWebServerFactory - Code archive: /Users/peng/.m2/repository/org/springframework/boot/spring-boot/2.7.5/spring-boot-2.7.5.jar
2025-08-20 14:18:57 [main] DEBUG o.s.b.w.e.tomcat.TomcatServletWebServerFactory - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2025-08-20 14:18:57 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8082 (http)
2025-08-20 14:18:57 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8082"]
2025-08-20 14:18:57 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-08-20 14:18:57 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.68]
2025-08-20 14:18:57 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/admin] - Initializing Spring embedded WebApplicationContext
2025-08-20 14:18:57 [main] DEBUG o.s.b.w.s.c.ServletWebServerApplicationContext - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2025-08-20 14:18:57 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2461 ms
2025-08-20 14:18:58 [main] DEBUG o.s.b.web.servlet.ServletContextInitializerBeans - Mapping filters: filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, hiddenHttpMethodFilter urls=[/*] order=2147483647
2025-08-20 14:18:58 [main] DEBUG o.s.b.web.servlet.ServletContextInitializerBeans - Mapping servlets: dispatcherServlet urls=[/], statViewServlet urls=[/druid/*]
2025-08-20 14:18:58 [main] DEBUG o.s.b.w.servlet.filter.OrderedRequestContextFilter - Filter 'requestContextFilter' configured for use
2025-08-20 14:18:58 [main] DEBUG o.s.web.filter.HiddenHttpMethodFilter - Filter 'hiddenHttpMethodFilter' configured for use
2025-08-20 14:18:58 [main] DEBUG o.s.b.w.s.filter.OrderedCharacterEncodingFilter - Filter 'characterEncodingFilter' configured for use
2025-08-20 14:18:58 [main] DEBUG o.s.b.web.servlet.filter.OrderedFormContentFilter - Filter 'formContentFilter' configured for use
2025-08-20 14:18:58 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2025-08-20 14:18:59 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-08-20 14:18:59 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'messageServiceImpl': Unsatisfied dependency expressed through field 'webSocketMessageService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webSocketMessageService': Unsatisfied dependency expressed through field 'messagingTemplate'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.messaging.simp.SimpMessagingTemplate' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2025-08-20 14:19:00 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-08-20 14:19:00 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-08-20 14:19:00 [main] INFO  org.apache.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-20 14:19:00 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2025-08-20 14:19:00 [main] ERROR o.s.b.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field messagingTemplate in org.example.api.service.WebSocketMessageService required a bean of type 'org.springframework.messaging.simp.SimpMessagingTemplate' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'org.springframework.messaging.simp.SimpMessagingTemplate' in your configuration.

2025-08-20 14:19:49 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-08-20 14:19:49 [main] INFO  org.example.admin.AdminApplication - Starting AdminApplication using Java 1.8.0_351 on 192.168.2.7 with PID 96589 (/Users/peng/Downloads/full-goods-parent/full-goods-admin/target/classes started by peng in /Users/peng/Downloads/full-goods-parent/full-goods-admin)
2025-08-20 14:19:49 [main] DEBUG org.example.admin.AdminApplication - Running with Spring Boot v2.7.5, Spring v5.3.23
2025-08-20 14:19:49 [main] INFO  org.example.admin.AdminApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-20 14:19:49 [main] DEBUG o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@514646ef
2025-08-20 14:19:50 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-20 14:19:50 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-20 14:19:50 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23 ms. Found 0 Redis repository interfaces.
2025-08-20 14:19:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - Skipping MapperFactoryBean with name 'adminBannerMapper' and 'org.example.admin.mapper.AdminBannerMapper' mapperInterface. Bean already defined with the same name!
2025-08-20 14:19:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - Skipping MapperFactoryBean with name 'categoryMapper' and 'org.example.admin.mapper.CategoryMapper' mapperInterface. Bean already defined with the same name!
2025-08-20 14:19:50 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[org.example.common.mapper, org.example.admin.mapper]' package. Please check your configuration.
2025-08-20 14:19:51 [main] DEBUG o.s.b.w.e.tomcat.TomcatServletWebServerFactory - Code archive: /Users/peng/.m2/repository/org/springframework/boot/spring-boot/2.7.5/spring-boot-2.7.5.jar
2025-08-20 14:19:51 [main] DEBUG o.s.b.w.e.tomcat.TomcatServletWebServerFactory - Code archive: /Users/peng/.m2/repository/org/springframework/boot/spring-boot/2.7.5/spring-boot-2.7.5.jar
2025-08-20 14:19:51 [main] DEBUG o.s.b.w.e.tomcat.TomcatServletWebServerFactory - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2025-08-20 14:19:51 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8082 (http)
2025-08-20 14:19:51 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8082"]
2025-08-20 14:19:51 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-08-20 14:19:51 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.68]
2025-08-20 14:19:51 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/admin] - Initializing Spring embedded WebApplicationContext
2025-08-20 14:19:51 [main] DEBUG o.s.b.w.s.c.ServletWebServerApplicationContext - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2025-08-20 14:19:51 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2007 ms
2025-08-20 14:19:51 [main] DEBUG o.s.b.web.servlet.ServletContextInitializerBeans - Mapping filters: filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, hiddenHttpMethodFilter urls=[/*] order=2147483647
2025-08-20 14:19:51 [main] DEBUG o.s.b.web.servlet.ServletContextInitializerBeans - Mapping servlets: dispatcherServlet urls=[/], statViewServlet urls=[/druid/*]
2025-08-20 14:19:51 [main] DEBUG o.s.b.w.servlet.filter.OrderedRequestContextFilter - Filter 'requestContextFilter' configured for use
2025-08-20 14:19:51 [main] DEBUG o.s.web.filter.HiddenHttpMethodFilter - Filter 'hiddenHttpMethodFilter' configured for use
2025-08-20 14:19:51 [main] DEBUG o.s.b.w.s.filter.OrderedCharacterEncodingFilter - Filter 'characterEncodingFilter' configured for use
2025-08-20 14:19:51 [main] DEBUG o.s.b.web.servlet.filter.OrderedFormContentFilter - Filter 'formContentFilter' configured for use
2025-08-20 14:19:51 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2025-08-20 14:19:52 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-08-20 14:19:53 [main] DEBUG o.s.w.s.server.support.WebSocketHandlerMapping - Patterns [/ws/**] in 'stompWebSocketHandlerMapping'
2025-08-20 14:19:53 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.AdminMessageController:
	
2025-08-20 14:19:53 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.AdminMessageSendingController:
	
2025-08-20 14:19:53 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.AdminMessageTemplateController:
	
2025-08-20 14:19:53 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.AuthController:
	
2025-08-20 14:19:53 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.BannerController:
	
2025-08-20 14:19:53 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.CategoryController:
	
2025-08-20 14:19:53 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.DashboardController:
	
2025-08-20 14:19:53 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.DeliveryController:
	
2025-08-20 14:19:53 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.ModelController:
	
2025-08-20 14:19:53 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.OrderController:
	
2025-08-20 14:19:53 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.ProductController:
	
2025-08-20 14:19:53 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.TrainingController:
	
2025-08-20 14:19:53 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.UserController:
	
2025-08-20 14:19:53 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.s.b.a.w.s.e.BasicErrorController:
	
2025-08-20 14:19:54 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-20 14:19:54 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 150 mappings in 'requestMappingHandlerMapping'
2025-08-20 14:19:54 [main] DEBUG o.s.web.servlet.handler.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /uploads/**, /images/**] in 'resourceHandlerMapping'
2025-08-20 14:19:54 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-20 14:19:54 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2025-08-20 14:19:54 [main] DEBUG o.s.d.redis.listener.RedisMessageListenerContainer - Starting RedisMessageListenerContainer...
2025-08-20 14:19:54 [main] DEBUG o.s.d.redis.listener.RedisMessageListenerContainer - Postpone listening for Redis messages until actual listeners are added.
2025-08-20 14:19:54 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8082"]
2025-08-20 14:19:54 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8082 (http) with context path '/admin'
2025-08-20 14:19:54 [main] DEBUG org.springframework.web.SimpLogging - clientOutboundChannel added SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2025-08-20 14:19:54 [main] DEBUG org.springframework.web.SimpLogging - clientInboundChannel added WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2025-08-20 14:19:54 [main] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - Starting...
2025-08-20 14:19:54 [main] DEBUG org.springframework.web.SimpLogging - clientInboundChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@250967f1]
2025-08-20 14:19:54 [main] DEBUG org.springframework.web.SimpLogging - brokerChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@250967f1]
2025-08-20 14:19:54 [main] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@250967f1]]
2025-08-20 14:19:54 [main] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - Started.
2025-08-20 14:19:54 [main] DEBUG org.springframework.web.SimpLogging - clientInboundChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-08-20 14:19:54 [main] DEBUG org.springframework.web.SimpLogging - brokerChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-08-20 14:19:54 [main] INFO  org.example.admin.AdminApplication - Started AdminApplication in 5.817 seconds (JVM running for 6.218)
2025-08-20 14:20:12 [http-nio-8082-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/admin] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-20 14:20:12 [http-nio-8082-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-20 14:20:12 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-20 14:20:12 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-20 14:20:12 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-20 14:20:12 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3192e2d5
2025-08-20 14:20:12 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@29b4613d
2025-08-20 14:20:12 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-20 14:20:12 [http-nio-8082-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2025-08-20 14:20:12 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/health", parameters={}
2025-08-20 14:20:12 [http-nio-8082-exec-1] DEBUG o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/]]
2025-08-20 14:20:12 [http-nio-8082-exec-1] DEBUG o.s.w.servlet.resource.ResourceHttpRequestHandler - Resource not found
2025-08-20 14:20:12 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-20 14:20:12 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/admin/error", parameters={}
2025-08-20 14:20:12 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 14:20:12 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{timestamp=Wed Aug 20 14:20:12 CST 2025, status=404, error=Not Found, path=/admin/health}]
2025-08-20 14:20:12 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-08-20 14:20:18 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/", parameters={}
2025-08-20 14:20:18 [http-nio-8082-exec-2] DEBUG o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/]]
2025-08-20 14:20:18 [http-nio-8082-exec-2] DEBUG o.s.w.servlet.resource.ResourceHttpRequestHandler - Resource not found
2025-08-20 14:20:18 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-20 14:20:18 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/admin/error", parameters={}
2025-08-20 14:20:18 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 14:20:18 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{timestamp=Wed Aug 20 14:20:18 CST 2025, status=404, error=Not Found, path=/admin/}]
2025-08-20 14:20:18 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-08-20 14:20:34 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/dashboard", parameters={}
2025-08-20 14:20:34 [http-nio-8082-exec-3] DEBUG o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/]]
2025-08-20 14:20:34 [http-nio-8082-exec-3] DEBUG o.s.w.servlet.resource.ResourceHttpRequestHandler - Resource not found
2025-08-20 14:20:34 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-20 14:20:34 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/admin/error", parameters={}
2025-08-20 14:20:34 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 14:20:34 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{timestamp=Wed Aug 20 14:20:34 CST 2025, status=404, error=Not Found, path=/admin/dashboard}]
2025-08-20 14:20:34 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-08-20 14:20:44 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/dashboard", parameters={}
2025-08-20 14:20:44 [http-nio-8082-exec-5] DEBUG o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/]]
2025-08-20 14:20:44 [http-nio-8082-exec-5] DEBUG o.s.w.servlet.resource.ResourceHttpRequestHandler - Resource not found
2025-08-20 14:20:44 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-20 14:20:44 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/admin/error", parameters={}
2025-08-20 14:20:44 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 14:20:44 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{timestamp=Wed Aug 20 14:20:44 CST 2025, status=404, error=Not Found, path=/admin/dashboard}]
2025-08-20 14:20:44 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-08-20 14:20:53 [MessageBroker-1] INFO  o.s.web.socket.config.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2025-08-20 14:20:53 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/user/list", parameters={}
2025-08-20 14:20:53 [http-nio-8082-exec-6] DEBUG o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/]]
2025-08-20 14:20:53 [http-nio-8082-exec-6] DEBUG o.s.w.servlet.resource.ResourceHttpRequestHandler - Resource not found
2025-08-20 14:20:53 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-20 14:20:53 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/admin/error", parameters={}
2025-08-20 14:20:53 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 14:20:53 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{timestamp=Wed Aug 20 14:20:53 CST 2025, status=404, error=Not Found, path=/admin/user/list}]
2025-08-20 14:20:53 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-08-20 14:21:23 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/user/list", parameters={}
2025-08-20 14:21:23 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/user/list, IP: 0:0:0:0:0:0:0:1
2025-08-20 14:21:23 [http-nio-8082-exec-8] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: curl/8.7.1
2025-08-20 14:21:23 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler org.example.common.exception.GlobalExceptionHandler#handleException(Exception, HttpServletRequest)
2025-08-20 14:21:23 [http-nio-8082-exec-8] ERROR org.example.common.utils.LogUtils - 异常详情: 
org.springframework.web.util.NestedServletException: Handler dispatch failed; nested exception is java.lang.NoClassDefFoundError: org/example/admin/service/impl/AdminUserServiceImpl$1
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1086)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:670)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
Caused by: java.lang.NoClassDefFoundError: org/example/admin/service/impl/AdminUserServiceImpl$1
	at org.example.admin.service.impl.AdminUserServiceImpl.getUserList(AdminUserServiceImpl.java:39)
	at org.example.admin.controller.UserController.getUserList(UserController.java:33)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	... 46 common frames omitted
Caused by: java.lang.ClassNotFoundException: org.example.admin.service.impl.AdminUserServiceImpl$1
	at java.net.URLClassLoader.findClass(URLClassLoader.java:387)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:355)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	... 59 common frames omitted
2025-08-20 14:21:23 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 14:21:23 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=500, message=系统内部错误, data=null)]
2025-08-20 14:21:23 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.util.NestedServletException: Handler dispatch failed; nested exception is java.lang.NoClassDefFoundError: org/example/admin/service/impl/AdminUserServiceImpl$1]
2025-08-20 14:21:23 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/user/list, 耗时: 473ms, 状态: 500
2025-08-20 14:21:23 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-08-20 14:22:17 [SpringApplicationShutdownHook] DEBUG o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@514646ef, started on Wed Aug 20 14:19:49 CST 2025
2025-08-20 14:22:17 [SpringApplicationShutdownHook] DEBUG org.springframework.web.SimpLogging - clientOutboundChannel removed SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2025-08-20 14:22:17 [SpringApplicationShutdownHook] DEBUG org.springframework.web.SimpLogging - clientInboundChannel removed WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2025-08-20 14:22:17 [SpringApplicationShutdownHook] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - Stopping...
2025-08-20 14:22:17 [SpringApplicationShutdownHook] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@250967f1]]
2025-08-20 14:22:17 [SpringApplicationShutdownHook] DEBUG org.springframework.web.SimpLogging - clientInboundChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@250967f1]
2025-08-20 14:22:17 [SpringApplicationShutdownHook] DEBUG org.springframework.web.SimpLogging - brokerChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@250967f1]
2025-08-20 14:22:17 [SpringApplicationShutdownHook] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - Stopped.
2025-08-20 14:22:17 [SpringApplicationShutdownHook] DEBUG org.springframework.web.SimpLogging - clientInboundChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-08-20 14:22:17 [SpringApplicationShutdownHook] DEBUG org.springframework.web.SimpLogging - brokerChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-08-20 14:22:17 [SpringApplicationShutdownHook] DEBUG o.s.d.redis.listener.RedisMessageListenerContainer - Stopped RedisMessageListenerContainer.
2025-08-20 14:22:17 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-08-20 14:22:17 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-08-20 14:22:30 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-08-20 14:22:30 [main] INFO  org.example.admin.AdminApplication - Starting AdminApplication using Java 1.8.0_351 on 192.168.2.7 with PID 98855 (/Users/peng/Downloads/full-goods-parent/full-goods-admin/target/classes started by peng in /Users/peng/Downloads/full-goods-parent/full-goods-admin)
2025-08-20 14:22:30 [main] DEBUG org.example.admin.AdminApplication - Running with Spring Boot v2.7.5, Spring v5.3.23
2025-08-20 14:22:30 [main] INFO  org.example.admin.AdminApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-20 14:22:30 [main] DEBUG o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@514646ef
2025-08-20 14:22:31 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-20 14:22:31 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-20 14:22:31 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 228 ms. Found 0 Redis repository interfaces.
2025-08-20 14:22:31 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - Skipping MapperFactoryBean with name 'adminBannerMapper' and 'org.example.admin.mapper.AdminBannerMapper' mapperInterface. Bean already defined with the same name!
2025-08-20 14:22:31 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - Skipping MapperFactoryBean with name 'categoryMapper' and 'org.example.admin.mapper.CategoryMapper' mapperInterface. Bean already defined with the same name!
2025-08-20 14:22:31 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[org.example.common.mapper, org.example.admin.mapper]' package. Please check your configuration.
2025-08-20 14:22:32 [main] DEBUG o.s.b.w.e.tomcat.TomcatServletWebServerFactory - Code archive: /Users/peng/.m2/repository/org/springframework/boot/spring-boot/2.7.5/spring-boot-2.7.5.jar
2025-08-20 14:22:32 [main] DEBUG o.s.b.w.e.tomcat.TomcatServletWebServerFactory - Code archive: /Users/peng/.m2/repository/org/springframework/boot/spring-boot/2.7.5/spring-boot-2.7.5.jar
2025-08-20 14:22:32 [main] DEBUG o.s.b.w.e.tomcat.TomcatServletWebServerFactory - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2025-08-20 14:22:32 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8082 (http)
2025-08-20 14:22:32 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8082"]
2025-08-20 14:22:32 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-08-20 14:22:32 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.68]
2025-08-20 14:22:32 [main] DEBUG o.s.b.w.s.c.ServletWebServerApplicationContext - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2025-08-20 14:22:32 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/admin] - Initializing Spring embedded WebApplicationContext
2025-08-20 14:22:32 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2680 ms
2025-08-20 14:22:32 [main] DEBUG o.s.b.web.servlet.ServletContextInitializerBeans - Mapping filters: filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, hiddenHttpMethodFilter urls=[/*] order=2147483647
2025-08-20 14:22:32 [main] DEBUG o.s.b.web.servlet.ServletContextInitializerBeans - Mapping servlets: dispatcherServlet urls=[/], statViewServlet urls=[/druid/*]
2025-08-20 14:22:33 [main] DEBUG o.s.b.w.servlet.filter.OrderedRequestContextFilter - Filter 'requestContextFilter' configured for use
2025-08-20 14:22:33 [main] DEBUG o.s.web.filter.HiddenHttpMethodFilter - Filter 'hiddenHttpMethodFilter' configured for use
2025-08-20 14:22:33 [main] DEBUG o.s.b.w.s.filter.OrderedCharacterEncodingFilter - Filter 'characterEncodingFilter' configured for use
2025-08-20 14:22:33 [main] DEBUG o.s.b.web.servlet.filter.OrderedFormContentFilter - Filter 'formContentFilter' configured for use
2025-08-20 14:22:33 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2025-08-20 14:22:34 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-08-20 14:22:35 [main] DEBUG o.s.w.s.server.support.WebSocketHandlerMapping - Patterns [/ws/**] in 'stompWebSocketHandlerMapping'
2025-08-20 14:22:35 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.AdminMessageController:
	
2025-08-20 14:22:35 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.AdminMessageSendingController:
	
2025-08-20 14:22:35 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.AdminMessageTemplateController:
	
2025-08-20 14:22:35 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.AuthController:
	
2025-08-20 14:22:35 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.BannerController:
	
2025-08-20 14:22:35 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.CategoryController:
	
2025-08-20 14:22:35 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.DashboardController:
	
2025-08-20 14:22:35 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.DeliveryController:
	
2025-08-20 14:22:35 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.ModelController:
	
2025-08-20 14:22:35 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.OrderController:
	
2025-08-20 14:22:35 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.ProductController:
	
2025-08-20 14:22:35 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.TrainingController:
	
2025-08-20 14:22:35 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.UserController:
	
2025-08-20 14:22:35 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.s.b.a.w.s.e.BasicErrorController:
	
2025-08-20 14:22:35 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-20 14:22:35 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 150 mappings in 'requestMappingHandlerMapping'
2025-08-20 14:22:35 [main] DEBUG o.s.web.servlet.handler.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /uploads/**, /images/**] in 'resourceHandlerMapping'
2025-08-20 14:22:35 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-20 14:22:35 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2025-08-20 14:22:35 [main] DEBUG o.s.d.redis.listener.RedisMessageListenerContainer - Starting RedisMessageListenerContainer...
2025-08-20 14:22:35 [main] DEBUG o.s.d.redis.listener.RedisMessageListenerContainer - Postpone listening for Redis messages until actual listeners are added.
2025-08-20 14:22:36 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8082"]
2025-08-20 14:22:36 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8082 (http) with context path '/admin'
2025-08-20 14:22:36 [main] DEBUG org.springframework.web.SimpLogging - clientOutboundChannel added SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2025-08-20 14:22:36 [main] DEBUG org.springframework.web.SimpLogging - clientInboundChannel added WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2025-08-20 14:22:36 [main] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - Starting...
2025-08-20 14:22:36 [main] DEBUG org.springframework.web.SimpLogging - clientInboundChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@250967f1]
2025-08-20 14:22:36 [main] DEBUG org.springframework.web.SimpLogging - brokerChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@250967f1]
2025-08-20 14:22:36 [main] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@250967f1]]
2025-08-20 14:22:36 [main] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - Started.
2025-08-20 14:22:36 [main] DEBUG org.springframework.web.SimpLogging - clientInboundChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-08-20 14:22:36 [main] DEBUG org.springframework.web.SimpLogging - brokerChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-08-20 14:22:36 [main] INFO  org.example.admin.AdminApplication - Started AdminApplication in 6.651 seconds (JVM running for 7.116)
2025-08-20 14:22:48 [http-nio-8082-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/admin] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-20 14:22:48 [http-nio-8082-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-20 14:22:48 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-20 14:22:48 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-20 14:22:48 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-20 14:22:48 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3069ab6b
2025-08-20 14:22:48 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@5592acb4
2025-08-20 14:22:48 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-20 14:22:48 [http-nio-8082-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2025-08-20 14:22:48 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/user/list", parameters={}
2025-08-20 14:22:48 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/user/list, IP: 0:0:0:0:0:0:0:1
2025-08-20 14:22:48 [http-nio-8082-exec-1] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: curl/8.7.1
2025-08-20 14:22:48 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/user/list?page=1&size=10
2025-08-20 14:22:48 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 14:22:48 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [*/*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 14:22:48 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=500, message=获取用户列表失败: 获取用户列表失败: I/O error on GET request for "http://localhost:8080/api (truncated)...]
2025-08-20 14:22:48 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/user/list, 耗时: 360ms, 状态: 200
2025-08-20 14:22:48 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 14:22:56 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/?ide_webview_request_time=1755527809880", parameters={masked}
2025-08-20 14:22:56 [http-nio-8082-exec-3] DEBUG o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/]]
2025-08-20 14:22:56 [http-nio-8082-exec-3] DEBUG o.s.w.servlet.resource.ResourceHttpRequestHandler - Resource not found
2025-08-20 14:22:56 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-20 14:22:56 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/admin/error?ide_webview_request_time=1755527809880", parameters={masked}
2025-08-20 14:22:56 [http-nio-8082-exec-3] DEBUG o.s.w.servlet.view.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, text/html;q=0.8]
2025-08-20 14:22:56 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-08-20 14:23:35 [MessageBroker-1] INFO  o.s.web.socket.config.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2025-08-20 14:33:36 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/?ide_webview_request_time=1755527809880", parameters={masked}
2025-08-20 14:33:36 [http-nio-8082-exec-5] DEBUG o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/]]
2025-08-20 14:33:36 [http-nio-8082-exec-5] DEBUG o.s.w.servlet.resource.ResourceHttpRequestHandler - Resource not found
2025-08-20 14:33:36 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-20 14:33:36 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/admin/error?ide_webview_request_time=1755527809880", parameters={masked}
2025-08-20 14:33:36 [http-nio-8082-exec-5] DEBUG o.s.w.servlet.view.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, text/html;q=0.8]
2025-08-20 14:33:36 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-08-20 14:33:36 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/?ide_webview_request_time=1755527809880", parameters={masked}
2025-08-20 14:33:36 [http-nio-8082-exec-6] DEBUG o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/]]
2025-08-20 14:33:36 [http-nio-8082-exec-6] DEBUG o.s.w.servlet.resource.ResourceHttpRequestHandler - Resource not found
2025-08-20 14:33:36 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-20 14:33:36 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/admin/error?ide_webview_request_time=1755527809880", parameters={masked}
2025-08-20 14:33:36 [http-nio-8082-exec-6] DEBUG o.s.w.servlet.view.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, text/html;q=0.8]
2025-08-20 14:33:36 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-08-20 14:40:42 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/?ide_webview_request_time=1755527809880", parameters={masked}
2025-08-20 14:40:42 [http-nio-8082-exec-9] DEBUG o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/]]
2025-08-20 14:40:42 [http-nio-8082-exec-9] DEBUG o.s.w.servlet.resource.ResourceHttpRequestHandler - Resource not found
2025-08-20 14:40:42 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-20 14:40:42 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/admin/error?ide_webview_request_time=1755527809880", parameters={masked}
2025-08-20 14:40:42 [http-nio-8082-exec-9] DEBUG o.s.w.servlet.view.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, text/html;q=0.8]
2025-08-20 14:40:42 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-08-20 14:40:51 [SpringApplicationShutdownHook] DEBUG o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@514646ef, started on Wed Aug 20 14:22:30 CST 2025
2025-08-20 14:40:51 [SpringApplicationShutdownHook] DEBUG org.springframework.web.SimpLogging - clientOutboundChannel removed SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2025-08-20 14:40:51 [SpringApplicationShutdownHook] DEBUG org.springframework.web.SimpLogging - clientInboundChannel removed WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2025-08-20 14:40:51 [SpringApplicationShutdownHook] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - Stopping...
2025-08-20 14:40:51 [SpringApplicationShutdownHook] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@250967f1]]
2025-08-20 14:40:51 [SpringApplicationShutdownHook] DEBUG org.springframework.web.SimpLogging - clientInboundChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@250967f1]
2025-08-20 14:40:51 [SpringApplicationShutdownHook] DEBUG org.springframework.web.SimpLogging - brokerChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@250967f1]
2025-08-20 14:40:51 [SpringApplicationShutdownHook] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - Stopped.
2025-08-20 14:40:51 [SpringApplicationShutdownHook] DEBUG org.springframework.web.SimpLogging - clientInboundChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-08-20 14:40:51 [SpringApplicationShutdownHook] DEBUG org.springframework.web.SimpLogging - brokerChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-08-20 14:40:51 [SpringApplicationShutdownHook] DEBUG o.s.d.redis.listener.RedisMessageListenerContainer - Stopped RedisMessageListenerContainer.
2025-08-20 14:40:51 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-08-20 14:40:51 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-08-20 14:44:05 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-08-20 14:44:05 [main] INFO  org.example.admin.AdminApplication - Starting AdminApplication using Java 1.8.0_351 on 192.168.2.7 with PID 63065 (/Users/peng/Downloads/full-goods-parent/full-goods-admin/target/classes started by peng in /Users/peng/Downloads/full-goods-parent/full-goods-admin)
2025-08-20 14:44:05 [main] DEBUG org.example.admin.AdminApplication - Running with Spring Boot v2.7.5, Spring v5.3.23
2025-08-20 14:44:05 [main] INFO  org.example.admin.AdminApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-20 14:44:05 [main] DEBUG o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@514646ef
2025-08-20 14:44:06 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-20 14:44:06 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-20 14:44:06 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 24 ms. Found 0 Redis repository interfaces.
2025-08-20 14:44:06 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - Skipping MapperFactoryBean with name 'adminBannerMapper' and 'org.example.admin.mapper.AdminBannerMapper' mapperInterface. Bean already defined with the same name!
2025-08-20 14:44:06 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - Skipping MapperFactoryBean with name 'categoryMapper' and 'org.example.admin.mapper.CategoryMapper' mapperInterface. Bean already defined with the same name!
2025-08-20 14:44:06 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[org.example.common.mapper, org.example.admin.mapper]' package. Please check your configuration.
2025-08-20 14:44:07 [main] DEBUG o.s.b.w.e.tomcat.TomcatServletWebServerFactory - Code archive: /Users/peng/.m2/repository/org/springframework/boot/spring-boot/2.7.5/spring-boot-2.7.5.jar
2025-08-20 14:44:07 [main] DEBUG o.s.b.w.e.tomcat.TomcatServletWebServerFactory - Code archive: /Users/peng/.m2/repository/org/springframework/boot/spring-boot/2.7.5/spring-boot-2.7.5.jar
2025-08-20 14:44:07 [main] DEBUG o.s.b.w.e.tomcat.TomcatServletWebServerFactory - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2025-08-20 14:44:07 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8082 (http)
2025-08-20 14:44:07 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8082"]
2025-08-20 14:44:07 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-08-20 14:44:07 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.68]
2025-08-20 14:44:07 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/admin] - Initializing Spring embedded WebApplicationContext
2025-08-20 14:44:07 [main] DEBUG o.s.b.w.s.c.ServletWebServerApplicationContext - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2025-08-20 14:44:07 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2525 ms
2025-08-20 14:44:07 [main] DEBUG o.s.b.web.servlet.ServletContextInitializerBeans - Mapping filters: filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, hiddenHttpMethodFilter urls=[/*] order=2147483647
2025-08-20 14:44:07 [main] DEBUG o.s.b.web.servlet.ServletContextInitializerBeans - Mapping servlets: dispatcherServlet urls=[/], statViewServlet urls=[/druid/*]
2025-08-20 14:44:07 [main] DEBUG o.s.b.w.servlet.filter.OrderedRequestContextFilter - Filter 'requestContextFilter' configured for use
2025-08-20 14:44:07 [main] DEBUG o.s.web.filter.HiddenHttpMethodFilter - Filter 'hiddenHttpMethodFilter' configured for use
2025-08-20 14:44:07 [main] DEBUG o.s.b.w.s.filter.OrderedCharacterEncodingFilter - Filter 'characterEncodingFilter' configured for use
2025-08-20 14:44:07 [main] DEBUG o.s.b.web.servlet.filter.OrderedFormContentFilter - Filter 'formContentFilter' configured for use
2025-08-20 14:44:08 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2025-08-20 14:44:09 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-08-20 14:44:09 [main] DEBUG o.s.w.s.server.support.WebSocketHandlerMapping - Patterns [/ws/**] in 'stompWebSocketHandlerMapping'
2025-08-20 14:44:09 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.AdminMessageController:
	
2025-08-20 14:44:09 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.AdminMessageSendingController:
	
2025-08-20 14:44:09 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.AdminMessageTemplateController:
	
2025-08-20 14:44:09 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.AuthController:
	
2025-08-20 14:44:09 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.BannerController:
	
2025-08-20 14:44:09 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.CategoryController:
	
2025-08-20 14:44:09 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.DashboardController:
	
2025-08-20 14:44:09 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.DeliveryController:
	
2025-08-20 14:44:09 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.ModelController:
	
2025-08-20 14:44:09 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.OrderController:
	
2025-08-20 14:44:09 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.ProductController:
	
2025-08-20 14:44:09 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.TrainingController:
	
2025-08-20 14:44:09 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.UserController:
	
2025-08-20 14:44:09 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.s.b.a.w.s.e.BasicErrorController:
	
2025-08-20 14:44:10 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-20 14:44:10 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 150 mappings in 'requestMappingHandlerMapping'
2025-08-20 14:44:10 [main] DEBUG o.s.web.servlet.handler.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /uploads/**, /images/**] in 'resourceHandlerMapping'
2025-08-20 14:44:10 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-20 14:44:10 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2025-08-20 14:44:10 [main] DEBUG o.s.d.redis.listener.RedisMessageListenerContainer - Starting RedisMessageListenerContainer...
2025-08-20 14:44:10 [main] DEBUG o.s.d.redis.listener.RedisMessageListenerContainer - Postpone listening for Redis messages until actual listeners are added.
2025-08-20 14:44:10 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8082"]
2025-08-20 14:44:10 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8082 (http) with context path '/admin'
2025-08-20 14:44:10 [main] DEBUG org.springframework.web.SimpLogging - clientOutboundChannel added SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2025-08-20 14:44:10 [main] DEBUG org.springframework.web.SimpLogging - clientInboundChannel added WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2025-08-20 14:44:10 [main] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - Starting...
2025-08-20 14:44:10 [main] DEBUG org.springframework.web.SimpLogging - clientInboundChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@250967f1]
2025-08-20 14:44:10 [main] DEBUG org.springframework.web.SimpLogging - brokerChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@250967f1]
2025-08-20 14:44:10 [main] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@250967f1]]
2025-08-20 14:44:10 [main] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - Started.
2025-08-20 14:44:10 [main] DEBUG org.springframework.web.SimpLogging - clientInboundChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-08-20 14:44:10 [main] DEBUG org.springframework.web.SimpLogging - brokerChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-08-20 14:44:10 [main] INFO  org.example.admin.AdminApplication - Started AdminApplication in 6.615 seconds (JVM running for 7.083)
2025-08-20 14:45:09 [MessageBroker-1] INFO  o.s.web.socket.config.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2025-08-20 14:52:58 [http-nio-8082-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/admin] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-20 14:52:58 [http-nio-8082-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-20 14:52:58 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-20 14:52:58 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-20 14:52:58 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-20 14:52:58 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1f566d9e
2025-08-20 14:52:58 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@63ffd14d
2025-08-20 14:52:58 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-20 14:52:58 [http-nio-8082-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 39 ms
2025-08-20 14:52:58 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/training/model-types", parameters={}
2025-08-20 14:52:58 [http-nio-8082-exec-1] DEBUG o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/]]
2025-08-20 14:52:58 [http-nio-8082-exec-1] DEBUG o.s.w.servlet.resource.ResourceHttpRequestHandler - Resource not found
2025-08-20 14:52:58 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-20 14:52:58 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/admin/error", parameters={}
2025-08-20 14:52:58 [http-nio-8082-exec-1] DEBUG o.s.w.servlet.view.ContentNegotiatingViewResolver - Selected 'text/html' given [text/html, text/html;q=0.8]
2025-08-20 14:52:58 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-08-20 14:53:16 [SpringApplicationShutdownHook] DEBUG o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@514646ef, started on Wed Aug 20 14:44:05 CST 2025
2025-08-20 14:53:16 [SpringApplicationShutdownHook] DEBUG org.springframework.web.SimpLogging - clientOutboundChannel removed SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2025-08-20 14:53:16 [SpringApplicationShutdownHook] DEBUG org.springframework.web.SimpLogging - clientInboundChannel removed WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2025-08-20 14:53:16 [SpringApplicationShutdownHook] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - Stopping...
2025-08-20 14:53:16 [SpringApplicationShutdownHook] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@250967f1]]
2025-08-20 14:53:16 [SpringApplicationShutdownHook] DEBUG org.springframework.web.SimpLogging - clientInboundChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@250967f1]
2025-08-20 14:53:16 [SpringApplicationShutdownHook] DEBUG org.springframework.web.SimpLogging - brokerChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@250967f1]
2025-08-20 14:53:16 [SpringApplicationShutdownHook] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - Stopped.
2025-08-20 14:53:16 [SpringApplicationShutdownHook] DEBUG org.springframework.web.SimpLogging - clientInboundChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-08-20 14:53:16 [SpringApplicationShutdownHook] DEBUG org.springframework.web.SimpLogging - brokerChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-08-20 14:53:16 [SpringApplicationShutdownHook] DEBUG o.s.d.redis.listener.RedisMessageListenerContainer - Stopped RedisMessageListenerContainer.
2025-08-20 14:53:16 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-08-20 14:53:16 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-08-20 14:55:43 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-08-20 14:55:43 [main] INFO  org.example.admin.AdminApplication - Starting AdminApplication using Java 1.8.0_351 on 192.168.2.7 with PID 27940 (/Users/peng/Downloads/full-goods-parent/full-goods-admin/target/classes started by peng in /Users/peng/Downloads/full-goods-parent/full-goods-admin)
2025-08-20 14:55:43 [main] DEBUG org.example.admin.AdminApplication - Running with Spring Boot v2.7.5, Spring v5.3.23
2025-08-20 14:55:43 [main] INFO  org.example.admin.AdminApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-20 14:55:43 [main] DEBUG o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@514646ef
2025-08-20 14:55:44 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-20 14:55:44 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-20 14:55:44 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 25 ms. Found 0 Redis repository interfaces.
2025-08-20 14:55:44 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - Skipping MapperFactoryBean with name 'adminBannerMapper' and 'org.example.admin.mapper.AdminBannerMapper' mapperInterface. Bean already defined with the same name!
2025-08-20 14:55:44 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - Skipping MapperFactoryBean with name 'categoryMapper' and 'org.example.admin.mapper.CategoryMapper' mapperInterface. Bean already defined with the same name!
2025-08-20 14:55:44 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[org.example.common.mapper, org.example.admin.mapper]' package. Please check your configuration.
2025-08-20 14:55:45 [main] DEBUG o.s.b.w.e.tomcat.TomcatServletWebServerFactory - Code archive: /Users/peng/.m2/repository/org/springframework/boot/spring-boot/2.7.5/spring-boot-2.7.5.jar
2025-08-20 14:55:45 [main] DEBUG o.s.b.w.e.tomcat.TomcatServletWebServerFactory - Code archive: /Users/peng/.m2/repository/org/springframework/boot/spring-boot/2.7.5/spring-boot-2.7.5.jar
2025-08-20 14:55:45 [main] DEBUG o.s.b.w.e.tomcat.TomcatServletWebServerFactory - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2025-08-20 14:55:45 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8082 (http)
2025-08-20 14:55:45 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8082"]
2025-08-20 14:55:45 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-08-20 14:55:45 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.68]
2025-08-20 14:55:45 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/admin] - Initializing Spring embedded WebApplicationContext
2025-08-20 14:55:45 [main] DEBUG o.s.b.w.s.c.ServletWebServerApplicationContext - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2025-08-20 14:55:45 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2266 ms
2025-08-20 14:55:46 [main] DEBUG o.s.b.web.servlet.ServletContextInitializerBeans - Mapping filters: filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, hiddenHttpMethodFilter urls=[/*] order=2147483647
2025-08-20 14:55:46 [main] DEBUG o.s.b.web.servlet.ServletContextInitializerBeans - Mapping servlets: dispatcherServlet urls=[/], statViewServlet urls=[/druid/*]
2025-08-20 14:55:46 [main] DEBUG o.s.b.w.servlet.filter.OrderedRequestContextFilter - Filter 'requestContextFilter' configured for use
2025-08-20 14:55:46 [main] DEBUG o.s.web.filter.HiddenHttpMethodFilter - Filter 'hiddenHttpMethodFilter' configured for use
2025-08-20 14:55:46 [main] DEBUG o.s.b.w.s.filter.OrderedCharacterEncodingFilter - Filter 'characterEncodingFilter' configured for use
2025-08-20 14:55:46 [main] DEBUG o.s.b.web.servlet.filter.OrderedFormContentFilter - Filter 'formContentFilter' configured for use
2025-08-20 14:55:46 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2025-08-20 14:55:47 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-08-20 14:55:48 [main] DEBUG o.s.w.s.server.support.WebSocketHandlerMapping - Patterns [/ws/**] in 'stompWebSocketHandlerMapping'
2025-08-20 14:55:48 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.AdminMessageController:
	
2025-08-20 14:55:48 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.AdminMessageSendingController:
	
2025-08-20 14:55:48 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.AdminMessageTemplateController:
	
2025-08-20 14:55:48 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.AuthController:
	
2025-08-20 14:55:48 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.BannerController:
	
2025-08-20 14:55:48 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.CategoryController:
	
2025-08-20 14:55:48 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.DashboardController:
	
2025-08-20 14:55:48 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.DeliveryController:
	
2025-08-20 14:55:48 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.ModelController:
	
2025-08-20 14:55:48 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.OrderController:
	
2025-08-20 14:55:48 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.ProductController:
	
2025-08-20 14:55:48 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.TrainingController:
	
2025-08-20 14:55:48 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.UserController:
	
2025-08-20 14:55:48 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.s.b.a.w.s.e.BasicErrorController:
	
2025-08-20 14:55:48 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-20 14:55:48 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 150 mappings in 'requestMappingHandlerMapping'
2025-08-20 14:55:48 [main] DEBUG o.s.web.servlet.handler.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /uploads/**, /images/**] in 'resourceHandlerMapping'
2025-08-20 14:55:48 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-20 14:55:48 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2025-08-20 14:55:48 [main] DEBUG o.s.d.redis.listener.RedisMessageListenerContainer - Starting RedisMessageListenerContainer...
2025-08-20 14:55:48 [main] DEBUG o.s.d.redis.listener.RedisMessageListenerContainer - Postpone listening for Redis messages until actual listeners are added.
2025-08-20 14:55:49 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8082"]
2025-08-20 14:55:49 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8082 (http) with context path '/admin'
2025-08-20 14:55:49 [main] DEBUG org.springframework.web.SimpLogging - clientOutboundChannel added SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2025-08-20 14:55:49 [main] DEBUG org.springframework.web.SimpLogging - clientInboundChannel added WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2025-08-20 14:55:49 [main] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - Starting...
2025-08-20 14:55:49 [main] DEBUG org.springframework.web.SimpLogging - clientInboundChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@250967f1]
2025-08-20 14:55:49 [main] DEBUG org.springframework.web.SimpLogging - brokerChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@250967f1]
2025-08-20 14:55:49 [main] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@250967f1]]
2025-08-20 14:55:49 [main] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - Started.
2025-08-20 14:55:49 [main] DEBUG org.springframework.web.SimpLogging - clientInboundChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-08-20 14:55:49 [main] DEBUG org.springframework.web.SimpLogging - brokerChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-08-20 14:55:49 [main] INFO  org.example.admin.AdminApplication - Started AdminApplication in 6.228 seconds (JVM running for 6.669)
2025-08-20 14:56:48 [MessageBroker-1] INFO  o.s.web.socket.config.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2025-08-20 15:00:29 [http-nio-8082-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/admin] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-20 15:00:29 [http-nio-8082-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-20 15:00:29 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-20 15:00:29 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-20 15:00:29 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-20 15:00:29 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@68c2c7ea
2025-08-20 15:00:29 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@11f9719a
2025-08-20 15:00:29 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-20 15:00:29 [http-nio-8082-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 19 ms
2025-08-20 15:00:29 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/admin/auth/send-code", parameters={}
2025-08-20 15:00:30 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [{phone=19127810932}]
2025-08-20 15:00:30 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:00:30 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data=验证码发送成功)]
2025-08-20 15:00:30 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:01:22 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/admin/auth/login", parameters={}
2025-08-20 15:01:22 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [{phone=19127810932, code=282905}]
2025-08-20 15:01:22 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:01:22 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={expiresIn=86400, loginTime=Wed Aug 20 15:01:22 CST 2025, phone= (truncated)...]
2025-08-20 15:01:22 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:01:22 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/dashboard/sales-trend?days=7", parameters={masked}
2025-08-20 15:01:22 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/dashboard/delivery-efficiency", parameters={}
2025-08-20 15:01:22 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/dashboard/delay-reasons", parameters={}
2025-08-20 15:01:22 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/order/statistics", parameters={}
2025-08-20 15:01:22 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/dashboard/promotion-effect", parameters={}
2025-08-20 15:01:22 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/dashboard/delay-reasons, IP: 127.0.0.1
2025-08-20 15:01:22 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/dashboard/promotion-effect, IP: 127.0.0.1
2025-08-20 15:01:22 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/dashboard/delivery-efficiency, IP: 127.0.0.1
2025-08-20 15:01:22 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/dashboard/sales-trend, 参数: days=7, IP: 127.0.0.1
2025-08-20 15:01:22 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/order/statistics, IP: 127.0.0.1
2025-08-20 15:01:22 [http-nio-8082-exec-4] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:01:22 [http-nio-8082-exec-5] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:01:22 [http-nio-8082-exec-6] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:01:22 [http-nio-8082-exec-3] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:01:22 [http-nio-8082-exec-7] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:01:22 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:01:22 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:01:22 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:01:22 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={revenue=[45000, 32000, 28000, 20000], channels=[微信小程序, APP, H5, (truncated)...]
2025-08-20 15:01:22 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={values=[65, 25, 8, 2], categories=[当日发货, 次日发货, 2-3天发货, 3天以上]})]
2025-08-20 15:01:22 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data=[{reason=库存不足, impact=高, count=15}, {reason=商品缺货, impact=中, coun (truncated)...]
2025-08-20 15:01:22 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/dashboard/delay-reasons, 耗时: 118ms, 状态: 200
2025-08-20 15:01:22 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/dashboard/delivery-efficiency, 耗时: 118ms, 状态: 200
2025-08-20 15:01:22 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:01:22 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:01:22 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/dashboard/promotion-effect, 耗时: 138ms, 状态: 200
2025-08-20 15:01:22 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:01:22 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/order/admin/statistics
2025-08-20 15:01:22 [http-nio-8082-exec-4] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/order/sales-trend?days=7
2025-08-20 15:01:22 [http-nio-8082-exec-4] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:01:22 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:01:22 [http-nio-8082-exec-4] DEBUG org.springframework.web.client.RestTemplate - Response 404 NOT_FOUND
2025-08-20 15:01:22 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:01:22 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={dates=[2024-01-21, 2024-01-20, 2024-01-19, 2024-01-18, 2024-01- (truncated)...]
2025-08-20 15:01:22 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/dashboard/sales-trend, 耗时: 326ms, 状态: 200
2025-08-20 15:01:22 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:01:22 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:01:22 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:01:22 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:01:22 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={code=200, message=操作成功, data={cancelledOrders=1, shippedOrders= (truncated)...]
2025-08-20 15:01:22 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/order/statistics, 耗时: 405ms, 状态: 200
2025-08-20 15:01:22 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:01:30 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/categories", parameters={}
2025-08-20 15:01:30 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/list?page=1&size=5&search=&category=&status=", parameters={masked}
2025-08-20 15:01:30 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/list, 参数: page=1&size=5&search=&category=&status=, IP: 127.0.0.1
2025-08-20 15:01:30 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/categories, IP: 127.0.0.1
2025-08-20 15:01:30 [http-nio-8082-exec-8] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:01:30 [http-nio-8082-exec-9] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:01:31 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/categories
2025-08-20 15:01:31 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:01:31 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:01:31 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.List<java.lang.String>]
2025-08-20 15:01:31 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:01:31 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data=[热带水果, 温带水果, 亚热带水果, 进口水果, 有机水果])]
2025-08-20 15:01:31 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:01:31 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/categories, 耗时: 91ms, 状态: 200
2025-08-20 15:01:31 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/admin/list?page=1&size=5
2025-08-20 15:01:31 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:01:31 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:01:31 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:01:31 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:01:31 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=15, size=5, page=1, list=[{id=1, name=测试商品, description=n (truncated)...]
2025-08-20 15:01:31 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/list, 耗时: 344ms, 状态: 200
2025-08-20 15:01:31 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:01:33 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/category/list?page=1&size=5&search=", parameters={masked}
2025-08-20 15:01:33 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/category/list, 参数: page=1&size=5&search=, IP: 127.0.0.1
2025-08-20 15:01:33 [http-nio-8082-exec-10] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:01:33 [http-nio-8082-exec-10] DEBUG o.e.a.m.CategoryMapper.selectByConditions_COUNT - ==>  Preparing: SELECT count(0) FROM t_fruit_category
2025-08-20 15:01:33 [http-nio-8082-exec-10] DEBUG o.e.a.m.CategoryMapper.selectByConditions_COUNT - ==> Parameters: 
2025-08-20 15:01:33 [http-nio-8082-exec-10] DEBUG o.e.a.m.CategoryMapper.selectByConditions_COUNT - <==      Total: 1
2025-08-20 15:01:33 [http-nio-8082-exec-10] DEBUG o.e.admin.mapper.CategoryMapper.selectByConditions - ==>  Preparing: SELECT id, name, icon_name, icon_url, sort_order, status, create_time, update_time, create_by, update_by, remark FROM t_fruit_category ORDER BY sort_order ASC, id ASC LIMIT ?
2025-08-20 15:01:33 [http-nio-8082-exec-10] DEBUG o.e.admin.mapper.CategoryMapper.selectByConditions - ==> Parameters: 5(Integer)
2025-08-20 15:01:33 [http-nio-8082-exec-10] DEBUG o.e.admin.mapper.CategoryMapper.selectByConditions - <==      Total: 5
2025-08-20 15:01:33 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:01:33 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data={total=6, pages=2, size=5, page=1, list=[{iconName=Apple, createTime=2025-08-20 15:0 (truncated)...]
2025-08-20 15:01:33 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/category/list, 耗时: 336ms, 状态: 200
2025-08-20 15:01:33 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:01:34 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/banner/list?page=1&size=5&search=", parameters={masked}
2025-08-20 15:01:34 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/banner/list, 参数: page=1&size=5&search=, IP: 127.0.0.1
2025-08-20 15:01:34 [http-nio-8082-exec-1] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:01:34 [http-nio-8082-exec-1] DEBUG o.e.admin.mapper.AdminBannerMapper.countBanners - ==>  Preparing: SELECT COUNT(*) FROM t_banner
2025-08-20 15:01:34 [http-nio-8082-exec-1] DEBUG o.e.admin.mapper.AdminBannerMapper.countBanners - ==> Parameters: 
2025-08-20 15:01:34 [http-nio-8082-exec-1] DEBUG o.e.admin.mapper.AdminBannerMapper.countBanners - <==      Total: 1
2025-08-20 15:01:34 [http-nio-8082-exec-1] DEBUG o.e.a.mapper.AdminBannerMapper.selectBannerList - ==>  Preparing: SELECT id, image_url, link_url, sort, status, create_time, update_time, create_by, update_by, remark FROM t_banner ORDER BY sort ASC, create_time DESC LIMIT ?, ?
2025-08-20 15:01:34 [http-nio-8082-exec-1] DEBUG o.e.a.mapper.AdminBannerMapper.selectBannerList - ==> Parameters: 0(Integer), 5(Integer)
2025-08-20 15:01:34 [http-nio-8082-exec-1] DEBUG o.e.a.mapper.AdminBannerMapper.selectBannerList - <==      Total: 5
2025-08-20 15:01:34 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:01:34 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data={total=5, size=5, page=1, list=[Banner(id=1, imageUrl=/uploads/images/2025/08/17/601 (truncated)...]
2025-08-20 15:01:34 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/banner/list, 耗时: 65ms, 状态: 200
2025-08-20 15:01:34 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:01:36 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/order/list?page=1&size=5&search=&status=", parameters={masked}
2025-08-20 15:01:36 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/delivery/express-companies", parameters={}
2025-08-20 15:01:36 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/delivery/express-companies, IP: 127.0.0.1
2025-08-20 15:01:36 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/order/list, 参数: page=1&size=5&search=&status=, IP: 127.0.0.1
2025-08-20 15:01:36 [http-nio-8082-exec-5] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:01:36 [http-nio-8082-exec-2] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:01:36 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:01:36 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data=[{code=SF, name=顺丰速运}, {code=YTO, name=圆通速递}, {code=ZTO, name=中通快递}, {code=STO, name (truncated)...]
2025-08-20 15:01:36 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/delivery/express-companies, 耗时: 12ms, 状态: 200
2025-08-20 15:01:36 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:01:36 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/order/admin/list?page=1&size=5
2025-08-20 15:01:36 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:01:37 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:01:37 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:01:37 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:01:37 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=5, size=5, page=1, list=[{id=9, orderNo=17555523739897bbe (truncated)...]
2025-08-20 15:01:37 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/order/list, 耗时: 180ms, 状态: 200
2025-08-20 15:01:37 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:01:38 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/delivery/express-companies", parameters={}
2025-08-20 15:01:38 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/delivery/orders?page=1&size=10", parameters={masked}
2025-08-20 15:01:38 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/delivery/orders, 参数: page=1&size=10, IP: 127.0.0.1
2025-08-20 15:01:38 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/delivery/express-companies, IP: 127.0.0.1
2025-08-20 15:01:38 [http-nio-8082-exec-7] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:01:38 [http-nio-8082-exec-6] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:01:38 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:01:38 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data=[{code=SF, name=顺丰速运}, {code=YTO, name=圆通速递}, {code=ZTO, name=中通快递}, {code=STO, name (truncated)...]
2025-08-20 15:01:38 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/delivery/express-companies, 耗时: 9ms, 状态: 200
2025-08-20 15:01:38 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:01:38 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/order/admin/list?page=1&size=10&status=paid
2025-08-20 15:01:38 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:01:38 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:01:38 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:01:38 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:01:38 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data={total=2, size=2, page=1, list=[{id=8, orderNo=1755282107411183054, userId=2, status (truncated)...]
2025-08-20 15:01:38 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:01:38 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/delivery/orders, 耗时: 76ms, 状态: 200
2025-08-20 15:01:40 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/user/list?page=1&size=5&search=&status=", parameters={masked}
2025-08-20 15:01:40 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/user/list, 参数: page=1&size=5&search=&status=, IP: 127.0.0.1
2025-08-20 15:01:40 [http-nio-8082-exec-4] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:01:40 [http-nio-8082-exec-4] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/user/list?page=1&size=5
2025-08-20 15:01:40 [http-nio-8082-exec-4] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:01:40 [http-nio-8082-exec-4] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:01:40 [http-nio-8082-exec-4] DEBUG org.springframework.web.client.RestTemplate - Reading to [org.example.common.response.Result<?>]
2025-08-20 15:01:40 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:01:40 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=8, size=5, page=1, list=[{createTime=2025-08-15T15:49:36. (truncated)...]
2025-08-20 15:01:40 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:01:40 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/user/list, 耗时: 84ms, 状态: 200
2025-08-20 15:01:46 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/message-templates/list?page=1&size=10&templateName=", parameters={masked}
2025-08-20 15:01:46 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/message-templates/statistics", parameters={}
2025-08-20 15:01:46 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/message-templates/statistics, IP: 127.0.0.1
2025-08-20 15:01:46 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/message-templates/list, 参数: page=1&size=10&templateName=, IP: 127.0.0.1
2025-08-20 15:01:46 [http-nio-8082-exec-8] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:01:46 [http-nio-8082-exec-3] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:01:46 [http-nio-8082-exec-8] INFO  o.e.a.controller.AdminMessageTemplateController - 获取模板统计数据请求
2025-08-20 15:01:46 [http-nio-8082-exec-3] INFO  o.e.a.controller.AdminMessageTemplateController - 获取消息模板列表请求，页码：1，大小：10，模板名称：，消息类型：null，状态：null
2025-08-20 15:01:46 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/message-templates/statistics
2025-08-20 15:01:46 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/message-templates?page=1&size=10
2025-08-20 15:01:46 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:01:46 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:01:46 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:01:46 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - Reading to [org.example.common.response.Result<?>]
2025-08-20 15:01:46 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:01:46 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - Reading to [org.example.common.response.Result<?>]
2025-08-20 15:01:46 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:01:46 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:01:46 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={enabledCount=5, typeStatistics={1=2, 2=1, 5=2}, disabledCount=0 (truncated)...]
2025-08-20 15:01:46 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=5, list=[{id=55, templateCode=TEST_DB_CONNECTION, templat (truncated)...]
2025-08-20 15:01:46 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/message-templates/statistics, 耗时: 124ms, 状态: 200
2025-08-20 15:01:46 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:01:46 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/message-templates/list, 耗时: 126ms, 状态: 200
2025-08-20 15:01:46 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:01:50 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/message-templates/enabled", parameters={}
2025-08-20 15:01:50 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/message-templates/enabled, IP: 127.0.0.1
2025-08-20 15:01:50 [http-nio-8082-exec-9] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:01:50 [http-nio-8082-exec-9] INFO  o.e.a.controller.AdminMessageTemplateController - 获取启用状态的模板列表请求
2025-08-20 15:01:50 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/message-templates/enabled
2025-08-20 15:01:50 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:01:50 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:01:50 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - Reading to [org.example.common.response.Result<?>]
2025-08-20 15:01:50 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:01:50 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data=[{id=55, templateCode=TEST_DB_CONNECTION, templateName=数据库连接测试,  (truncated)...]
2025-08-20 15:01:50 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/message-templates/enabled, 耗时: 76ms, 状态: 200
2025-08-20 15:01:50 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:01:52 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/message-templates/list?page=1&size=10&templateName=", parameters={masked}
2025-08-20 15:01:52 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/message-templates/statistics", parameters={}
2025-08-20 15:01:52 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/message-templates/statistics, IP: 127.0.0.1
2025-08-20 15:01:52 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/message-templates/list, 参数: page=1&size=10&templateName=, IP: 127.0.0.1
2025-08-20 15:01:52 [http-nio-8082-exec-10] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:01:52 [http-nio-8082-exec-1] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:01:52 [http-nio-8082-exec-1] INFO  o.e.a.controller.AdminMessageTemplateController - 获取模板统计数据请求
2025-08-20 15:01:52 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/message-templates/statistics
2025-08-20 15:01:52 [http-nio-8082-exec-10] INFO  o.e.a.controller.AdminMessageTemplateController - 获取消息模板列表请求，页码：1，大小：10，模板名称：，消息类型：null，状态：null
2025-08-20 15:01:52 [http-nio-8082-exec-10] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/message-templates?page=1&size=10
2025-08-20 15:01:52 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:01:52 [http-nio-8082-exec-10] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:01:52 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:01:52 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - Reading to [org.example.common.response.Result<?>]
2025-08-20 15:01:52 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:01:52 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={enabledCount=5, typeStatistics={1=2, 2=1, 5=2}, disabledCount=0 (truncated)...]
2025-08-20 15:01:52 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:01:52 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/message-templates/statistics, 耗时: 32ms, 状态: 200
2025-08-20 15:01:52 [http-nio-8082-exec-10] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:01:52 [http-nio-8082-exec-10] DEBUG org.springframework.web.client.RestTemplate - Reading to [org.example.common.response.Result<?>]
2025-08-20 15:01:52 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:01:52 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=5, list=[{id=55, templateCode=TEST_DB_CONNECTION, templat (truncated)...]
2025-08-20 15:01:52 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/message-templates/list, 耗时: 51ms, 状态: 200
2025-08-20 15:01:52 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:01:53 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/model/list", parameters={}
2025-08-20 15:01:53 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/model/list, IP: 127.0.0.1
2025-08-20 15:01:53 [http-nio-8082-exec-5] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:01:53 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:01:53 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=3, size=10, page=1, list=[{provider=OpenAI, createTime=20 (truncated)...]
2025-08-20 15:01:53 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/model/list, 耗时: 10ms, 状态: 200
2025-08-20 15:01:53 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:01:55 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/statistics", parameters={}
2025-08-20 15:01:55 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/statistics, IP: 127.0.0.1
2025-08-20 15:01:55 [http-nio-8082-exec-2] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:01:55 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/training/statistics
2025-08-20 15:01:55 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:01:55 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Response 404 NOT_FOUND
2025-08-20 15:01:55 [http-nio-8082-exec-2] ERROR org.example.admin.service.impl.TrainingServiceImpl - 获取训练统计信息失败
org.springframework.web.client.HttpClientErrorException$NotFound: 404 : "{"timestamp":"2025-08-20T07:01:55.141+00:00","status":404,"error":"Not Found","message":"No message available","path":"/api/training/statistics"}"
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:113)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:168)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:631)
	at org.example.admin.service.impl.TrainingServiceImpl.getTrainingStatistics(TrainingServiceImpl.java:413)
	at org.example.admin.controller.TrainingController.getTrainingStatistics(TrainingController.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:670)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2025-08-20 15:01:55 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:01:55 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={completedTasks=10, totalTrainingTime=48小时, failedTasks=2, total (truncated)...]
2025-08-20 15:01:55 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/statistics, 耗时: 34ms, 状态: 200
2025-08-20 15:01:55 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:01:55 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/model-types", parameters={}
2025-08-20 15:01:55 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/model-types, IP: 127.0.0.1
2025-08-20 15:01:55 [http-nio-8082-exec-7] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:01:55 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:01:55 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={types=[{name=文本分类, description=对文本进行分类，如情感分析、主题分类等, id=text_cla (truncated)...]
2025-08-20 15:01:55 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/model-types, 耗时: 2ms, 状态: 200
2025-08-20 15:01:55 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:01:55 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/datasets?page=1&size=100&dataType=", parameters={masked}
2025-08-20 15:01:55 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/datasets, 参数: page=1&size=100&dataType=, IP: 127.0.0.1
2025-08-20 15:01:55 [http-nio-8082-exec-6] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:01:55 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:01:55 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=0, size=100, datasets=[], page=1})]
2025-08-20 15:01:55 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/datasets, 耗时: 12ms, 状态: 200
2025-08-20 15:01:55 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:01:55 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/tasks?page=1&size=10&status=&modelType=", parameters={masked}
2025-08-20 15:01:55 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/tasks, 参数: page=1&size=10&status=&modelType=, IP: 127.0.0.1
2025-08-20 15:01:55 [http-nio-8082-exec-4] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:01:55 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:01:55 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=0, size=10, page=1, tasks=[]})]
2025-08-20 15:01:55 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/tasks, 耗时: 6ms, 状态: 200
2025-08-20 15:01:55 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:12:47 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/dashboard/promotion-effect", parameters={}
2025-08-20 15:12:47 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/dashboard/sales-trend?days=7", parameters={masked}
2025-08-20 15:12:47 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/dashboard/delay-reasons", parameters={}
2025-08-20 15:12:47 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/order/statistics", parameters={}
2025-08-20 15:12:47 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/dashboard/delivery-efficiency", parameters={}
2025-08-20 15:12:47 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/order/statistics, IP: 127.0.0.1
2025-08-20 15:12:47 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/dashboard/delivery-efficiency, IP: 127.0.0.1
2025-08-20 15:12:47 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/dashboard/delay-reasons, IP: 127.0.0.1
2025-08-20 15:12:47 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/dashboard/sales-trend, 参数: days=7, IP: 127.0.0.1
2025-08-20 15:12:47 [http-nio-8082-exec-9] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:12:47 [http-nio-8082-exec-1] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:12:47 [http-nio-8082-exec-3] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:12:47 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/dashboard/promotion-effect, IP: 127.0.0.1
2025-08-20 15:12:47 [http-nio-8082-exec-8] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:12:47 [http-nio-8082-exec-10] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:12:47 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:12:47 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/order/admin/statistics
2025-08-20 15:12:47 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/order/sales-trend?days=7
2025-08-20 15:12:47 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:12:47 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={revenue=[45000, 32000, 28000, 20000], channels=[微信小程序, APP, H5, (truncated)...]
2025-08-20 15:12:47 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:12:47 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:12:47 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data=[{reason=库存不足, impact=高, count=15}, {reason=商品缺货, impact=中, coun (truncated)...]
2025-08-20 15:12:47 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:12:47 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={values=[65, 25, 8, 2], categories=[当日发货, 次日发货, 2-3天发货, 3天以上]})]
2025-08-20 15:12:47 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/dashboard/delivery-efficiency, 耗时: 15ms, 状态: 200
2025-08-20 15:12:47 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/dashboard/delay-reasons, 耗时: 13ms, 状态: 200
2025-08-20 15:12:47 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/dashboard/promotion-effect, 耗时: 15ms, 状态: 200
2025-08-20 15:12:47 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:12:47 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:12:47 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:12:47 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - Response 404 NOT_FOUND
2025-08-20 15:12:47 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:12:47 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={dates=[2024-01-21, 2024-01-20, 2024-01-19, 2024-01-18, 2024-01- (truncated)...]
2025-08-20 15:12:47 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:12:47 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/dashboard/sales-trend, 耗时: 125ms, 状态: 200
2025-08-20 15:12:47 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:12:47 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:12:47 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:12:47 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={code=200, message=操作成功, data={cancelledOrders=1, shippedOrders= (truncated)...]
2025-08-20 15:12:47 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/order/statistics, 耗时: 180ms, 状态: 200
2025-08-20 15:12:47 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:12:48 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/categories", parameters={}
2025-08-20 15:12:48 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/list?page=1&size=5&search=&category=&status=", parameters={masked}
2025-08-20 15:12:48 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/list, 参数: page=1&size=5&search=&category=&status=, IP: 127.0.0.1
2025-08-20 15:12:48 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/categories, IP: 127.0.0.1
2025-08-20 15:12:48 [http-nio-8082-exec-2] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:12:48 [http-nio-8082-exec-5] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:12:48 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/admin/list?page=1&size=5
2025-08-20 15:12:48 [http-nio-8082-exec-5] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/categories
2025-08-20 15:12:48 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:12:48 [http-nio-8082-exec-5] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:12:48 [http-nio-8082-exec-5] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:12:48 [http-nio-8082-exec-5] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.List<java.lang.String>]
2025-08-20 15:12:48 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:12:48 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data=[热带水果, 温带水果, 亚热带水果, 进口水果, 有机水果])]
2025-08-20 15:12:48 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/categories, 耗时: 74ms, 状态: 200
2025-08-20 15:12:48 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:12:48 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:12:48 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:12:48 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:12:48 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=15, size=5, page=1, list=[{id=1, name=测试商品, description=n (truncated)...]
2025-08-20 15:12:48 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/list, 耗时: 332ms, 状态: 200
2025-08-20 15:12:48 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:12:49 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/category/list?page=1&size=5&search=", parameters={masked}
2025-08-20 15:12:49 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/category/list, 参数: page=1&size=5&search=, IP: 127.0.0.1
2025-08-20 15:12:49 [http-nio-8082-exec-7] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:12:49 [http-nio-8082-exec-7] DEBUG o.e.a.m.CategoryMapper.selectByConditions_COUNT - ==>  Preparing: SELECT count(0) FROM t_fruit_category
2025-08-20 15:12:49 [http-nio-8082-exec-7] DEBUG o.e.a.m.CategoryMapper.selectByConditions_COUNT - ==> Parameters: 
2025-08-20 15:12:49 [http-nio-8082-exec-7] DEBUG o.e.a.m.CategoryMapper.selectByConditions_COUNT - <==      Total: 1
2025-08-20 15:12:49 [http-nio-8082-exec-7] DEBUG o.e.admin.mapper.CategoryMapper.selectByConditions - ==>  Preparing: SELECT id, name, icon_name, icon_url, sort_order, status, create_time, update_time, create_by, update_by, remark FROM t_fruit_category ORDER BY sort_order ASC, id ASC LIMIT ?
2025-08-20 15:12:49 [http-nio-8082-exec-7] DEBUG o.e.admin.mapper.CategoryMapper.selectByConditions - ==> Parameters: 5(Integer)
2025-08-20 15:12:49 [http-nio-8082-exec-7] DEBUG o.e.admin.mapper.CategoryMapper.selectByConditions - <==      Total: 5
2025-08-20 15:12:49 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:12:49 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data={total=6, pages=2, size=5, page=1, list=[{iconName=Apple, createTime=2025-08-20 15:1 (truncated)...]
2025-08-20 15:12:49 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/category/list, 耗时: 73ms, 状态: 200
2025-08-20 15:12:49 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:12:50 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/banner/list?page=1&size=5&search=", parameters={masked}
2025-08-20 15:12:50 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/banner/list, 参数: page=1&size=5&search=, IP: 127.0.0.1
2025-08-20 15:12:50 [http-nio-8082-exec-6] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:12:50 [http-nio-8082-exec-6] DEBUG o.e.admin.mapper.AdminBannerMapper.countBanners - ==>  Preparing: SELECT COUNT(*) FROM t_banner
2025-08-20 15:12:50 [http-nio-8082-exec-6] DEBUG o.e.admin.mapper.AdminBannerMapper.countBanners - ==> Parameters: 
2025-08-20 15:12:50 [http-nio-8082-exec-6] DEBUG o.e.admin.mapper.AdminBannerMapper.countBanners - <==      Total: 1
2025-08-20 15:12:50 [http-nio-8082-exec-6] DEBUG o.e.a.mapper.AdminBannerMapper.selectBannerList - ==>  Preparing: SELECT id, image_url, link_url, sort, status, create_time, update_time, create_by, update_by, remark FROM t_banner ORDER BY sort ASC, create_time DESC LIMIT ?, ?
2025-08-20 15:12:50 [http-nio-8082-exec-6] DEBUG o.e.a.mapper.AdminBannerMapper.selectBannerList - ==> Parameters: 0(Integer), 5(Integer)
2025-08-20 15:12:50 [http-nio-8082-exec-6] DEBUG o.e.a.mapper.AdminBannerMapper.selectBannerList - <==      Total: 5
2025-08-20 15:12:50 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:12:50 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data={total=5, size=5, page=1, list=[Banner(id=1, imageUrl=/uploads/images/2025/08/17/601 (truncated)...]
2025-08-20 15:12:50 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/banner/list, 耗时: 20ms, 状态: 200
2025-08-20 15:12:50 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:14:40 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/list?page=1&size=5&search=&category=&status=", parameters={masked}
2025-08-20 15:14:40 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/categories", parameters={}
2025-08-20 15:14:40 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/list, 参数: page=1&size=5&search=&category=&status=, IP: 127.0.0.1
2025-08-20 15:14:40 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/categories, IP: 127.0.0.1
2025-08-20 15:14:40 [http-nio-8082-exec-1] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:14:40 [http-nio-8082-exec-4] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:14:40 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/admin/list?page=1&size=5
2025-08-20 15:14:40 [http-nio-8082-exec-4] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/categories
2025-08-20 15:14:40 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:14:40 [http-nio-8082-exec-4] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:14:40 [http-nio-8082-exec-4] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:14:40 [http-nio-8082-exec-4] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.List<java.lang.String>]
2025-08-20 15:14:40 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:14:40 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data=[热带水果, 温带水果, 亚热带水果, 进口水果, 有机水果])]
2025-08-20 15:14:40 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/categories, 耗时: 96ms, 状态: 200
2025-08-20 15:14:40 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:14:40 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:14:40 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:14:40 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:14:40 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=15, size=5, page=1, list=[{id=1, name=测试商品, description=n (truncated)...]
2025-08-20 15:14:40 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:14:40 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/list, 耗时: 156ms, 状态: 200
2025-08-20 15:14:54 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/model/list", parameters={}
2025-08-20 15:14:54 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/model/list, IP: 127.0.0.1
2025-08-20 15:14:54 [http-nio-8082-exec-10] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:14:54 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:14:54 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=3, size=10, page=1, list=[{provider=OpenAI, createTime=20 (truncated)...]
2025-08-20 15:14:54 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/model/list, 耗时: 2ms, 状态: 200
2025-08-20 15:14:54 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:14:55 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/statistics", parameters={}
2025-08-20 15:14:55 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/statistics, IP: 127.0.0.1
2025-08-20 15:14:55 [http-nio-8082-exec-9] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:14:55 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/training/statistics
2025-08-20 15:14:55 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:14:55 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - Response 404 NOT_FOUND
2025-08-20 15:14:55 [http-nio-8082-exec-9] ERROR org.example.admin.service.impl.TrainingServiceImpl - 获取训练统计信息失败
org.springframework.web.client.HttpClientErrorException$NotFound: 404 : "{"timestamp":"2025-08-20T07:14:55.400+00:00","status":404,"error":"Not Found","message":"No message available","path":"/api/training/statistics"}"
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:113)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:168)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:631)
	at org.example.admin.service.impl.TrainingServiceImpl.getTrainingStatistics(TrainingServiceImpl.java:413)
	at org.example.admin.controller.TrainingController.getTrainingStatistics(TrainingController.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:670)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2025-08-20 15:14:55 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:14:55 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={completedTasks=10, totalTrainingTime=48小时, failedTasks=2, total (truncated)...]
2025-08-20 15:14:55 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:14:55 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/statistics, 耗时: 42ms, 状态: 200
2025-08-20 15:14:55 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/model-types", parameters={}
2025-08-20 15:14:55 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/model-types, IP: 127.0.0.1
2025-08-20 15:14:55 [http-nio-8082-exec-8] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:14:55 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:14:55 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={types=[{name=文本分类, description=对文本进行分类，如情感分析、主题分类等, id=text_cla (truncated)...]
2025-08-20 15:14:55 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/model-types, 耗时: 3ms, 状态: 200
2025-08-20 15:14:55 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:14:55 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/datasets?page=1&size=100&dataType=", parameters={masked}
2025-08-20 15:14:55 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/datasets, 参数: page=1&size=100&dataType=, IP: 127.0.0.1
2025-08-20 15:14:55 [http-nio-8082-exec-3] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:14:55 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:14:55 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=0, size=100, datasets=[], page=1})]
2025-08-20 15:14:55 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:14:55 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/datasets, 耗时: 3ms, 状态: 200
2025-08-20 15:14:55 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/tasks?page=1&size=10&status=&modelType=", parameters={masked}
2025-08-20 15:14:55 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/tasks, 参数: page=1&size=10&status=&modelType=, IP: 127.0.0.1
2025-08-20 15:14:55 [http-nio-8082-exec-5] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:14:55 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:14:55 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=0, size=10, page=1, tasks=[]})]
2025-08-20 15:14:55 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/tasks, 耗时: 3ms, 状态: 200
2025-08-20 15:14:55 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:14:56 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/model/list", parameters={}
2025-08-20 15:14:56 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/model/list, IP: 127.0.0.1
2025-08-20 15:14:56 [http-nio-8082-exec-2] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:14:56 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:14:56 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=3, size=10, page=1, list=[{provider=OpenAI, createTime=20 (truncated)...]
2025-08-20 15:14:56 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:14:56 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/model/list, 耗时: 4ms, 状态: 200
2025-08-20 15:14:59 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/statistics", parameters={}
2025-08-20 15:14:59 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/statistics, IP: 127.0.0.1
2025-08-20 15:14:59 [http-nio-8082-exec-7] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:14:59 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/training/statistics
2025-08-20 15:14:59 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:14:59 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - Response 404 NOT_FOUND
2025-08-20 15:14:59 [http-nio-8082-exec-7] ERROR org.example.admin.service.impl.TrainingServiceImpl - 获取训练统计信息失败
org.springframework.web.client.HttpClientErrorException$NotFound: 404 : "{"timestamp":"2025-08-20T07:14:59.805+00:00","status":404,"error":"Not Found","message":"No message available","path":"/api/training/statistics"}"
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:113)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:168)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:631)
	at org.example.admin.service.impl.TrainingServiceImpl.getTrainingStatistics(TrainingServiceImpl.java:413)
	at org.example.admin.controller.TrainingController.getTrainingStatistics(TrainingController.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:670)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2025-08-20 15:14:59 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:14:59 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={completedTasks=10, totalTrainingTime=48小时, failedTasks=2, total (truncated)...]
2025-08-20 15:14:59 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/statistics, 耗时: 56ms, 状态: 200
2025-08-20 15:14:59 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:14:59 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/model-types", parameters={}
2025-08-20 15:14:59 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/model-types, IP: 127.0.0.1
2025-08-20 15:14:59 [http-nio-8082-exec-6] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:14:59 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:14:59 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={types=[{name=文本分类, description=对文本进行分类，如情感分析、主题分类等, id=text_cla (truncated)...]
2025-08-20 15:14:59 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/model-types, 耗时: 6ms, 状态: 200
2025-08-20 15:14:59 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:14:59 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/datasets?page=1&size=100&dataType=", parameters={masked}
2025-08-20 15:14:59 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/datasets, 参数: page=1&size=100&dataType=, IP: 127.0.0.1
2025-08-20 15:14:59 [http-nio-8082-exec-4] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:14:59 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:14:59 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=0, size=100, datasets=[], page=1})]
2025-08-20 15:14:59 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/datasets, 耗时: 2ms, 状态: 200
2025-08-20 15:14:59 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:14:59 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/tasks?page=1&size=10&status=&modelType=", parameters={masked}
2025-08-20 15:14:59 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/tasks, 参数: page=1&size=10&status=&modelType=, IP: 127.0.0.1
2025-08-20 15:14:59 [http-nio-8082-exec-1] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:14:59 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:14:59 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=0, size=10, page=1, tasks=[]})]
2025-08-20 15:14:59 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/tasks, 耗时: 2ms, 状态: 200
2025-08-20 15:14:59 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:26:37 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/list?page=1&size=5&search=&category=&status=", parameters={masked}
2025-08-20 15:26:37 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/categories", parameters={}
2025-08-20 15:26:37 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/categories, IP: 127.0.0.1
2025-08-20 15:26:37 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/list, 参数: page=1&size=5&search=&category=&status=, IP: 127.0.0.1
2025-08-20 15:26:37 [http-nio-8082-exec-10] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:26:37 [http-nio-8082-exec-9] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:26:37 [http-nio-8082-exec-10] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/categories
2025-08-20 15:26:37 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/admin/list?page=1&size=5
2025-08-20 15:26:37 [http-nio-8082-exec-10] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:26:37 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:26:37 [http-nio-8082-exec-10] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:26:37 [http-nio-8082-exec-10] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.List<java.lang.String>]
2025-08-20 15:26:37 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:26:37 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data=[热带水果, 温带水果, 亚热带水果, 进口水果, 有机水果])]
2025-08-20 15:26:37 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/categories, 耗时: 94ms, 状态: 200
2025-08-20 15:26:37 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:26:37 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:26:37 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:26:37 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:26:37 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=15, size=5, page=1, list=[{id=1, name=测试商品, description=n (truncated)...]
2025-08-20 15:26:37 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/list, 耗时: 264ms, 状态: 200
2025-08-20 15:26:37 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:26:48 [MessageBroker-1] INFO  o.s.web.socket.config.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 0, completed tasks = 1]
2025-08-20 15:29:44 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/admin/fruit/admin/add", parameters={}
2025-08-20 15:29:44 [http-nio-8082-exec-8] DEBUG o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/]]
2025-08-20 15:29:44 [http-nio-8082-exec-8] DEBUG o.s.w.servlet.resource.ResourceHttpRequestHandler - Resource not found
2025-08-20 15:29:44 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-20 15:29:44 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - "ERROR" dispatch for POST "/admin/error", parameters={}
2025-08-20 15:29:44 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:29:44 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{timestamp=Wed Aug 20 15:29:44 CST 2025, status=404, error=Not Found, path=/admin/fruit/admin/add}]
2025-08-20 15:29:44 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-08-20 15:29:48 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/admin/fruit/admin/add", parameters={}
2025-08-20 15:29:48 [http-nio-8082-exec-3] DEBUG o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/]]
2025-08-20 15:29:48 [http-nio-8082-exec-3] DEBUG o.s.w.servlet.resource.ResourceHttpRequestHandler - Resource not found
2025-08-20 15:29:48 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-20 15:29:48 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - "ERROR" dispatch for POST "/admin/error", parameters={}
2025-08-20 15:29:48 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:29:48 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{timestamp=Wed Aug 20 15:29:48 CST 2025, status=404, error=Not Found, path=/admin/fruit/admin/add}]
2025-08-20 15:29:48 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-08-20 15:29:58 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/admin/fruit/admin/add", parameters={}
2025-08-20 15:29:58 [http-nio-8082-exec-5] DEBUG o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/]]
2025-08-20 15:29:58 [http-nio-8082-exec-5] DEBUG o.s.w.servlet.resource.ResourceHttpRequestHandler - Resource not found
2025-08-20 15:29:58 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-20 15:29:58 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - "ERROR" dispatch for POST "/admin/error", parameters={}
2025-08-20 15:29:58 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:29:58 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{timestamp=Wed Aug 20 15:29:58 CST 2025, status=404, error=Not Found, path=/admin/fruit/admin/add}]
2025-08-20 15:29:58 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-08-20 15:31:08 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/admin/fruit/admin/add", parameters={}
2025-08-20 15:31:08 [http-nio-8082-exec-2] DEBUG o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/]]
2025-08-20 15:31:08 [http-nio-8082-exec-2] DEBUG o.s.w.servlet.resource.ResourceHttpRequestHandler - Resource not found
2025-08-20 15:31:08 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-20 15:31:08 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - "ERROR" dispatch for POST "/admin/error", parameters={}
2025-08-20 15:31:08 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:31:08 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{timestamp=Wed Aug 20 15:31:08 CST 2025, status=404, error=Not Found, path=/admin/fruit/admin/add}]
2025-08-20 15:31:08 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-08-20 15:32:09 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/admin/fruit/admin/add", parameters={}
2025-08-20 15:32:09 [http-nio-8082-exec-7] DEBUG o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/]]
2025-08-20 15:32:09 [http-nio-8082-exec-7] DEBUG o.s.w.servlet.resource.ResourceHttpRequestHandler - Resource not found
2025-08-20 15:32:09 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-20 15:32:09 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - "ERROR" dispatch for POST "/admin/error", parameters={}
2025-08-20 15:32:09 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:32:09 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{timestamp=Wed Aug 20 15:32:09 CST 2025, status=404, error=Not Found, path=/admin/fruit/admin/add}]
2025-08-20 15:32:09 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-08-20 15:32:39 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - PUT "/admin/fruit/admin/toggle-status/1", parameters={}
2025-08-20 15:32:39 [http-nio-8082-exec-6] DEBUG o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/]]
2025-08-20 15:32:39 [http-nio-8082-exec-6] DEBUG o.s.w.servlet.resource.ResourceHttpRequestHandler - Resource not found
2025-08-20 15:32:39 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-20 15:32:39 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - "ERROR" dispatch for PUT "/admin/error", parameters={}
2025-08-20 15:32:39 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:32:39 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{timestamp=Wed Aug 20 15:32:39 CST 2025, status=404, error=Not Found, path=/admin/fruit/admin/toggle (truncated)...]
2025-08-20 15:32:39 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-08-20 15:34:13 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/category/list?page=1&size=5&search=", parameters={masked}
2025-08-20 15:34:13 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/category/list, 参数: page=1&size=5&search=, IP: 127.0.0.1
2025-08-20 15:34:13 [http-nio-8082-exec-4] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:34:14 [http-nio-8082-exec-4] DEBUG o.e.a.m.CategoryMapper.selectByConditions_COUNT - ==>  Preparing: SELECT count(0) FROM t_fruit_category
2025-08-20 15:34:14 [http-nio-8082-exec-4] DEBUG o.e.a.m.CategoryMapper.selectByConditions_COUNT - ==> Parameters: 
2025-08-20 15:34:14 [http-nio-8082-exec-4] DEBUG o.e.a.m.CategoryMapper.selectByConditions_COUNT - <==      Total: 1
2025-08-20 15:34:14 [http-nio-8082-exec-4] DEBUG o.e.admin.mapper.CategoryMapper.selectByConditions - ==>  Preparing: SELECT id, name, icon_name, icon_url, sort_order, status, create_time, update_time, create_by, update_by, remark FROM t_fruit_category ORDER BY sort_order ASC, id ASC LIMIT ?
2025-08-20 15:34:14 [http-nio-8082-exec-4] DEBUG o.e.admin.mapper.CategoryMapper.selectByConditions - ==> Parameters: 5(Integer)
2025-08-20 15:34:14 [http-nio-8082-exec-4] DEBUG o.e.admin.mapper.CategoryMapper.selectByConditions - <==      Total: 5
2025-08-20 15:34:14 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:34:14 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data={total=6, pages=2, size=5, page=1, list=[{iconName=Apple, createTime=2025-08-20 15:3 (truncated)...]
2025-08-20 15:34:14 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/category/list, 耗时: 80ms, 状态: 200
2025-08-20 15:34:14 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:34:59 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - PUT "/admin/admin/category/update", parameters={}
2025-08-20 15:34:59 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: PUT, URI: /admin/admin/category/update, IP: 127.0.0.1
2025-08-20 15:34:59 [http-nio-8082-exec-1] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:34:59 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [{id=2, name=当季水果, description=分类: 当季水果, iconName=Cherry, iconUrl=/uploads/images/2025/08/20/e09730ab (truncated)...]
2025-08-20 15:34:59 [http-nio-8082-exec-1] DEBUG org.example.admin.mapper.CategoryMapper.update - ==>  Preparing: UPDATE t_fruit_category SET name = ?, icon_name = ?, icon_url = ?, sort_order = ?, status = ?, update_time = NOW() WHERE id = ?
2025-08-20 15:34:59 [http-nio-8082-exec-1] DEBUG org.example.admin.mapper.CategoryMapper.update - ==> Parameters: 当季水果(String), Cherry(String), /uploads/images/2025/08/20/e09730ab-7e4f-4fa9-850d-755af1201bf1.jpg(String), 2(Integer), 0(Integer), 2(Long)
2025-08-20 15:34:59 [http-nio-8082-exec-1] DEBUG org.example.admin.mapper.CategoryMapper.update - <==    Updates: 1
2025-08-20 15:34:59 [http-nio-8082-exec-1] DEBUG org.example.admin.mapper.CategoryMapper.selectById - ==>  Preparing: SELECT id, name, icon_name, icon_url, sort_order, status, create_time, update_time, create_by, update_by, remark FROM t_fruit_category WHERE id = ?
2025-08-20 15:34:59 [http-nio-8082-exec-1] DEBUG org.example.admin.mapper.CategoryMapper.selectById - ==> Parameters: 2(Long)
2025-08-20 15:34:59 [http-nio-8082-exec-1] DEBUG org.example.admin.mapper.CategoryMapper.selectById - <==      Total: 1
2025-08-20 15:34:59 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:34:59 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data={createBy=system, iconName=Cherry, updateBy=null, createTime=2025-08-15 19:08:32, na (truncated)...]
2025-08-20 15:34:59 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: PUT, URI: /admin/admin/category/update, 耗时: 135ms, 状态: 200
2025-08-20 15:34:59 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:34:59 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/category/list?page=1&size=5&search=", parameters={masked}
2025-08-20 15:34:59 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/category/list, 参数: page=1&size=5&search=, IP: 127.0.0.1
2025-08-20 15:34:59 [http-nio-8082-exec-10] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:34:59 [http-nio-8082-exec-10] DEBUG o.e.a.m.CategoryMapper.selectByConditions_COUNT - ==>  Preparing: SELECT count(0) FROM t_fruit_category
2025-08-20 15:34:59 [http-nio-8082-exec-10] DEBUG o.e.a.m.CategoryMapper.selectByConditions_COUNT - ==> Parameters: 
2025-08-20 15:34:59 [http-nio-8082-exec-10] DEBUG o.e.a.m.CategoryMapper.selectByConditions_COUNT - <==      Total: 1
2025-08-20 15:34:59 [http-nio-8082-exec-10] DEBUG o.e.admin.mapper.CategoryMapper.selectByConditions - ==>  Preparing: SELECT id, name, icon_name, icon_url, sort_order, status, create_time, update_time, create_by, update_by, remark FROM t_fruit_category ORDER BY sort_order ASC, id ASC LIMIT ?
2025-08-20 15:34:59 [http-nio-8082-exec-10] DEBUG o.e.admin.mapper.CategoryMapper.selectByConditions - ==> Parameters: 5(Integer)
2025-08-20 15:34:59 [http-nio-8082-exec-10] DEBUG o.e.admin.mapper.CategoryMapper.selectByConditions - <==      Total: 5
2025-08-20 15:34:59 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:34:59 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data={total=6, pages=2, size=5, page=1, list=[{iconName=Apple, createTime=2025-08-20 15:3 (truncated)...]
2025-08-20 15:34:59 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/category/list, 耗时: 19ms, 状态: 200
2025-08-20 15:34:59 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:35:03 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - PUT "/admin/admin/category/toggle-status/2", parameters={}
2025-08-20 15:35:03 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: PUT, URI: /admin/admin/category/toggle-status/2, IP: 127.0.0.1
2025-08-20 15:35:03 [http-nio-8082-exec-9] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:35:03 [http-nio-8082-exec-9] DEBUG org.example.admin.mapper.CategoryMapper.selectById - ==>  Preparing: SELECT id, name, icon_name, icon_url, sort_order, status, create_time, update_time, create_by, update_by, remark FROM t_fruit_category WHERE id = ?
2025-08-20 15:35:03 [http-nio-8082-exec-9] DEBUG org.example.admin.mapper.CategoryMapper.selectById - ==> Parameters: 2(Long)
2025-08-20 15:35:03 [http-nio-8082-exec-9] DEBUG org.example.admin.mapper.CategoryMapper.selectById - <==      Total: 1
2025-08-20 15:35:03 [http-nio-8082-exec-9] DEBUG o.example.admin.mapper.CategoryMapper.updateStatus - ==>  Preparing: UPDATE t_fruit_category SET status = ?, update_time = NOW() WHERE id = ?
2025-08-20 15:35:03 [http-nio-8082-exec-9] DEBUG o.example.admin.mapper.CategoryMapper.updateStatus - ==> Parameters: 1(Integer), 2(Long)
2025-08-20 15:35:03 [http-nio-8082-exec-9] DEBUG o.example.admin.mapper.CategoryMapper.updateStatus - <==    Updates: 1
2025-08-20 15:35:03 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:35:03 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data={createTime=2025-08-15 19:08:32, name=当季水果, updateTime=2025-08-20 15:35:03, id=2, so (truncated)...]
2025-08-20 15:35:03 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: PUT, URI: /admin/admin/category/toggle-status/2, 耗时: 67ms, 状态: 200
2025-08-20 15:35:03 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:35:03 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/category/list?page=1&size=5&search=", parameters={masked}
2025-08-20 15:35:03 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/category/list, 参数: page=1&size=5&search=, IP: 127.0.0.1
2025-08-20 15:35:03 [http-nio-8082-exec-8] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:35:03 [http-nio-8082-exec-8] DEBUG o.e.a.m.CategoryMapper.selectByConditions_COUNT - ==>  Preparing: SELECT count(0) FROM t_fruit_category
2025-08-20 15:35:03 [http-nio-8082-exec-8] DEBUG o.e.a.m.CategoryMapper.selectByConditions_COUNT - ==> Parameters: 
2025-08-20 15:35:03 [http-nio-8082-exec-8] DEBUG o.e.a.m.CategoryMapper.selectByConditions_COUNT - <==      Total: 1
2025-08-20 15:35:03 [http-nio-8082-exec-8] DEBUG o.e.admin.mapper.CategoryMapper.selectByConditions - ==>  Preparing: SELECT id, name, icon_name, icon_url, sort_order, status, create_time, update_time, create_by, update_by, remark FROM t_fruit_category ORDER BY sort_order ASC, id ASC LIMIT ?
2025-08-20 15:35:03 [http-nio-8082-exec-8] DEBUG o.e.admin.mapper.CategoryMapper.selectByConditions - ==> Parameters: 5(Integer)
2025-08-20 15:35:03 [http-nio-8082-exec-8] DEBUG o.e.admin.mapper.CategoryMapper.selectByConditions - <==      Total: 5
2025-08-20 15:35:03 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:35:03 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data={total=6, pages=2, size=5, page=1, list=[{iconName=Apple, createTime=2025-08-20 15:3 (truncated)...]
2025-08-20 15:35:03 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/category/list, 耗时: 46ms, 状态: 200
2025-08-20 15:35:03 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:35:05 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/banner/list?page=1&size=5&search=", parameters={masked}
2025-08-20 15:35:05 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/banner/list, 参数: page=1&size=5&search=, IP: 127.0.0.1
2025-08-20 15:35:05 [http-nio-8082-exec-3] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:35:05 [http-nio-8082-exec-3] DEBUG o.e.admin.mapper.AdminBannerMapper.countBanners - ==>  Preparing: SELECT COUNT(*) FROM t_banner
2025-08-20 15:35:05 [http-nio-8082-exec-3] DEBUG o.e.admin.mapper.AdminBannerMapper.countBanners - ==> Parameters: 
2025-08-20 15:35:05 [http-nio-8082-exec-3] DEBUG o.e.admin.mapper.AdminBannerMapper.countBanners - <==      Total: 1
2025-08-20 15:35:05 [http-nio-8082-exec-3] DEBUG o.e.a.mapper.AdminBannerMapper.selectBannerList - ==>  Preparing: SELECT id, image_url, link_url, sort, status, create_time, update_time, create_by, update_by, remark FROM t_banner ORDER BY sort ASC, create_time DESC LIMIT ?, ?
2025-08-20 15:35:05 [http-nio-8082-exec-3] DEBUG o.e.a.mapper.AdminBannerMapper.selectBannerList - ==> Parameters: 0(Integer), 5(Integer)
2025-08-20 15:35:05 [http-nio-8082-exec-3] DEBUG o.e.a.mapper.AdminBannerMapper.selectBannerList - <==      Total: 5
2025-08-20 15:35:05 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:35:05 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data={total=5, size=5, page=1, list=[Banner(id=1, imageUrl=/uploads/images/2025/08/17/601 (truncated)...]
2025-08-20 15:35:05 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/banner/list, 耗时: 30ms, 状态: 200
2025-08-20 15:35:05 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:35:11 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - PUT "/admin/admin/banner/toggle-status/6", parameters={}
2025-08-20 15:35:11 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: PUT, URI: /admin/admin/banner/toggle-status/6, IP: 127.0.0.1
2025-08-20 15:35:11 [http-nio-8082-exec-5] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:35:11 [http-nio-8082-exec-5] DEBUG o.e.admin.mapper.AdminBannerMapper.selectById - ==>  Preparing: SELECT id, image_url, link_url, sort, status, create_time, update_time, create_by, update_by, remark FROM t_banner WHERE id = ?
2025-08-20 15:35:11 [http-nio-8082-exec-5] DEBUG o.e.admin.mapper.AdminBannerMapper.selectById - ==> Parameters: 6(Long)
2025-08-20 15:35:11 [http-nio-8082-exec-5] DEBUG o.e.admin.mapper.AdminBannerMapper.selectById - <==      Total: 1
2025-08-20 15:35:11 [http-nio-8082-exec-5] DEBUG org.example.admin.mapper.AdminBannerMapper.update - ==>  Preparing: UPDATE t_banner SET image_url = ?, link_url = ?, sort = ?, status = ?, update_time = ?, update_by = ? WHERE id = ?
2025-08-20 15:35:11 [http-nio-8082-exec-5] DEBUG org.example.admin.mapper.AdminBannerMapper.update - ==> Parameters: /uploads/images/2025/08/17/655e8bfb-7da3-43ac-a98b-5f24b8ad9a1d.jpg(String), /fruit/detail/3(String), 3(Integer), 0(Integer), 2025-08-20 15:35:11.436(Timestamp), admin(String), 6(Long)
2025-08-20 15:35:11 [http-nio-8082-exec-5] DEBUG org.example.admin.mapper.AdminBannerMapper.update - <==    Updates: 1
2025-08-20 15:35:11 [http-nio-8082-exec-5] DEBUG o.e.admin.mapper.AdminBannerMapper.selectById - ==>  Preparing: SELECT id, image_url, link_url, sort, status, create_time, update_time, create_by, update_by, remark FROM t_banner WHERE id = ?
2025-08-20 15:35:11 [http-nio-8082-exec-5] DEBUG o.e.admin.mapper.AdminBannerMapper.selectById - ==> Parameters: 6(Long)
2025-08-20 15:35:11 [http-nio-8082-exec-5] DEBUG o.e.admin.mapper.AdminBannerMapper.selectById - <==      Total: 1
2025-08-20 15:35:11 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:35:11 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data=Banner(id=6, imageUrl=/uploads/images/2025/08/17/655e8bfb-7da3-43ac-a98b-5f24b8ad9a1 (truncated)...]
2025-08-20 15:35:11 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: PUT, URI: /admin/admin/banner/toggle-status/6, 耗时: 55ms, 状态: 200
2025-08-20 15:35:11 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:35:11 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/banner/list?page=1&size=5&search=", parameters={masked}
2025-08-20 15:35:11 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/banner/list, 参数: page=1&size=5&search=, IP: 127.0.0.1
2025-08-20 15:35:11 [http-nio-8082-exec-2] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:35:11 [http-nio-8082-exec-2] DEBUG o.e.admin.mapper.AdminBannerMapper.countBanners - ==>  Preparing: SELECT COUNT(*) FROM t_banner
2025-08-20 15:35:11 [http-nio-8082-exec-2] DEBUG o.e.admin.mapper.AdminBannerMapper.countBanners - ==> Parameters: 
2025-08-20 15:35:11 [http-nio-8082-exec-2] DEBUG o.e.admin.mapper.AdminBannerMapper.countBanners - <==      Total: 1
2025-08-20 15:35:11 [http-nio-8082-exec-2] DEBUG o.e.a.mapper.AdminBannerMapper.selectBannerList - ==>  Preparing: SELECT id, image_url, link_url, sort, status, create_time, update_time, create_by, update_by, remark FROM t_banner ORDER BY sort ASC, create_time DESC LIMIT ?, ?
2025-08-20 15:35:11 [http-nio-8082-exec-2] DEBUG o.e.a.mapper.AdminBannerMapper.selectBannerList - ==> Parameters: 0(Integer), 5(Integer)
2025-08-20 15:35:11 [http-nio-8082-exec-2] DEBUG o.e.a.mapper.AdminBannerMapper.selectBannerList - <==      Total: 5
2025-08-20 15:35:11 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:35:11 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data={total=5, size=5, page=1, list=[Banner(id=1, imageUrl=/uploads/images/2025/08/17/601 (truncated)...]
2025-08-20 15:35:11 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/banner/list, 耗时: 14ms, 状态: 200
2025-08-20 15:35:11 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:35:12 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - PUT "/admin/admin/banner/toggle-status/3", parameters={}
2025-08-20 15:35:12 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: PUT, URI: /admin/admin/banner/toggle-status/3, IP: 127.0.0.1
2025-08-20 15:35:12 [http-nio-8082-exec-7] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:35:12 [http-nio-8082-exec-7] DEBUG o.e.admin.mapper.AdminBannerMapper.selectById - ==>  Preparing: SELECT id, image_url, link_url, sort, status, create_time, update_time, create_by, update_by, remark FROM t_banner WHERE id = ?
2025-08-20 15:35:12 [http-nio-8082-exec-7] DEBUG o.e.admin.mapper.AdminBannerMapper.selectById - ==> Parameters: 3(Long)
2025-08-20 15:35:12 [http-nio-8082-exec-7] DEBUG o.e.admin.mapper.AdminBannerMapper.selectById - <==      Total: 1
2025-08-20 15:35:12 [http-nio-8082-exec-7] DEBUG org.example.admin.mapper.AdminBannerMapper.update - ==>  Preparing: UPDATE t_banner SET image_url = ?, link_url = ?, sort = ?, status = ?, update_time = ?, update_by = ? WHERE id = ?
2025-08-20 15:35:12 [http-nio-8082-exec-7] DEBUG org.example.admin.mapper.AdminBannerMapper.update - ==> Parameters: /uploads/images/2025/08/17/f9539c9e-0645-4998-b669-817f763e8073.jpg(String), /fruit/detail/3(String), 3(Integer), 1(Integer), 2025-08-20 15:35:12.912(Timestamp), admin(String), 3(Long)
2025-08-20 15:35:12 [http-nio-8082-exec-7] DEBUG org.example.admin.mapper.AdminBannerMapper.update - <==    Updates: 1
2025-08-20 15:35:12 [http-nio-8082-exec-7] DEBUG o.e.admin.mapper.AdminBannerMapper.selectById - ==>  Preparing: SELECT id, image_url, link_url, sort, status, create_time, update_time, create_by, update_by, remark FROM t_banner WHERE id = ?
2025-08-20 15:35:12 [http-nio-8082-exec-7] DEBUG o.e.admin.mapper.AdminBannerMapper.selectById - ==> Parameters: 3(Long)
2025-08-20 15:35:12 [http-nio-8082-exec-7] DEBUG o.e.admin.mapper.AdminBannerMapper.selectById - <==      Total: 1
2025-08-20 15:35:12 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:35:12 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data=Banner(id=3, imageUrl=/uploads/images/2025/08/17/f9539c9e-0645-4998-b669-817f763e807 (truncated)...]
2025-08-20 15:35:12 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: PUT, URI: /admin/admin/banner/toggle-status/3, 耗时: 21ms, 状态: 200
2025-08-20 15:35:12 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:35:12 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/banner/list?page=1&size=5&search=", parameters={masked}
2025-08-20 15:35:12 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/banner/list, 参数: page=1&size=5&search=, IP: 127.0.0.1
2025-08-20 15:35:12 [http-nio-8082-exec-6] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:35:12 [http-nio-8082-exec-6] DEBUG o.e.admin.mapper.AdminBannerMapper.countBanners - ==>  Preparing: SELECT COUNT(*) FROM t_banner
2025-08-20 15:35:12 [http-nio-8082-exec-6] DEBUG o.e.admin.mapper.AdminBannerMapper.countBanners - ==> Parameters: 
2025-08-20 15:35:12 [http-nio-8082-exec-6] DEBUG o.e.admin.mapper.AdminBannerMapper.countBanners - <==      Total: 1
2025-08-20 15:35:12 [http-nio-8082-exec-6] DEBUG o.e.a.mapper.AdminBannerMapper.selectBannerList - ==>  Preparing: SELECT id, image_url, link_url, sort, status, create_time, update_time, create_by, update_by, remark FROM t_banner ORDER BY sort ASC, create_time DESC LIMIT ?, ?
2025-08-20 15:35:12 [http-nio-8082-exec-6] DEBUG o.e.a.mapper.AdminBannerMapper.selectBannerList - ==> Parameters: 0(Integer), 5(Integer)
2025-08-20 15:35:12 [http-nio-8082-exec-6] DEBUG o.e.a.mapper.AdminBannerMapper.selectBannerList - <==      Total: 5
2025-08-20 15:35:12 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:35:12 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data={total=5, size=5, page=1, list=[Banner(id=1, imageUrl=/uploads/images/2025/08/17/601 (truncated)...]
2025-08-20 15:35:12 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/banner/list, 耗时: 23ms, 状态: 200
2025-08-20 15:35:12 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:36:28 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/admin/admin/banner/add", parameters={}
2025-08-20 15:36:28 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: POST, URI: /admin/admin/banner/add, IP: 127.0.0.1
2025-08-20 15:36:28 [http-nio-8082-exec-4] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:36:28 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [Banner(id=null, imageUrl=/uploads/images/2025/08/20/c29271cd-2510-486f-aedb-df24c9d141c3.jpg, linkUr (truncated)...]
2025-08-20 15:36:28 [http-nio-8082-exec-4] DEBUG org.example.admin.mapper.AdminBannerMapper.insert - ==>  Preparing: INSERT INTO t_banner (image_url, link_url, sort, status, create_time, update_time, create_by, update_by, remark) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-20 15:36:28 [http-nio-8082-exec-4] DEBUG org.example.admin.mapper.AdminBannerMapper.insert - ==> Parameters: /uploads/images/2025/08/20/c29271cd-2510-486f-aedb-df24c9d141c3.jpg(String), https://localhost:8080/fruit/1(String), 1(Integer), 0(Integer), 2025-08-20 15:36:28.874(Timestamp), 2025-08-20 15:36:28.874(Timestamp), admin(String), admin(String), null
2025-08-20 15:36:28 [http-nio-8082-exec-4] DEBUG org.example.admin.mapper.AdminBannerMapper.insert - <==    Updates: 1
2025-08-20 15:36:28 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:36:28 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data=Banner(id=10, imageUrl=/uploads/images/2025/08/20/c29271cd-2510-486f-aedb-df24c9d141 (truncated)...]
2025-08-20 15:36:28 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: POST, URI: /admin/admin/banner/add, 耗时: 144ms, 状态: 200
2025-08-20 15:36:28 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:36:28 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/banner/list?page=1&size=5&search=", parameters={masked}
2025-08-20 15:36:29 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/banner/list, 参数: page=1&size=5&search=, IP: 127.0.0.1
2025-08-20 15:36:29 [http-nio-8082-exec-1] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:36:29 [http-nio-8082-exec-1] DEBUG o.e.admin.mapper.AdminBannerMapper.countBanners - ==>  Preparing: SELECT COUNT(*) FROM t_banner
2025-08-20 15:36:29 [http-nio-8082-exec-1] DEBUG o.e.admin.mapper.AdminBannerMapper.countBanners - ==> Parameters: 
2025-08-20 15:36:29 [http-nio-8082-exec-1] DEBUG o.e.admin.mapper.AdminBannerMapper.countBanners - <==      Total: 1
2025-08-20 15:36:29 [http-nio-8082-exec-1] DEBUG o.e.a.mapper.AdminBannerMapper.selectBannerList - ==>  Preparing: SELECT id, image_url, link_url, sort, status, create_time, update_time, create_by, update_by, remark FROM t_banner ORDER BY sort ASC, create_time DESC LIMIT ?, ?
2025-08-20 15:36:29 [http-nio-8082-exec-1] DEBUG o.e.a.mapper.AdminBannerMapper.selectBannerList - ==> Parameters: 0(Integer), 5(Integer)
2025-08-20 15:36:29 [http-nio-8082-exec-1] DEBUG o.e.a.mapper.AdminBannerMapper.selectBannerList - <==      Total: 5
2025-08-20 15:36:29 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:36:29 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data={total=6, size=5, page=1, list=[Banner(id=10, imageUrl=/uploads/images/2025/08/20/c2 (truncated)...]
2025-08-20 15:36:29 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/banner/list, 耗时: 24ms, 状态: 200
2025-08-20 15:36:29 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:36:33 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - PUT "/admin/admin/banner/toggle-status/10", parameters={}
2025-08-20 15:36:33 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: PUT, URI: /admin/admin/banner/toggle-status/10, IP: 127.0.0.1
2025-08-20 15:36:33 [http-nio-8082-exec-10] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:36:33 [http-nio-8082-exec-10] DEBUG o.e.admin.mapper.AdminBannerMapper.selectById - ==>  Preparing: SELECT id, image_url, link_url, sort, status, create_time, update_time, create_by, update_by, remark FROM t_banner WHERE id = ?
2025-08-20 15:36:33 [http-nio-8082-exec-10] DEBUG o.e.admin.mapper.AdminBannerMapper.selectById - ==> Parameters: 10(Long)
2025-08-20 15:36:33 [http-nio-8082-exec-10] DEBUG o.e.admin.mapper.AdminBannerMapper.selectById - <==      Total: 1
2025-08-20 15:36:33 [http-nio-8082-exec-10] DEBUG org.example.admin.mapper.AdminBannerMapper.update - ==>  Preparing: UPDATE t_banner SET image_url = ?, link_url = ?, sort = ?, status = ?, update_time = ?, update_by = ? WHERE id = ?
2025-08-20 15:36:33 [http-nio-8082-exec-10] DEBUG org.example.admin.mapper.AdminBannerMapper.update - ==> Parameters: /uploads/images/2025/08/20/c29271cd-2510-486f-aedb-df24c9d141c3.jpg(String), https://localhost:8080/fruit/1(String), 1(Integer), 1(Integer), 2025-08-20 15:36:33.629(Timestamp), admin(String), 10(Long)
2025-08-20 15:36:33 [http-nio-8082-exec-10] DEBUG org.example.admin.mapper.AdminBannerMapper.update - <==    Updates: 1
2025-08-20 15:36:33 [http-nio-8082-exec-10] DEBUG o.e.admin.mapper.AdminBannerMapper.selectById - ==>  Preparing: SELECT id, image_url, link_url, sort, status, create_time, update_time, create_by, update_by, remark FROM t_banner WHERE id = ?
2025-08-20 15:36:33 [http-nio-8082-exec-10] DEBUG o.e.admin.mapper.AdminBannerMapper.selectById - ==> Parameters: 10(Long)
2025-08-20 15:36:33 [http-nio-8082-exec-10] DEBUG o.e.admin.mapper.AdminBannerMapper.selectById - <==      Total: 1
2025-08-20 15:36:33 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:36:33 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data=Banner(id=10, imageUrl=/uploads/images/2025/08/20/c29271cd-2510-486f-aedb-df24c9d141 (truncated)...]
2025-08-20 15:36:33 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: PUT, URI: /admin/admin/banner/toggle-status/10, 耗时: 25ms, 状态: 200
2025-08-20 15:36:33 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:36:33 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/banner/list?page=1&size=5&search=", parameters={masked}
2025-08-20 15:36:33 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/banner/list, 参数: page=1&size=5&search=, IP: 127.0.0.1
2025-08-20 15:36:33 [http-nio-8082-exec-9] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:36:33 [http-nio-8082-exec-9] DEBUG o.e.admin.mapper.AdminBannerMapper.countBanners - ==>  Preparing: SELECT COUNT(*) FROM t_banner
2025-08-20 15:36:33 [http-nio-8082-exec-9] DEBUG o.e.admin.mapper.AdminBannerMapper.countBanners - ==> Parameters: 
2025-08-20 15:36:33 [http-nio-8082-exec-9] DEBUG o.e.admin.mapper.AdminBannerMapper.countBanners - <==      Total: 1
2025-08-20 15:36:33 [http-nio-8082-exec-9] DEBUG o.e.a.mapper.AdminBannerMapper.selectBannerList - ==>  Preparing: SELECT id, image_url, link_url, sort, status, create_time, update_time, create_by, update_by, remark FROM t_banner ORDER BY sort ASC, create_time DESC LIMIT ?, ?
2025-08-20 15:36:33 [http-nio-8082-exec-9] DEBUG o.e.a.mapper.AdminBannerMapper.selectBannerList - ==> Parameters: 0(Integer), 5(Integer)
2025-08-20 15:36:33 [http-nio-8082-exec-9] DEBUG o.e.a.mapper.AdminBannerMapper.selectBannerList - <==      Total: 5
2025-08-20 15:36:33 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:36:33 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data={total=6, size=5, page=1, list=[Banner(id=10, imageUrl=/uploads/images/2025/08/20/c2 (truncated)...]
2025-08-20 15:36:33 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/banner/list, 耗时: 16ms, 状态: 200
2025-08-20 15:36:33 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:37:25 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - PUT "/admin/admin/banner/toggle-status/10", parameters={}
2025-08-20 15:37:25 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: PUT, URI: /admin/admin/banner/toggle-status/10, IP: 127.0.0.1
2025-08-20 15:37:25 [http-nio-8082-exec-8] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:37:25 [http-nio-8082-exec-8] DEBUG o.e.admin.mapper.AdminBannerMapper.selectById - ==>  Preparing: SELECT id, image_url, link_url, sort, status, create_time, update_time, create_by, update_by, remark FROM t_banner WHERE id = ?
2025-08-20 15:37:25 [http-nio-8082-exec-8] DEBUG o.e.admin.mapper.AdminBannerMapper.selectById - ==> Parameters: 10(Long)
2025-08-20 15:37:25 [http-nio-8082-exec-8] DEBUG o.e.admin.mapper.AdminBannerMapper.selectById - <==      Total: 1
2025-08-20 15:37:25 [http-nio-8082-exec-8] DEBUG org.example.admin.mapper.AdminBannerMapper.update - ==>  Preparing: UPDATE t_banner SET image_url = ?, link_url = ?, sort = ?, status = ?, update_time = ?, update_by = ? WHERE id = ?
2025-08-20 15:37:25 [http-nio-8082-exec-8] DEBUG org.example.admin.mapper.AdminBannerMapper.update - ==> Parameters: /uploads/images/2025/08/20/c29271cd-2510-486f-aedb-df24c9d141c3.jpg(String), https://localhost:8080/fruit/1(String), 1(Integer), 0(Integer), 2025-08-20 15:37:25.555(Timestamp), admin(String), 10(Long)
2025-08-20 15:37:25 [http-nio-8082-exec-8] DEBUG org.example.admin.mapper.AdminBannerMapper.update - <==    Updates: 1
2025-08-20 15:37:25 [http-nio-8082-exec-8] DEBUG o.e.admin.mapper.AdminBannerMapper.selectById - ==>  Preparing: SELECT id, image_url, link_url, sort, status, create_time, update_time, create_by, update_by, remark FROM t_banner WHERE id = ?
2025-08-20 15:37:25 [http-nio-8082-exec-8] DEBUG o.e.admin.mapper.AdminBannerMapper.selectById - ==> Parameters: 10(Long)
2025-08-20 15:37:25 [http-nio-8082-exec-8] DEBUG o.e.admin.mapper.AdminBannerMapper.selectById - <==      Total: 1
2025-08-20 15:37:25 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:37:25 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data=Banner(id=10, imageUrl=/uploads/images/2025/08/20/c29271cd-2510-486f-aedb-df24c9d141 (truncated)...]
2025-08-20 15:37:25 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: PUT, URI: /admin/admin/banner/toggle-status/10, 耗时: 60ms, 状态: 200
2025-08-20 15:37:25 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:37:25 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/banner/list?page=1&size=5&search=", parameters={masked}
2025-08-20 15:37:25 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/banner/list, 参数: page=1&size=5&search=, IP: 127.0.0.1
2025-08-20 15:37:25 [http-nio-8082-exec-3] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:37:25 [http-nio-8082-exec-3] DEBUG o.e.admin.mapper.AdminBannerMapper.countBanners - ==>  Preparing: SELECT COUNT(*) FROM t_banner
2025-08-20 15:37:25 [http-nio-8082-exec-3] DEBUG o.e.admin.mapper.AdminBannerMapper.countBanners - ==> Parameters: 
2025-08-20 15:37:25 [http-nio-8082-exec-3] DEBUG o.e.admin.mapper.AdminBannerMapper.countBanners - <==      Total: 1
2025-08-20 15:37:25 [http-nio-8082-exec-3] DEBUG o.e.a.mapper.AdminBannerMapper.selectBannerList - ==>  Preparing: SELECT id, image_url, link_url, sort, status, create_time, update_time, create_by, update_by, remark FROM t_banner ORDER BY sort ASC, create_time DESC LIMIT ?, ?
2025-08-20 15:37:25 [http-nio-8082-exec-3] DEBUG o.e.a.mapper.AdminBannerMapper.selectBannerList - ==> Parameters: 0(Integer), 5(Integer)
2025-08-20 15:37:25 [http-nio-8082-exec-3] DEBUG o.e.a.mapper.AdminBannerMapper.selectBannerList - <==      Total: 5
2025-08-20 15:37:25 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:37:25 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data={total=6, size=5, page=1, list=[Banner(id=10, imageUrl=/uploads/images/2025/08/20/c2 (truncated)...]
2025-08-20 15:37:25 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/banner/list, 耗时: 26ms, 状态: 200
2025-08-20 15:37:25 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:37:32 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/category/list?page=1&size=5&search=", parameters={masked}
2025-08-20 15:37:32 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/category/list, 参数: page=1&size=5&search=, IP: 127.0.0.1
2025-08-20 15:37:32 [http-nio-8082-exec-5] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:37:32 [http-nio-8082-exec-5] DEBUG o.e.a.m.CategoryMapper.selectByConditions_COUNT - ==>  Preparing: SELECT count(0) FROM t_fruit_category
2025-08-20 15:37:32 [http-nio-8082-exec-5] DEBUG o.e.a.m.CategoryMapper.selectByConditions_COUNT - ==> Parameters: 
2025-08-20 15:37:32 [http-nio-8082-exec-5] DEBUG o.e.a.m.CategoryMapper.selectByConditions_COUNT - <==      Total: 1
2025-08-20 15:37:32 [http-nio-8082-exec-5] DEBUG o.e.admin.mapper.CategoryMapper.selectByConditions - ==>  Preparing: SELECT id, name, icon_name, icon_url, sort_order, status, create_time, update_time, create_by, update_by, remark FROM t_fruit_category ORDER BY sort_order ASC, id ASC LIMIT ?
2025-08-20 15:37:32 [http-nio-8082-exec-5] DEBUG o.e.admin.mapper.CategoryMapper.selectByConditions - ==> Parameters: 5(Integer)
2025-08-20 15:37:32 [http-nio-8082-exec-5] DEBUG o.e.admin.mapper.CategoryMapper.selectByConditions - <==      Total: 5
2025-08-20 15:37:32 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:37:32 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data={total=6, pages=2, size=5, page=1, list=[{iconName=Apple, createTime=2025-08-20 15:3 (truncated)...]
2025-08-20 15:37:32 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/category/list, 耗时: 84ms, 状态: 200
2025-08-20 15:37:32 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:37:32 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/fruit/categories", parameters={}
2025-08-20 15:37:32 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/fruit/list?page=1&size=5&search=&category=&status=", parameters={masked}
2025-08-20 15:37:32 [http-nio-8082-exec-7] DEBUG o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/]]
2025-08-20 15:37:32 [http-nio-8082-exec-2] DEBUG o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/]]
2025-08-20 15:37:32 [http-nio-8082-exec-2] DEBUG o.s.w.servlet.resource.ResourceHttpRequestHandler - Resource not found
2025-08-20 15:37:32 [http-nio-8082-exec-7] DEBUG o.s.w.servlet.resource.ResourceHttpRequestHandler - Resource not found
2025-08-20 15:37:33 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-20 15:37:33 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-20 15:37:33 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/admin/error?page=1&size=5&search=&category=&status=", parameters={masked}
2025-08-20 15:37:33 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - "ERROR" dispatch for GET "/admin/error", parameters={}
2025-08-20 15:37:33 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:37:33 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:37:33 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{timestamp=Wed Aug 20 15:37:33 CST 2025, status=404, error=Not Found, path=/admin/fruit/list}]
2025-08-20 15:37:33 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{timestamp=Wed Aug 20 15:37:33 CST 2025, status=404, error=Not Found, path=/admin/fruit/categories}]
2025-08-20 15:37:33 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-08-20 15:37:33 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-08-20 15:38:51 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/list?page=1&size=5&search=&category=&status=", parameters={masked}
2025-08-20 15:38:51 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/categories", parameters={}
2025-08-20 15:38:51 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/list, 参数: page=1&size=5&search=&category=&status=, IP: 127.0.0.1
2025-08-20 15:38:51 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/categories, IP: 127.0.0.1
2025-08-20 15:38:51 [http-nio-8082-exec-4] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:38:51 [http-nio-8082-exec-6] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:38:51 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/categories
2025-08-20 15:38:51 [http-nio-8082-exec-4] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/admin/list?page=1&size=5
2025-08-20 15:38:51 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:38:51 [http-nio-8082-exec-4] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:38:52 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:38:52 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.List<java.lang.String>]
2025-08-20 15:38:52 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:38:52 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data=[热带水果, 温带水果, 亚热带水果, 进口水果, 有机水果])]
2025-08-20 15:38:52 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:38:52 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/categories, 耗时: 663ms, 状态: 200
2025-08-20 15:38:52 [http-nio-8082-exec-4] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:38:52 [http-nio-8082-exec-4] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:38:52 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:38:52 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=15, size=5, page=1, list=[{id=1, name=测试商品, description=n (truncated)...]
2025-08-20 15:38:52 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/list, 耗时: 767ms, 状态: 200
2025-08-20 15:38:52 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:39:07 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - PUT "/admin/fruit/admin/toggle-status/1", parameters={}
2025-08-20 15:39:07 [http-nio-8082-exec-1] DEBUG o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/]]
2025-08-20 15:39:07 [http-nio-8082-exec-1] DEBUG o.s.w.servlet.resource.ResourceHttpRequestHandler - Resource not found
2025-08-20 15:39:07 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-20 15:39:07 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - "ERROR" dispatch for PUT "/admin/error", parameters={}
2025-08-20 15:39:07 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:39:07 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{timestamp=Wed Aug 20 15:39:07 CST 2025, status=404, error=Not Found, path=/admin/fruit/admin/toggle (truncated)...]
2025-08-20 15:39:07 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-08-20 15:39:45 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/categories", parameters={}
2025-08-20 15:39:45 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/list?page=1&size=5&search=&category=&status=", parameters={masked}
2025-08-20 15:39:45 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/categories, IP: 127.0.0.1
2025-08-20 15:39:45 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/list, 参数: page=1&size=5&search=&category=&status=, IP: 127.0.0.1
2025-08-20 15:39:45 [http-nio-8082-exec-10] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:39:45 [http-nio-8082-exec-9] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:39:45 [http-nio-8082-exec-10] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/categories
2025-08-20 15:39:45 [http-nio-8082-exec-10] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:39:45 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/admin/list?page=1&size=5
2025-08-20 15:39:45 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:39:45 [http-nio-8082-exec-10] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:39:45 [http-nio-8082-exec-10] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.List<java.lang.String>]
2025-08-20 15:39:45 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:39:45 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data=[热带水果, 温带水果, 亚热带水果, 进口水果, 有机水果])]
2025-08-20 15:39:45 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/categories, 耗时: 100ms, 状态: 200
2025-08-20 15:39:45 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:39:45 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:39:45 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:39:45 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:39:45 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=15, size=5, page=1, list=[{id=1, name=测试商品, description=n (truncated)...]
2025-08-20 15:39:45 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/list, 耗时: 174ms, 状态: 200
2025-08-20 15:39:45 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:40:04 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - PUT "/admin/fruit/admin/update", parameters={}
2025-08-20 15:40:04 [http-nio-8082-exec-8] DEBUG o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/]]
2025-08-20 15:40:04 [http-nio-8082-exec-8] DEBUG o.s.w.servlet.resource.ResourceHttpRequestHandler - Resource not found
2025-08-20 15:40:04 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-20 15:40:04 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - "ERROR" dispatch for PUT "/admin/error", parameters={}
2025-08-20 15:40:04 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:40:04 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{timestamp=Wed Aug 20 15:40:04 CST 2025, status=404, error=Not Found, path=/admin/fruit/admin/update (truncated)...]
2025-08-20 15:40:04 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-08-20 15:42:20 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - DELETE "/admin/fruit/admin/delete/1", parameters={}
2025-08-20 15:42:20 [http-nio-8082-exec-3] DEBUG o.s.web.servlet.handler.SimpleUrlHandlerMapping - Mapped to ResourceHttpRequestHandler [classpath [static/]]
2025-08-20 15:42:20 [http-nio-8082-exec-3] DEBUG o.s.w.servlet.resource.ResourceHttpRequestHandler - Resource not found
2025-08-20 15:42:20 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 404 NOT_FOUND
2025-08-20 15:42:20 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - "ERROR" dispatch for DELETE "/admin/error", parameters={}
2025-08-20 15:42:20 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:42:20 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{timestamp=Wed Aug 20 15:42:20 CST 2025, status=404, error=Not Found, path=/admin/fruit/admin/delete (truncated)...]
2025-08-20 15:42:20 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - Exiting from "ERROR" dispatch, status 404
2025-08-20 15:43:09 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/category/list?page=1&size=5&search=", parameters={masked}
2025-08-20 15:43:09 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/category/list, 参数: page=1&size=5&search=, IP: 127.0.0.1
2025-08-20 15:43:09 [http-nio-8082-exec-5] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:43:09 [http-nio-8082-exec-5] DEBUG o.e.a.m.CategoryMapper.selectByConditions_COUNT - ==>  Preparing: SELECT count(0) FROM t_fruit_category
2025-08-20 15:43:09 [http-nio-8082-exec-5] DEBUG o.e.a.m.CategoryMapper.selectByConditions_COUNT - ==> Parameters: 
2025-08-20 15:43:09 [http-nio-8082-exec-5] DEBUG o.e.a.m.CategoryMapper.selectByConditions_COUNT - <==      Total: 1
2025-08-20 15:43:09 [http-nio-8082-exec-5] DEBUG o.e.admin.mapper.CategoryMapper.selectByConditions - ==>  Preparing: SELECT id, name, icon_name, icon_url, sort_order, status, create_time, update_time, create_by, update_by, remark FROM t_fruit_category ORDER BY sort_order ASC, id ASC LIMIT ?
2025-08-20 15:43:09 [http-nio-8082-exec-5] DEBUG o.e.admin.mapper.CategoryMapper.selectByConditions - ==> Parameters: 5(Integer)
2025-08-20 15:43:09 [http-nio-8082-exec-5] DEBUG o.e.admin.mapper.CategoryMapper.selectByConditions - <==      Total: 5
2025-08-20 15:43:09 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:43:09 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data={total=6, pages=2, size=5, page=1, list=[{iconName=Apple, createTime=2025-08-20 15:4 (truncated)...]
2025-08-20 15:43:09 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/category/list, 耗时: 85ms, 状态: 200
2025-08-20 15:43:09 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:43:10 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/banner/list?page=1&size=5&search=", parameters={masked}
2025-08-20 15:43:10 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/banner/list, 参数: page=1&size=5&search=, IP: 127.0.0.1
2025-08-20 15:43:10 [http-nio-8082-exec-2] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:43:10 [http-nio-8082-exec-2] DEBUG o.e.admin.mapper.AdminBannerMapper.countBanners - ==>  Preparing: SELECT COUNT(*) FROM t_banner
2025-08-20 15:43:10 [http-nio-8082-exec-2] DEBUG o.e.admin.mapper.AdminBannerMapper.countBanners - ==> Parameters: 
2025-08-20 15:43:10 [http-nio-8082-exec-2] DEBUG o.e.admin.mapper.AdminBannerMapper.countBanners - <==      Total: 1
2025-08-20 15:43:10 [http-nio-8082-exec-2] DEBUG o.e.a.mapper.AdminBannerMapper.selectBannerList - ==>  Preparing: SELECT id, image_url, link_url, sort, status, create_time, update_time, create_by, update_by, remark FROM t_banner ORDER BY sort ASC, create_time DESC LIMIT ?, ?
2025-08-20 15:43:10 [http-nio-8082-exec-2] DEBUG o.e.a.mapper.AdminBannerMapper.selectBannerList - ==> Parameters: 0(Integer), 5(Integer)
2025-08-20 15:43:10 [http-nio-8082-exec-2] DEBUG o.e.a.mapper.AdminBannerMapper.selectBannerList - <==      Total: 5
2025-08-20 15:43:10 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:43:10 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data={total=6, size=5, page=1, list=[Banner(id=10, imageUrl=/uploads/images/2025/08/20/c2 (truncated)...]
2025-08-20 15:43:10 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/banner/list, 耗时: 34ms, 状态: 200
2025-08-20 15:43:10 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:43:12 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/delivery/express-companies", parameters={}
2025-08-20 15:43:12 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/order/list?page=1&size=5&search=&status=", parameters={masked}
2025-08-20 15:43:12 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/delivery/express-companies, IP: 127.0.0.1
2025-08-20 15:43:12 [http-nio-8082-exec-6] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:43:12 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/order/list, 参数: page=1&size=5&search=&status=, IP: 127.0.0.1
2025-08-20 15:43:12 [http-nio-8082-exec-7] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:43:12 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:43:12 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data=[{code=SF, name=顺丰速运}, {code=YTO, name=圆通速递}, {code=ZTO, name=中通快递}, {code=STO, name (truncated)...]
2025-08-20 15:43:12 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:43:12 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/delivery/express-companies, 耗时: 56ms, 状态: 200
2025-08-20 15:43:12 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/order/admin/list?page=1&size=5
2025-08-20 15:43:12 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:43:12 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:43:12 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:43:12 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:43:12 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=5, size=5, page=1, list=[{id=9, orderNo=17555523739897bbe (truncated)...]
2025-08-20 15:43:12 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/order/list, 耗时: 446ms, 状态: 200
2025-08-20 15:43:12 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:43:13 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/category/list?page=1&size=5&search=", parameters={masked}
2025-08-20 15:43:13 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/category/list, 参数: page=1&size=5&search=, IP: 127.0.0.1
2025-08-20 15:43:13 [http-nio-8082-exec-4] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:43:13 [http-nio-8082-exec-4] DEBUG o.e.a.m.CategoryMapper.selectByConditions_COUNT - ==>  Preparing: SELECT count(0) FROM t_fruit_category
2025-08-20 15:43:13 [http-nio-8082-exec-4] DEBUG o.e.a.m.CategoryMapper.selectByConditions_COUNT - ==> Parameters: 
2025-08-20 15:43:13 [http-nio-8082-exec-4] DEBUG o.e.a.m.CategoryMapper.selectByConditions_COUNT - <==      Total: 1
2025-08-20 15:43:13 [http-nio-8082-exec-4] DEBUG o.e.admin.mapper.CategoryMapper.selectByConditions - ==>  Preparing: SELECT id, name, icon_name, icon_url, sort_order, status, create_time, update_time, create_by, update_by, remark FROM t_fruit_category ORDER BY sort_order ASC, id ASC LIMIT ?
2025-08-20 15:43:13 [http-nio-8082-exec-4] DEBUG o.e.admin.mapper.CategoryMapper.selectByConditions - ==> Parameters: 5(Integer)
2025-08-20 15:43:13 [http-nio-8082-exec-4] DEBUG o.e.admin.mapper.CategoryMapper.selectByConditions - <==      Total: 5
2025-08-20 15:43:13 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:43:13 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data={total=6, pages=2, size=5, page=1, list=[{iconName=Apple, createTime=2025-08-20 15:4 (truncated)...]
2025-08-20 15:43:13 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/category/list, 耗时: 30ms, 状态: 200
2025-08-20 15:43:13 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:43:16 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/banner/list?page=1&size=5&search=", parameters={masked}
2025-08-20 15:43:16 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/banner/list, 参数: page=1&size=5&search=, IP: 127.0.0.1
2025-08-20 15:43:16 [http-nio-8082-exec-1] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:43:16 [http-nio-8082-exec-1] DEBUG o.e.admin.mapper.AdminBannerMapper.countBanners - ==>  Preparing: SELECT COUNT(*) FROM t_banner
2025-08-20 15:43:16 [http-nio-8082-exec-1] DEBUG o.e.admin.mapper.AdminBannerMapper.countBanners - ==> Parameters: 
2025-08-20 15:43:16 [http-nio-8082-exec-1] DEBUG o.e.admin.mapper.AdminBannerMapper.countBanners - <==      Total: 1
2025-08-20 15:43:16 [http-nio-8082-exec-1] DEBUG o.e.a.mapper.AdminBannerMapper.selectBannerList - ==>  Preparing: SELECT id, image_url, link_url, sort, status, create_time, update_time, create_by, update_by, remark FROM t_banner ORDER BY sort ASC, create_time DESC LIMIT ?, ?
2025-08-20 15:43:16 [http-nio-8082-exec-1] DEBUG o.e.a.mapper.AdminBannerMapper.selectBannerList - ==> Parameters: 0(Integer), 5(Integer)
2025-08-20 15:43:16 [http-nio-8082-exec-1] DEBUG o.e.a.mapper.AdminBannerMapper.selectBannerList - <==      Total: 5
2025-08-20 15:43:16 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:43:16 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data={total=6, size=5, page=1, list=[Banner(id=10, imageUrl=/uploads/images/2025/08/20/c2 (truncated)...]
2025-08-20 15:43:16 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/banner/list, 耗时: 27ms, 状态: 200
2025-08-20 15:43:16 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:43:19 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/delivery/express-companies", parameters={}
2025-08-20 15:43:19 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/order/list?page=1&size=5&search=&status=", parameters={masked}
2025-08-20 15:43:19 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/delivery/express-companies, IP: 127.0.0.1
2025-08-20 15:43:19 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/order/list, 参数: page=1&size=5&search=&status=, IP: 127.0.0.1
2025-08-20 15:43:19 [http-nio-8082-exec-10] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:43:19 [http-nio-8082-exec-9] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:43:19 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:43:19 [http-nio-8082-exec-10] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/order/admin/list?page=1&size=5
2025-08-20 15:43:19 [http-nio-8082-exec-10] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:43:19 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data=[{code=SF, name=顺丰速运}, {code=YTO, name=圆通速递}, {code=ZTO, name=中通快递}, {code=STO, name (truncated)...]
2025-08-20 15:43:19 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:43:19 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/delivery/express-companies, 耗时: 18ms, 状态: 200
2025-08-20 15:43:19 [http-nio-8082-exec-10] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:43:19 [http-nio-8082-exec-10] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:43:19 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:43:19 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=5, size=5, page=1, list=[{id=9, orderNo=17555523739897bbe (truncated)...]
2025-08-20 15:43:20 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/order/list, 耗时: 205ms, 状态: 200
2025-08-20 15:43:20 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:45:05 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/order/list?page=1&size=5&search=&status=", parameters={masked}
2025-08-20 15:45:05 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/delivery/express-companies", parameters={}
2025-08-20 15:45:05 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/delivery/express-companies, IP: 127.0.0.1
2025-08-20 15:45:05 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/order/list, 参数: page=1&size=5&search=&status=, IP: 127.0.0.1
2025-08-20 15:45:05 [http-nio-8082-exec-3] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:45:05 [http-nio-8082-exec-8] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:45:05 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:45:05 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data=[{code=SF, name=顺丰速运}, {code=YTO, name=圆通速递}, {code=ZTO, name=中通快递}, {code=STO, name (truncated)...]
2025-08-20 15:45:05 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/order/admin/list?page=1&size=5
2025-08-20 15:45:05 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:45:05 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/delivery/express-companies, 耗时: 28ms, 状态: 200
2025-08-20 15:45:05 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:45:05 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:45:05 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:45:05 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:45:05 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=5, size=5, page=1, list=[{id=16, orderNo=175567585345232f (truncated)...]
2025-08-20 15:45:05 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/order/list, 耗时: 164ms, 状态: 200
2025-08-20 15:45:05 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:45:55 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/delivery/express-companies", parameters={}
2025-08-20 15:45:55 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/order/list?page=1&size=5&search=&status=", parameters={masked}
2025-08-20 15:45:55 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/delivery/express-companies, IP: 127.0.0.1
2025-08-20 15:45:55 [http-nio-8082-exec-2] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:45:55 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/order/list, 参数: page=1&size=5&search=&status=, IP: 127.0.0.1
2025-08-20 15:45:55 [http-nio-8082-exec-5] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:45:55 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:45:55 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data=[{code=SF, name=顺丰速运}, {code=YTO, name=圆通速递}, {code=ZTO, name=中通快递}, {code=STO, name (truncated)...]
2025-08-20 15:45:55 [http-nio-8082-exec-5] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/order/admin/list?page=1&size=5
2025-08-20 15:45:55 [http-nio-8082-exec-5] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:45:55 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/delivery/express-companies, 耗时: 65ms, 状态: 200
2025-08-20 15:45:55 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:45:55 [http-nio-8082-exec-5] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:45:55 [http-nio-8082-exec-5] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:45:55 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:45:55 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=5, size=5, page=1, list=[{id=16, orderNo=175567585345232f (truncated)...]
2025-08-20 15:45:55 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/order/list, 耗时: 190ms, 状态: 200
2025-08-20 15:45:55 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:45:59 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/delivery/orders?page=1&size=10", parameters={masked}
2025-08-20 15:45:59 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/delivery/express-companies", parameters={}
2025-08-20 15:45:59 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/delivery/orders, 参数: page=1&size=10, IP: 127.0.0.1
2025-08-20 15:45:59 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/delivery/express-companies, IP: 127.0.0.1
2025-08-20 15:45:59 [http-nio-8082-exec-6] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:45:59 [http-nio-8082-exec-7] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:45:59 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:45:59 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/order/admin/list?page=1&size=10&status=paid
2025-08-20 15:45:59 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data=[{code=SF, name=顺丰速运}, {code=YTO, name=圆通速递}, {code=ZTO, name=中通快递}, {code=STO, name (truncated)...]
2025-08-20 15:45:59 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:45:59 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/delivery/express-companies, 耗时: 46ms, 状态: 200
2025-08-20 15:45:59 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:45:59 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:45:59 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:45:59 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:45:59 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data={total=3, size=3, page=1, list=[{id=16, orderNo=175567585345232f286, userId=3, statu (truncated)...]
2025-08-20 15:45:59 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:45:59 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/delivery/orders, 耗时: 330ms, 状态: 200
2025-08-20 15:46:08 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/admin/admin/delivery/ship", parameters={}
2025-08-20 15:46:08 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: POST, URI: /admin/admin/delivery/ship, IP: 127.0.0.1
2025-08-20 15:46:08 [http-nio-8082-exec-4] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:46:08 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [{orderId=16, expressCompany=顺丰速运, expressNo=2345678}]
2025-08-20 15:46:08 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:46:08 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=404, message=订单不存在}]
2025-08-20 15:46:08 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: POST, URI: /admin/admin/delivery/ship, 耗时: 45ms, 状态: 200
2025-08-20 15:46:08 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:46:19 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/admin/admin/delivery/ship", parameters={}
2025-08-20 15:46:19 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: POST, URI: /admin/admin/delivery/ship, IP: 127.0.0.1
2025-08-20 15:46:19 [http-nio-8082-exec-1] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:46:19 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [{orderId=16, expressCompany=顺丰速运, expressNo=2345678}]
2025-08-20 15:46:19 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:46:19 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=404, message=订单不存在}]
2025-08-20 15:46:19 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: POST, URI: /admin/admin/delivery/ship, 耗时: 10ms, 状态: 200
2025-08-20 15:46:19 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:46:32 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/delivery/orders/16", parameters={}
2025-08-20 15:46:32 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/delivery/orders/16, IP: 127.0.0.1
2025-08-20 15:46:32 [http-nio-8082-exec-9] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:46:33 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:46:33 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=404, message=订单不存在}]
2025-08-20 15:46:33 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/delivery/orders/16, 耗时: 175ms, 状态: 200
2025-08-20 15:46:33 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:47:51 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/delivery/orders?page=1&size=10", parameters={masked}
2025-08-20 15:47:51 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/delivery/express-companies", parameters={}
2025-08-20 15:47:51 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/delivery/orders, 参数: page=1&size=10, IP: 127.0.0.1
2025-08-20 15:47:51 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/delivery/express-companies, IP: 127.0.0.1
2025-08-20 15:47:51 [http-nio-8082-exec-10] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:47:51 [http-nio-8082-exec-3] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:47:51 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:47:51 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data=[{code=SF, name=顺丰速运}, {code=YTO, name=圆通速递}, {code=ZTO, name=中通快递}, {code=STO, name (truncated)...]
2025-08-20 15:47:51 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/order/admin/list?page=1&size=10&status=paid
2025-08-20 15:47:52 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:47:52 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/delivery/express-companies, 耗时: 43ms, 状态: 200
2025-08-20 15:47:52 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:47:52 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:47:52 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:47:52 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:47:52 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data={total=3, size=3, page=1, list=[{id=16, orderNo=175567585345232f286, userId=3, statu (truncated)...]
2025-08-20 15:47:52 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/delivery/orders, 耗时: 695ms, 状态: 200
2025-08-20 15:47:52 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:47:54 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/categories", parameters={}
2025-08-20 15:47:54 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/list?page=1&size=5&search=&category=&status=", parameters={masked}
2025-08-20 15:47:54 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/list, 参数: page=1&size=5&search=&category=&status=, IP: 127.0.0.1
2025-08-20 15:47:54 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/categories, IP: 127.0.0.1
2025-08-20 15:47:54 [http-nio-8082-exec-2] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:47:54 [http-nio-8082-exec-8] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:47:54 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/admin/list?page=1&size=5
2025-08-20 15:47:54 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/categories
2025-08-20 15:47:54 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:47:54 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:47:54 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:47:54 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.List<java.lang.String>]
2025-08-20 15:47:54 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:47:54 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data=[热带水果, 温带水果, 亚热带水果, 进口水果, 有机水果])]
2025-08-20 15:47:54 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:47:54 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/categories, 耗时: 78ms, 状态: 200
2025-08-20 15:47:54 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:47:54 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:47:54 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:47:54 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=15, size=5, page=1, list=[{id=1, name=测试商品, description=n (truncated)...]
2025-08-20 15:47:54 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/list, 耗时: 145ms, 状态: 200
2025-08-20 15:47:54 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:48:05 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - PUT "/admin/admin/fruit/update", parameters={}
2025-08-20 15:48:05 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: PUT, URI: /admin/admin/fruit/update, IP: 127.0.0.1
2025-08-20 15:48:05 [http-nio-8082-exec-5] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:48:05 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [Fruit(id=1, name=测试商品, description=null, origin=测试产地, price=99.99, unit=1个, stock=100, imageUrl=/upl (truncated)...]
2025-08-20 15:48:05 [http-nio-8082-exec-5] DEBUG org.springframework.web.client.RestTemplate - HTTP PUT http://localhost:8080/api/fruit/admin/update/1
2025-08-20 15:48:05 [http-nio-8082-exec-5] DEBUG org.springframework.web.client.RestTemplate - Writing [Fruit(id=1, name=测试商品, description=null, origin=测试产地, price=99.99, unit=1个, stock=100, imageUrl=/uploads/images/2025/08/17/81defe3f-7902-4aa0-b490-771389706e69.jpg, category=热带水果, taste=null, nutrition=null, suitableCrowd=null, status=0, recommended=null, flashSaleActive=null, flashSalePrice=null, flashSaleOriginalPrice=null, flashSaleStartTime=null, flashSaleEndTime=null, flashSaleStock=null, flashSaleSoldCount=null)] with org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
2025-08-20 15:48:06 [http-nio-8082-exec-5] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:48:06 [http-nio-8082-exec-5] INFO  o.e.admin.service.impl.AdminProductServiceImpl - 更新商品成功: 测试商品
2025-08-20 15:48:06 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:48:06 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data=商品更新成功)]
2025-08-20 15:48:06 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: PUT, URI: /admin/admin/fruit/update, 耗时: 260ms, 状态: 200
2025-08-20 15:48:06 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:48:06 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/list?page=1&size=5&search=&category=&status=", parameters={masked}
2025-08-20 15:48:06 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/list, 参数: page=1&size=5&search=&category=&status=, IP: 127.0.0.1
2025-08-20 15:48:06 [http-nio-8082-exec-6] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:48:06 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/admin/list?page=1&size=5
2025-08-20 15:48:06 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:48:06 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:48:06 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:48:06 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:48:06 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=15, size=5, page=1, list=[{id=1, name=测试商品, description=n (truncated)...]
2025-08-20 15:48:06 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/list, 耗时: 83ms, 状态: 200
2025-08-20 15:48:06 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:48:10 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/delivery/express-companies", parameters={}
2025-08-20 15:48:10 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/delivery/orders?page=1&size=10", parameters={masked}
2025-08-20 15:48:10 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/delivery/orders, 参数: page=1&size=10, IP: 127.0.0.1
2025-08-20 15:48:10 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/delivery/express-companies, IP: 127.0.0.1
2025-08-20 15:48:10 [http-nio-8082-exec-7] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:48:10 [http-nio-8082-exec-4] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:48:10 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/order/admin/list?page=1&size=10&status=paid
2025-08-20 15:48:10 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:48:10 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:48:10 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data=[{code=SF, name=顺丰速运}, {code=YTO, name=圆通速递}, {code=ZTO, name=中通快递}, {code=STO, name (truncated)...]
2025-08-20 15:48:10 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/delivery/express-companies, 耗时: 8ms, 状态: 200
2025-08-20 15:48:10 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:48:10 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:48:10 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:48:10 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:48:10 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data={total=3, size=3, page=1, list=[{id=16, orderNo=175567585345232f286, userId=3, statu (truncated)...]
2025-08-20 15:48:10 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:48:10 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/delivery/orders, 耗时: 51ms, 状态: 200
2025-08-20 15:48:12 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/list?page=1&size=5&search=&category=&status=", parameters={masked}
2025-08-20 15:48:12 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/categories", parameters={}
2025-08-20 15:48:12 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/list, 参数: page=1&size=5&search=&category=&status=, IP: 127.0.0.1
2025-08-20 15:48:12 [http-nio-8082-exec-9] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:48:12 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/categories, IP: 127.0.0.1
2025-08-20 15:48:12 [http-nio-8082-exec-1] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:48:12 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/categories
2025-08-20 15:48:12 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:48:12 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/admin/list?page=1&size=5
2025-08-20 15:48:12 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:48:12 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:48:12 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:48:12 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.List<java.lang.String>]
2025-08-20 15:48:12 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:48:12 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:48:12 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data=[热带水果, 温带水果, 亚热带水果, 进口水果, 有机水果])]
2025-08-20 15:48:12 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:48:12 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:48:12 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/categories, 耗时: 41ms, 状态: 200
2025-08-20 15:48:12 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=15, size=5, page=1, list=[{id=1, name=测试商品, description=n (truncated)...]
2025-08-20 15:48:12 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:48:12 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/list, 耗时: 44ms, 状态: 200
2025-08-20 15:48:13 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/delivery/orders?page=1&size=10", parameters={masked}
2025-08-20 15:48:13 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/delivery/express-companies", parameters={}
2025-08-20 15:48:13 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:48:13 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data=[{code=SF, name=顺丰速运}, {code=YTO, name=圆通速递}, {code=ZTO, name=中通快递}, {code=STO, name (truncated)...]
2025-08-20 15:48:13 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/delivery/express-companies, IP: 127.0.0.1
2025-08-20 15:48:13 [http-nio-8082-exec-10] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:48:13 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:48:13 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/delivery/orders, 参数: page=1&size=10, IP: 127.0.0.1
2025-08-20 15:48:13 [http-nio-8082-exec-3] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:48:13 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/delivery/express-companies, 耗时: 5ms, 状态: 200
2025-08-20 15:48:13 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/order/admin/list?page=1&size=10&status=paid
2025-08-20 15:48:13 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:48:13 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:48:13 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:48:13 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:48:13 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data={total=3, size=3, page=1, list=[{id=16, orderNo=175567585345232f286, userId=3, statu (truncated)...]
2025-08-20 15:48:13 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/delivery/orders, 耗时: 100ms, 状态: 200
2025-08-20 15:48:13 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:48:14 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/list?page=1&size=5&search=&category=&status=", parameters={masked}
2025-08-20 15:48:14 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/categories", parameters={}
2025-08-20 15:48:14 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/list, 参数: page=1&size=5&search=&category=&status=, IP: 127.0.0.1
2025-08-20 15:48:14 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/categories, IP: 127.0.0.1
2025-08-20 15:48:14 [http-nio-8082-exec-2] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:48:14 [http-nio-8082-exec-8] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:48:14 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/categories
2025-08-20 15:48:14 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:48:14 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/admin/list?page=1&size=5
2025-08-20 15:48:14 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:48:14 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:48:14 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.List<java.lang.String>]
2025-08-20 15:48:14 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:48:14 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data=[热带水果, 温带水果, 亚热带水果, 进口水果, 有机水果])]
2025-08-20 15:48:14 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/categories, 耗时: 32ms, 状态: 200
2025-08-20 15:48:14 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:48:14 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:48:14 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:48:14 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:48:14 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=15, size=5, page=1, list=[{id=1, name=测试商品, description=n (truncated)...]
2025-08-20 15:48:14 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/list, 耗时: 65ms, 状态: 200
2025-08-20 15:48:14 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:48:56 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/admin/admin/fruit/add", parameters={}
2025-08-20 15:48:56 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: POST, URI: /admin/admin/fruit/add, IP: 127.0.0.1
2025-08-20 15:48:56 [http-nio-8082-exec-5] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:48:56 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [Fruit(id=null, name=苹果, description=null, origin=广西, price=10.9, unit=kg, stock=3, imageUrl=/uploads (truncated)...]
2025-08-20 15:48:56 [http-nio-8082-exec-5] DEBUG org.springframework.web.client.RestTemplate - HTTP POST http://localhost:8080/api/fruit/admin/add
2025-08-20 15:48:56 [http-nio-8082-exec-5] DEBUG org.springframework.web.client.RestTemplate - Accept=[text/plain, application/json, application/*+json, */*]
2025-08-20 15:48:56 [http-nio-8082-exec-5] DEBUG org.springframework.web.client.RestTemplate - Writing [Fruit(id=null, name=苹果, description=null, origin=广西, price=10.9, unit=kg, stock=3, imageUrl=/uploads/images/2025/08/20/d7d66682-abab-4894-9f6a-24b301193330.jpg, category=温带水果, taste=null, nutrition=null, suitableCrowd=null, status=1, recommended=null, flashSaleActive=null, flashSalePrice=null, flashSaleOriginalPrice=null, flashSaleStartTime=null, flashSaleEndTime=null, flashSaleStock=null, flashSaleSoldCount=null)] with org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
2025-08-20 15:48:56 [http-nio-8082-exec-5] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:48:56 [http-nio-8082-exec-5] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=UTF-8"
2025-08-20 15:48:56 [http-nio-8082-exec-5] INFO  o.e.admin.service.impl.AdminProductServiceImpl - 添加商品成功: 苹果
2025-08-20 15:48:56 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:48:56 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data=商品添加成功)]
2025-08-20 15:48:56 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: POST, URI: /admin/admin/fruit/add, 耗时: 93ms, 状态: 200
2025-08-20 15:48:56 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:48:56 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/list?page=1&size=5&search=&category=&status=", parameters={masked}
2025-08-20 15:48:56 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/list, 参数: page=1&size=5&search=&category=&status=, IP: 127.0.0.1
2025-08-20 15:48:56 [http-nio-8082-exec-6] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:48:56 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/admin/list?page=1&size=5
2025-08-20 15:48:56 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:48:56 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:48:56 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:48:56 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:48:56 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=16, size=5, page=1, list=[{id=1, name=测试商品, description=n (truncated)...]
2025-08-20 15:48:56 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/list, 耗时: 60ms, 状态: 200
2025-08-20 15:48:56 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:49:55 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - PUT "/admin/admin/fruit/update", parameters={}
2025-08-20 15:49:55 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: PUT, URI: /admin/admin/fruit/update, IP: 127.0.0.1
2025-08-20 15:49:55 [http-nio-8082-exec-4] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:49:55 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [Fruit(id=1, name=测试商品, description=null, origin=测试产地, price=99.99, unit=盒, stock=100, imageUrl=/uplo (truncated)...]
2025-08-20 15:49:55 [http-nio-8082-exec-4] DEBUG org.springframework.web.client.RestTemplate - HTTP PUT http://localhost:8080/api/fruit/admin/update/1
2025-08-20 15:49:55 [http-nio-8082-exec-4] DEBUG org.springframework.web.client.RestTemplate - Writing [Fruit(id=1, name=测试商品, description=null, origin=测试产地, price=99.99, unit=盒, stock=100, imageUrl=/uploads/images/2025/08/17/81defe3f-7902-4aa0-b490-771389706e69.jpg, category=热带水果, taste=null, nutrition=null, suitableCrowd=null, status=0, recommended=null, flashSaleActive=null, flashSalePrice=null, flashSaleOriginalPrice=null, flashSaleStartTime=null, flashSaleEndTime=null, flashSaleStock=null, flashSaleSoldCount=null)] with org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
2025-08-20 15:49:55 [http-nio-8082-exec-4] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:49:55 [http-nio-8082-exec-4] INFO  o.e.admin.service.impl.AdminProductServiceImpl - 更新商品成功: 测试商品
2025-08-20 15:49:55 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:49:55 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data=商品更新成功)]
2025-08-20 15:49:55 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: PUT, URI: /admin/admin/fruit/update, 耗时: 62ms, 状态: 200
2025-08-20 15:49:55 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:49:55 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/list?page=1&size=5&search=&category=&status=", parameters={masked}
2025-08-20 15:49:55 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/list, 参数: page=1&size=5&search=&category=&status=, IP: 127.0.0.1
2025-08-20 15:49:55 [http-nio-8082-exec-7] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:49:55 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/admin/list?page=1&size=5
2025-08-20 15:49:55 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:49:55 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:49:55 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:49:55 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:49:55 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=16, size=5, page=1, list=[{id=1, name=测试商品, description=n (truncated)...]
2025-08-20 15:49:55 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:49:55 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/list, 耗时: 77ms, 状态: 200
2025-08-20 15:49:59 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/list?page=4&size=5&search=&category=&status=", parameters={masked}
2025-08-20 15:49:59 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/list, 参数: page=4&size=5&search=&category=&status=, IP: 127.0.0.1
2025-08-20 15:49:59 [http-nio-8082-exec-1] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:49:59 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/admin/list?page=4&size=5
2025-08-20 15:49:59 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:49:59 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:49:59 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:49:59 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:49:59 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=16, size=5, page=4, list=[{id=18, name=苹果, description=nu (truncated)...]
2025-08-20 15:49:59 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:49:59 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/list, 耗时: 39ms, 状态: 200
2025-08-20 15:50:12 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/list?page=3&size=5&search=&category=&status=", parameters={masked}
2025-08-20 15:50:12 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/list, 参数: page=3&size=5&search=&category=&status=, IP: 127.0.0.1
2025-08-20 15:50:12 [http-nio-8082-exec-9] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:50:12 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/admin/list?page=3&size=5
2025-08-20 15:50:12 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:50:12 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:50:12 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:50:12 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:50:12 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=16, size=5, page=3, list=[{id=11, name=山东大黄桃, description (truncated)...]
2025-08-20 15:50:12 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/list, 耗时: 53ms, 状态: 200
2025-08-20 15:50:12 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:50:15 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/list?page=2&size=5&search=&category=&status=", parameters={masked}
2025-08-20 15:50:15 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/list, 参数: page=2&size=5&search=&category=&status=, IP: 127.0.0.1
2025-08-20 15:50:15 [http-nio-8082-exec-10] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:50:15 [http-nio-8082-exec-10] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/admin/list?page=2&size=5
2025-08-20 15:50:15 [http-nio-8082-exec-10] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:50:15 [http-nio-8082-exec-10] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:50:15 [http-nio-8082-exec-10] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:50:15 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:50:15 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=16, size=5, page=2, list=[{id=6, name=广西百香果, description= (truncated)...]
2025-08-20 15:50:15 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/list, 耗时: 67ms, 状态: 200
2025-08-20 15:50:15 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:50:19 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/list?page=1&size=5&search=&category=&status=", parameters={masked}
2025-08-20 15:50:19 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/list, 参数: page=1&size=5&search=&category=&status=, IP: 127.0.0.1
2025-08-20 15:50:19 [http-nio-8082-exec-3] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:50:19 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/admin/list?page=1&size=5
2025-08-20 15:50:19 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:50:19 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:50:19 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:50:19 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:50:19 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=16, size=5, page=1, list=[{id=1, name=测试商品, description=n (truncated)...]
2025-08-20 15:50:19 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/list, 耗时: 99ms, 状态: 200
2025-08-20 15:50:19 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:50:22 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/list?page=4&size=5&search=&category=&status=", parameters={masked}
2025-08-20 15:50:22 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/list, 参数: page=4&size=5&search=&category=&status=, IP: 127.0.0.1
2025-08-20 15:50:22 [http-nio-8082-exec-8] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:50:22 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/admin/list?page=4&size=5
2025-08-20 15:50:22 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:50:22 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:50:22 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:50:22 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:50:22 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=16, size=5, page=4, list=[{id=18, name=苹果, description=nu (truncated)...]
2025-08-20 15:50:22 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/list, 耗时: 74ms, 状态: 200
2025-08-20 15:50:22 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:50:40 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - DELETE "/admin/admin/fruit/delete/18", parameters={}
2025-08-20 15:50:40 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: DELETE, URI: /admin/admin/fruit/delete/18, IP: 127.0.0.1
2025-08-20 15:50:40 [http-nio-8082-exec-2] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:50:40 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - HTTP DELETE http://localhost:8080/api/fruit/admin/delete/18
2025-08-20 15:50:40 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:50:40 [http-nio-8082-exec-2] INFO  o.e.admin.service.impl.AdminProductServiceImpl - 删除商品成功，ID: 18
2025-08-20 15:50:40 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:50:40 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data=商品删除成功)]
2025-08-20 15:50:40 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: DELETE, URI: /admin/admin/fruit/delete/18, 耗时: 181ms, 状态: 200
2025-08-20 15:50:40 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:50:40 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/list?page=4&size=5&search=&category=&status=", parameters={masked}
2025-08-20 15:50:40 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/list, 参数: page=4&size=5&search=&category=&status=, IP: 127.0.0.1
2025-08-20 15:50:40 [http-nio-8082-exec-5] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:50:40 [http-nio-8082-exec-5] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/admin/list?page=4&size=5
2025-08-20 15:50:40 [http-nio-8082-exec-5] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:50:40 [http-nio-8082-exec-5] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:50:40 [http-nio-8082-exec-5] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:50:40 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:50:40 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=15, size=5, page=4, list=[]})]
2025-08-20 15:50:40 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/list, 耗时: 72ms, 状态: 200
2025-08-20 15:50:40 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:50:40 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/list?page=3&size=5&search=&category=&status=", parameters={masked}
2025-08-20 15:50:40 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/list, 参数: page=3&size=5&search=&category=&status=, IP: 127.0.0.1
2025-08-20 15:50:40 [http-nio-8082-exec-6] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:50:40 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/admin/list?page=3&size=5
2025-08-20 15:50:40 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:50:40 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:50:40 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:50:40 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:50:40 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=15, size=5, page=3, list=[{id=11, name=山东大黄桃, description (truncated)...]
2025-08-20 15:50:40 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/list, 耗时: 37ms, 状态: 200
2025-08-20 15:50:40 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:50:56 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/category/list?page=1&size=5&search=", parameters={masked}
2025-08-20 15:50:56 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/category/list, 参数: page=1&size=5&search=, IP: 127.0.0.1
2025-08-20 15:50:56 [http-nio-8082-exec-4] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:50:56 [http-nio-8082-exec-4] DEBUG o.e.a.m.CategoryMapper.selectByConditions_COUNT - ==>  Preparing: SELECT count(0) FROM t_fruit_category
2025-08-20 15:50:56 [http-nio-8082-exec-4] DEBUG o.e.a.m.CategoryMapper.selectByConditions_COUNT - ==> Parameters: 
2025-08-20 15:50:56 [http-nio-8082-exec-4] DEBUG o.e.a.m.CategoryMapper.selectByConditions_COUNT - <==      Total: 1
2025-08-20 15:50:56 [http-nio-8082-exec-4] DEBUG o.e.admin.mapper.CategoryMapper.selectByConditions - ==>  Preparing: SELECT id, name, icon_name, icon_url, sort_order, status, create_time, update_time, create_by, update_by, remark FROM t_fruit_category ORDER BY sort_order ASC, id ASC LIMIT ?
2025-08-20 15:50:56 [http-nio-8082-exec-4] DEBUG o.e.admin.mapper.CategoryMapper.selectByConditions - ==> Parameters: 5(Integer)
2025-08-20 15:50:56 [http-nio-8082-exec-4] DEBUG o.e.admin.mapper.CategoryMapper.selectByConditions - <==      Total: 5
2025-08-20 15:50:56 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:50:56 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data={total=6, pages=2, size=5, page=1, list=[{iconName=Apple, createTime=2025-08-20 15:5 (truncated)...]
2025-08-20 15:50:56 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/category/list, 耗时: 116ms, 状态: 200
2025-08-20 15:50:56 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:51:10 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/list?page=1&size=5&search=&category=&status=", parameters={masked}
2025-08-20 15:51:10 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/categories", parameters={}
2025-08-20 15:51:10 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/categories, IP: 127.0.0.1
2025-08-20 15:51:10 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/list, 参数: page=1&size=5&search=&category=&status=, IP: 127.0.0.1
2025-08-20 15:51:10 [http-nio-8082-exec-1] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:51:10 [http-nio-8082-exec-7] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:51:10 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/admin/list?page=1&size=5
2025-08-20 15:51:10 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/categories
2025-08-20 15:51:10 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:51:10 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:51:10 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:51:10 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.List<java.lang.String>]
2025-08-20 15:51:10 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:51:10 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data=[热带水果, 温带水果, 亚热带水果, 进口水果, 有机水果])]
2025-08-20 15:51:10 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/categories, 耗时: 48ms, 状态: 200
2025-08-20 15:51:10 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:51:10 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:51:10 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:51:10 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:51:10 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=15, size=5, page=1, list=[{id=1, name=测试商品, description=n (truncated)...]
2025-08-20 15:51:10 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:51:10 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/list, 耗时: 77ms, 状态: 200
2025-08-20 15:51:19 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - PUT "/admin/admin/fruit/update", parameters={}
2025-08-20 15:51:19 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: PUT, URI: /admin/admin/fruit/update, IP: 127.0.0.1
2025-08-20 15:51:19 [http-nio-8082-exec-9] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:51:19 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [Fruit(id=1, name=测试商品, description=null, origin=测试产地, price=99.99, unit=盒/5, stock=100, imageUrl=/up (truncated)...]
2025-08-20 15:51:19 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - HTTP PUT http://localhost:8080/api/fruit/admin/update/1
2025-08-20 15:51:19 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - Writing [Fruit(id=1, name=测试商品, description=null, origin=测试产地, price=99.99, unit=盒/5, stock=100, imageUrl=/uploads/images/2025/08/17/81defe3f-7902-4aa0-b490-771389706e69.jpg, category=热带水果, taste=null, nutrition=null, suitableCrowd=null, status=0, recommended=null, flashSaleActive=null, flashSalePrice=null, flashSaleOriginalPrice=null, flashSaleStartTime=null, flashSaleEndTime=null, flashSaleStock=null, flashSaleSoldCount=null)] with org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
2025-08-20 15:51:19 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:51:19 [http-nio-8082-exec-9] INFO  o.e.admin.service.impl.AdminProductServiceImpl - 更新商品成功: 测试商品
2025-08-20 15:51:19 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:51:19 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data=商品更新成功)]
2025-08-20 15:51:19 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: PUT, URI: /admin/admin/fruit/update, 耗时: 85ms, 状态: 200
2025-08-20 15:51:19 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:51:20 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/list?page=1&size=5&search=&category=&status=", parameters={masked}
2025-08-20 15:51:20 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/list, 参数: page=1&size=5&search=&category=&status=, IP: 127.0.0.1
2025-08-20 15:51:20 [http-nio-8082-exec-10] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:51:20 [http-nio-8082-exec-10] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/admin/list?page=1&size=5
2025-08-20 15:51:20 [http-nio-8082-exec-10] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:51:20 [http-nio-8082-exec-10] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:51:20 [http-nio-8082-exec-10] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:51:20 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:51:20 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=15, size=5, page=1, list=[{id=1, name=测试商品, description=n (truncated)...]
2025-08-20 15:51:20 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/list, 耗时: 81ms, 状态: 200
2025-08-20 15:51:20 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:51:21 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - PUT "/admin/admin/fruit/toggle-status/1", parameters={}
2025-08-20 15:51:21 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: PUT, URI: /admin/admin/fruit/toggle-status/1, IP: 127.0.0.1
2025-08-20 15:51:21 [http-nio-8082-exec-3] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:51:21 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - HTTP PUT http://localhost:8080/api/fruit/admin/status/1
2025-08-20 15:51:21 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:51:21 [http-nio-8082-exec-3] INFO  o.e.admin.service.impl.AdminProductServiceImpl - 切换商品状态成功，ID: 1
2025-08-20 15:51:21 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:51:21 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data=状态切换成功)]
2025-08-20 15:51:21 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:51:21 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: PUT, URI: /admin/admin/fruit/toggle-status/1, 耗时: 54ms, 状态: 200
2025-08-20 15:51:21 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/list?page=1&size=5&search=&category=&status=", parameters={masked}
2025-08-20 15:51:21 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/list, 参数: page=1&size=5&search=&category=&status=, IP: 127.0.0.1
2025-08-20 15:51:21 [http-nio-8082-exec-8] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:51:21 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/admin/list?page=1&size=5
2025-08-20 15:51:21 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:51:21 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:51:21 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:51:21 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:51:21 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=15, size=5, page=1, list=[{id=1, name=测试商品, description=n (truncated)...]
2025-08-20 15:51:21 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/list, 耗时: 60ms, 状态: 200
2025-08-20 15:51:21 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:51:24 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - PUT "/admin/admin/fruit/recommend/1?recommended=true", parameters={masked}
2025-08-20 15:51:24 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: PUT, URI: /admin/admin/fruit/recommend/1, 参数: recommended=true, IP: 127.0.0.1
2025-08-20 15:51:24 [http-nio-8082-exec-2] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:51:24 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - HTTP PUT http://localhost:8080/api/fruit/admin/recommend/1
2025-08-20 15:51:24 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Writing [{recommended=true}] with org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
2025-08-20 15:51:24 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:51:24 [http-nio-8082-exec-2] INFO  o.e.admin.service.impl.AdminProductServiceImpl - 设置商品推荐状态成功，ID: 1, 推荐状态: true
2025-08-20 15:51:24 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:51:24 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data=推荐状态设置成功)]
2025-08-20 15:51:24 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: PUT, URI: /admin/admin/fruit/recommend/1, 耗时: 44ms, 状态: 200
2025-08-20 15:51:24 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:51:24 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/list?page=1&size=5&search=&category=&status=", parameters={masked}
2025-08-20 15:51:24 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/list, 参数: page=1&size=5&search=&category=&status=, IP: 127.0.0.1
2025-08-20 15:51:24 [http-nio-8082-exec-5] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:51:24 [http-nio-8082-exec-5] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/admin/list?page=1&size=5
2025-08-20 15:51:24 [http-nio-8082-exec-5] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:51:24 [http-nio-8082-exec-5] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:51:24 [http-nio-8082-exec-5] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:51:24 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:51:24 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=15, size=5, page=1, list=[{id=1, name=测试商品, description=n (truncated)...]
2025-08-20 15:51:24 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/list, 耗时: 21ms, 状态: 200
2025-08-20 15:51:24 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:51:32 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/list?page=3&size=5&search=&category=&status=", parameters={masked}
2025-08-20 15:51:32 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/list, 参数: page=3&size=5&search=&category=&status=, IP: 127.0.0.1
2025-08-20 15:51:32 [http-nio-8082-exec-6] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:51:32 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/admin/list?page=3&size=5
2025-08-20 15:51:32 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:51:32 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:51:32 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:51:32 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:51:32 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=15, size=5, page=3, list=[{id=11, name=山东大黄桃, description (truncated)...]
2025-08-20 15:51:32 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/list, 耗时: 99ms, 状态: 200
2025-08-20 15:51:32 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:51:40 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/list?page=1&size=5&search=&category=&status=", parameters={masked}
2025-08-20 15:51:40 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/list, 参数: page=1&size=5&search=&category=&status=, IP: 127.0.0.1
2025-08-20 15:51:40 [http-nio-8082-exec-4] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:51:40 [http-nio-8082-exec-4] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/admin/list?page=1&size=5
2025-08-20 15:51:40 [http-nio-8082-exec-4] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:51:40 [http-nio-8082-exec-4] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:51:40 [http-nio-8082-exec-4] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:51:40 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:51:40 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=15, size=5, page=1, list=[{id=1, name=测试商品, description=n (truncated)...]
2025-08-20 15:51:40 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:51:40 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/list, 耗时: 22ms, 状态: 200
2025-08-20 15:51:42 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - PUT "/admin/admin/fruit/toggle-status/1", parameters={}
2025-08-20 15:51:42 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: PUT, URI: /admin/admin/fruit/toggle-status/1, IP: 127.0.0.1
2025-08-20 15:51:42 [http-nio-8082-exec-1] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:51:42 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - HTTP PUT http://localhost:8080/api/fruit/admin/status/1
2025-08-20 15:51:42 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:51:42 [http-nio-8082-exec-1] INFO  o.e.admin.service.impl.AdminProductServiceImpl - 切换商品状态成功，ID: 1
2025-08-20 15:51:42 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:51:42 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data=状态切换成功)]
2025-08-20 15:51:42 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: PUT, URI: /admin/admin/fruit/toggle-status/1, 耗时: 20ms, 状态: 200
2025-08-20 15:51:42 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:51:42 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/list?page=1&size=5&search=&category=&status=", parameters={masked}
2025-08-20 15:51:42 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/list, 参数: page=1&size=5&search=&category=&status=, IP: 127.0.0.1
2025-08-20 15:51:42 [http-nio-8082-exec-7] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:51:42 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/admin/list?page=1&size=5
2025-08-20 15:51:42 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:51:42 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:51:42 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:51:42 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:51:42 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=15, size=5, page=1, list=[{id=1, name=测试商品, description=n (truncated)...]
2025-08-20 15:51:42 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/list, 耗时: 25ms, 状态: 200
2025-08-20 15:51:42 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:51:43 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - PUT "/admin/admin/fruit/toggle-status/1", parameters={}
2025-08-20 15:51:43 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: PUT, URI: /admin/admin/fruit/toggle-status/1, IP: 127.0.0.1
2025-08-20 15:51:43 [http-nio-8082-exec-9] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:51:43 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - HTTP PUT http://localhost:8080/api/fruit/admin/status/1
2025-08-20 15:51:43 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:51:43 [http-nio-8082-exec-9] INFO  o.e.admin.service.impl.AdminProductServiceImpl - 切换商品状态成功，ID: 1
2025-08-20 15:51:43 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:51:43 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data=状态切换成功)]
2025-08-20 15:51:43 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: PUT, URI: /admin/admin/fruit/toggle-status/1, 耗时: 24ms, 状态: 200
2025-08-20 15:51:43 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:51:43 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/list?page=1&size=5&search=&category=&status=", parameters={masked}
2025-08-20 15:51:43 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/list, 参数: page=1&size=5&search=&category=&status=, IP: 127.0.0.1
2025-08-20 15:51:43 [http-nio-8082-exec-10] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:51:43 [http-nio-8082-exec-10] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/admin/list?page=1&size=5
2025-08-20 15:51:43 [http-nio-8082-exec-10] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:51:43 [http-nio-8082-exec-10] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:51:43 [http-nio-8082-exec-10] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:51:43 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:51:43 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=15, size=5, page=1, list=[{id=1, name=测试商品, description=n (truncated)...]
2025-08-20 15:51:43 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/list, 耗时: 31ms, 状态: 200
2025-08-20 15:51:43 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:52:04 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/category/list?page=1&size=5&search=", parameters={masked}
2025-08-20 15:52:04 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/category/list, 参数: page=1&size=5&search=, IP: 127.0.0.1
2025-08-20 15:52:04 [http-nio-8082-exec-3] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:52:04 [http-nio-8082-exec-3] DEBUG o.e.a.m.CategoryMapper.selectByConditions_COUNT - ==>  Preparing: SELECT count(0) FROM t_fruit_category
2025-08-20 15:52:04 [http-nio-8082-exec-3] DEBUG o.e.a.m.CategoryMapper.selectByConditions_COUNT - ==> Parameters: 
2025-08-20 15:52:04 [http-nio-8082-exec-3] DEBUG o.e.a.m.CategoryMapper.selectByConditions_COUNT - <==      Total: 1
2025-08-20 15:52:04 [http-nio-8082-exec-3] DEBUG o.e.admin.mapper.CategoryMapper.selectByConditions - ==>  Preparing: SELECT id, name, icon_name, icon_url, sort_order, status, create_time, update_time, create_by, update_by, remark FROM t_fruit_category ORDER BY sort_order ASC, id ASC LIMIT ?
2025-08-20 15:52:04 [http-nio-8082-exec-3] DEBUG o.e.admin.mapper.CategoryMapper.selectByConditions - ==> Parameters: 5(Integer)
2025-08-20 15:52:05 [http-nio-8082-exec-3] DEBUG o.e.admin.mapper.CategoryMapper.selectByConditions - <==      Total: 5
2025-08-20 15:52:05 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:52:05 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data={total=6, pages=2, size=5, page=1, list=[{iconName=Apple, createTime=2025-08-20 15:5 (truncated)...]
2025-08-20 15:52:05 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/category/list, 耗时: 740ms, 状态: 200
2025-08-20 15:52:05 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:52:09 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/delivery/express-companies", parameters={}
2025-08-20 15:52:09 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/delivery/orders?page=1&size=10", parameters={masked}
2025-08-20 15:52:09 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/delivery/orders, 参数: page=1&size=10, IP: 127.0.0.1
2025-08-20 15:52:09 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/delivery/express-companies, IP: 127.0.0.1
2025-08-20 15:52:09 [http-nio-8082-exec-8] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:52:09 [http-nio-8082-exec-2] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:52:09 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:52:09 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data=[{code=SF, name=顺丰速运}, {code=YTO, name=圆通速递}, {code=ZTO, name=中通快递}, {code=STO, name (truncated)...]
2025-08-20 15:52:09 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/delivery/express-companies, 耗时: 9ms, 状态: 200
2025-08-20 15:52:09 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:52:09 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/order/admin/list?page=1&size=10&status=paid
2025-08-20 15:52:09 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:52:10 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:52:10 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:52:10 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:52:10 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data={total=3, size=3, page=1, list=[{id=16, orderNo=175567585345232f286, userId=3, statu (truncated)...]
2025-08-20 15:52:10 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/delivery/orders, 耗时: 97ms, 状态: 200
2025-08-20 15:52:10 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:52:19 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/admin/admin/delivery/ship", parameters={}
2025-08-20 15:52:19 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: POST, URI: /admin/admin/delivery/ship, IP: 127.0.0.1
2025-08-20 15:52:19 [http-nio-8082-exec-5] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:52:19 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [{orderId=16, expressCompany=顺丰速运, expressNo=1234567}]
2025-08-20 15:52:19 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:52:19 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=404, message=订单不存在}]
2025-08-20 15:52:19 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: POST, URI: /admin/admin/delivery/ship, 耗时: 12ms, 状态: 200
2025-08-20 15:52:19 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:55:41 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/message-templates/enabled", parameters={}
2025-08-20 15:55:41 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/message-templates/enabled, IP: 127.0.0.1
2025-08-20 15:55:41 [http-nio-8082-exec-6] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:55:41 [http-nio-8082-exec-6] INFO  o.e.a.controller.AdminMessageTemplateController - 获取启用状态的模板列表请求
2025-08-20 15:55:41 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/message-templates/enabled
2025-08-20 15:55:41 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:55:41 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:55:41 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - Reading to [org.example.common.response.Result<?>]
2025-08-20 15:55:41 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:55:41 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data=[{id=55, templateCode=TEST_DB_CONNECTION, templateName=数据库连接测试,  (truncated)...]
2025-08-20 15:55:41 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/message-templates/enabled, 耗时: 145ms, 状态: 200
2025-08-20 15:55:41 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:55:42 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/message/sending/history?page=1&size=10&sendType=system", parameters={masked}
2025-08-20 15:55:42 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/message/sending/history, 参数: page=1&size=10&sendType=system, IP: 127.0.0.1
2025-08-20 15:55:42 [http-nio-8082-exec-4] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:55:42 [http-nio-8082-exec-4] INFO  o.e.admin.controller.AdminMessageSendingController - 获取发送历史请求，页码：1，大小：10，类型：system，状态：null
2025-08-20 15:55:42 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:55:42 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=100, pages=10, size=10, records=[{createTime=2025-08-20 1 (truncated)...]
2025-08-20 15:55:42 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/message/sending/history, 耗时: 89ms, 状态: 200
2025-08-20 15:55:42 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:55:58 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/admin/admin/message/send/system", parameters={}
2025-08-20 15:55:58 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: POST, URI: /admin/admin/message/send/system, IP: 127.0.0.1
2025-08-20 15:55:58 [http-nio-8082-exec-1] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:55:58 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [{sendType=immediate, scheduledTime=null, targetType=all, userIds=, userGroup=[], title=1111, content (truncated)...]
2025-08-20 15:55:58 [http-nio-8082-exec-1] INFO  o.e.admin.controller.AdminMessageSendingController - 发送系统消息请求：{sendType=immediate, scheduledTime=null, targetType=all, userIds=, userGroup=[], title=1111, content=11111111111111, iconUrl=, linkUrl=}
2025-08-20 15:55:58 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - HTTP POST http://localhost:8080/api/messages/send/system
2025-08-20 15:55:58 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:55:58 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - Writing [{sendType=immediate, scheduledTime=null, targetType=all, userIds=, userGroup=[], title=1111, content=11111111111111, iconUrl=, linkUrl=}] as "application/json"
2025-08-20 15:55:58 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:55:58 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - Reading to [org.example.common.response.Result<?>]
2025-08-20 15:55:58 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:55:58 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data=true)]
2025-08-20 15:55:58 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:55:58 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: POST, URI: /admin/admin/message/send/system, 耗时: 252ms, 状态: 200
2025-08-20 15:55:58 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/message/sending/history?page=1&size=10&sendType=system", parameters={masked}
2025-08-20 15:55:58 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/message/sending/history, 参数: page=1&size=10&sendType=system, IP: 127.0.0.1
2025-08-20 15:55:58 [http-nio-8082-exec-7] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:55:58 [http-nio-8082-exec-7] INFO  o.e.admin.controller.AdminMessageSendingController - 获取发送历史请求，页码：1，大小：10，类型：system，状态：null
2025-08-20 15:55:58 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:55:58 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=100, pages=10, size=10, records=[{createTime=2025-08-20 1 (truncated)...]
2025-08-20 15:55:58 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/message/sending/history, 耗时: 24ms, 状态: 200
2025-08-20 15:55:58 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:56:48 [MessageBroker-2] INFO  o.s.web.socket.config.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 3, active threads = 1, queued tasks = 0, completed tasks = 2]
2025-08-20 15:58:55 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/delivery/express-companies", parameters={}
2025-08-20 15:58:55 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/delivery/orders?page=1&size=10", parameters={masked}
2025-08-20 15:58:55 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/delivery/express-companies, IP: 127.0.0.1
2025-08-20 15:58:55 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/delivery/orders, 参数: page=1&size=10, IP: 127.0.0.1
2025-08-20 15:58:55 [http-nio-8082-exec-9] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:58:55 [http-nio-8082-exec-10] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:58:55 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:58:55 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data=[{code=SF, name=顺丰速运}, {code=YTO, name=圆通速递}, {code=ZTO, name=中通快递}, {code=STO, name (truncated)...]
2025-08-20 15:58:55 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/order/admin/list?page=1&size=10&status=paid
2025-08-20 15:58:55 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:58:55 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/delivery/express-companies, 耗时: 18ms, 状态: 200
2025-08-20 15:58:55 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:58:55 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:58:55 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:58:55 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:58:55 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data={total=3, size=3, page=1, list=[{id=16, orderNo=175567585345232f286, userId=3, statu (truncated)...]
2025-08-20 15:58:55 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/delivery/orders, 耗时: 82ms, 状态: 200
2025-08-20 15:58:55 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:59:14 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/delivery/orders?page=1&size=10", parameters={masked}
2025-08-20 15:59:14 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/delivery/express-companies", parameters={}
2025-08-20 15:59:14 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/delivery/express-companies, IP: 127.0.0.1
2025-08-20 15:59:14 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/delivery/orders, 参数: page=1&size=10, IP: 127.0.0.1
2025-08-20 15:59:14 [http-nio-8082-exec-3] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:59:14 [http-nio-8082-exec-8] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:59:14 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:59:14 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data=[{code=SF, name=顺丰速运}, {code=YTO, name=圆通速递}, {code=ZTO, name=中通快递}, {code=STO, name (truncated)...]
2025-08-20 15:59:14 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/order/admin/list?page=1&size=10&status=paid
2025-08-20 15:59:14 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:59:14 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:59:14 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/delivery/express-companies, 耗时: 19ms, 状态: 200
2025-08-20 15:59:14 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:59:14 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:59:14 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:59:14 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data={total=3, size=3, page=1, list=[{id=16, orderNo=175567585345232f286, userId=3, statu (truncated)...]
2025-08-20 15:59:14 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/delivery/orders, 耗时: 103ms, 状态: 200
2025-08-20 15:59:14 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:59:59 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/delivery/orders?page=1&size=10", parameters={masked}
2025-08-20 15:59:59 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/delivery/express-companies", parameters={}
2025-08-20 15:59:59 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/delivery/express-companies, IP: 127.0.0.1
2025-08-20 15:59:59 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/delivery/orders, 参数: page=1&size=10, IP: 127.0.0.1
2025-08-20 15:59:59 [http-nio-8082-exec-5] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:59:59 [http-nio-8082-exec-2] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 15:59:59 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:59:59 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/order/admin/list?page=1&size=10&status=paid
2025-08-20 15:59:59 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data=[{code=SF, name=顺丰速运}, {code=YTO, name=圆通速递}, {code=ZTO, name=中通快递}, {code=STO, name (truncated)...]
2025-08-20 15:59:59 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 15:59:59 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/delivery/express-companies, 耗时: 26ms, 状态: 200
2025-08-20 15:59:59 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 15:59:59 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 15:59:59 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 15:59:59 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 15:59:59 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data={total=3, size=3, page=1, list=[{id=16, orderNo=175567585345232f286, userId=3, statu (truncated)...]
2025-08-20 15:59:59 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/delivery/orders, 耗时: 148ms, 状态: 200
2025-08-20 15:59:59 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:00:09 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/delivery/orders?page=1&size=10", parameters={masked}
2025-08-20 16:00:09 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/delivery/express-companies", parameters={}
2025-08-20 16:00:09 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/delivery/express-companies, IP: 127.0.0.1
2025-08-20 16:00:09 [http-nio-8082-exec-4] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:00:09 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/delivery/orders, 参数: page=1&size=10, IP: 127.0.0.1
2025-08-20 16:00:09 [http-nio-8082-exec-6] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:00:09 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:00:09 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data=[{code=SF, name=顺丰速运}, {code=YTO, name=圆通速递}, {code=ZTO, name=中通快递}, {code=STO, name (truncated)...]
2025-08-20 16:00:09 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/order/admin/list?page=1&size=10&status=paid
2025-08-20 16:00:09 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 16:00:09 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/delivery/express-companies, 耗时: 19ms, 状态: 200
2025-08-20 16:00:09 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:00:09 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 16:00:09 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 16:00:09 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:00:09 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data={total=3, size=3, page=1, list=[{id=16, orderNo=175567585345232f286, userId=3, statu (truncated)...]
2025-08-20 16:00:09 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:00:09 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/delivery/orders, 耗时: 137ms, 状态: 200
2025-08-20 16:00:17 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/admin/admin/delivery/ship", parameters={}
2025-08-20 16:00:17 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: POST, URI: /admin/admin/delivery/ship, IP: 127.0.0.1
2025-08-20 16:00:17 [http-nio-8082-exec-1] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:00:17 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [{orderId=16, trackingNumber=1234567, courier=顺丰速运}]
2025-08-20 16:00:17 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:00:17 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=404, message=订单不存在}]
2025-08-20 16:00:17 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:00:17 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: POST, URI: /admin/admin/delivery/ship, 耗时: 7ms, 状态: 200
2025-08-20 16:02:45 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/delivery/express-companies", parameters={}
2025-08-20 16:02:45 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/order/list?page=1&size=5&search=&status=", parameters={masked}
2025-08-20 16:02:45 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/order/list, 参数: page=1&size=5&search=&status=, IP: 127.0.0.1
2025-08-20 16:02:45 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/delivery/express-companies, IP: 127.0.0.1
2025-08-20 16:02:45 [http-nio-8082-exec-7] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:02:45 [http-nio-8082-exec-10] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:02:45 [http-nio-8082-exec-10] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/order/admin/list?page=1&size=5
2025-08-20 16:02:45 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:02:45 [http-nio-8082-exec-10] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 16:02:45 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data=[{code=SF, name=顺丰速运}, {code=YTO, name=圆通速递}, {code=ZTO, name=中通快递}, {code=STO, name (truncated)...]
2025-08-20 16:02:45 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:02:45 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/delivery/express-companies, 耗时: 36ms, 状态: 200
2025-08-20 16:02:45 [http-nio-8082-exec-10] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 16:02:45 [http-nio-8082-exec-10] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 16:02:45 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:02:45 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=5, size=5, page=1, list=[{id=16, orderNo=175567585345232f (truncated)...]
2025-08-20 16:02:45 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:02:45 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/order/list, 耗时: 156ms, 状态: 200
2025-08-20 16:02:52 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/statistics", parameters={}
2025-08-20 16:02:52 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/statistics, IP: 127.0.0.1
2025-08-20 16:02:52 [http-nio-8082-exec-9] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:02:52 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/training/statistics
2025-08-20 16:02:52 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 16:02:52 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - Response 404 NOT_FOUND
2025-08-20 16:02:52 [http-nio-8082-exec-9] ERROR org.example.admin.service.impl.TrainingServiceImpl - 获取训练统计信息失败
org.springframework.web.client.HttpClientErrorException$NotFound: 404 : "{"timestamp":"2025-08-20T08:02:52.467+00:00","status":404,"error":"Not Found","message":"No message available","path":"/api/training/statistics"}"
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:113)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:168)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:631)
	at org.example.admin.service.impl.TrainingServiceImpl.getTrainingStatistics(TrainingServiceImpl.java:413)
	at org.example.admin.controller.TrainingController.getTrainingStatistics(TrainingController.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:670)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2025-08-20 16:02:52 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:02:52 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={completedTasks=10, totalTrainingTime=48小时, failedTasks=2, total (truncated)...]
2025-08-20 16:02:52 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:02:52 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/statistics, 耗时: 185ms, 状态: 200
2025-08-20 16:02:52 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/model-types", parameters={}
2025-08-20 16:02:52 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/model-types, IP: 127.0.0.1
2025-08-20 16:02:52 [http-nio-8082-exec-8] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:02:52 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:02:52 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={types=[{name=文本分类, description=对文本进行分类，如情感分析、主题分类等, id=text_cla (truncated)...]
2025-08-20 16:02:52 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/model-types, 耗时: 4ms, 状态: 200
2025-08-20 16:02:52 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:02:52 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/datasets?page=1&size=100&dataType=", parameters={masked}
2025-08-20 16:02:52 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/datasets, 参数: page=1&size=100&dataType=, IP: 127.0.0.1
2025-08-20 16:02:52 [http-nio-8082-exec-3] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:02:52 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:02:52 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=0, size=100, datasets=[], page=1})]
2025-08-20 16:02:52 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/datasets, 耗时: 5ms, 状态: 200
2025-08-20 16:02:52 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:02:52 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/tasks?page=1&size=10&status=&modelType=", parameters={masked}
2025-08-20 16:02:52 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/tasks, 参数: page=1&size=10&status=&modelType=, IP: 127.0.0.1
2025-08-20 16:02:52 [http-nio-8082-exec-5] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:02:52 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:02:52 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=0, size=10, page=1, tasks=[]})]
2025-08-20 16:02:52 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:02:52 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/tasks, 耗时: 5ms, 状态: 200
2025-08-20 16:02:53 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/banner/list?page=1&size=5&search=", parameters={masked}
2025-08-20 16:02:53 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/banner/list, 参数: page=1&size=5&search=, IP: 127.0.0.1
2025-08-20 16:02:53 [http-nio-8082-exec-2] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:02:54 [http-nio-8082-exec-2] DEBUG o.e.admin.mapper.AdminBannerMapper.countBanners - ==>  Preparing: SELECT COUNT(*) FROM t_banner
2025-08-20 16:02:54 [http-nio-8082-exec-2] DEBUG o.e.admin.mapper.AdminBannerMapper.countBanners - ==> Parameters: 
2025-08-20 16:02:54 [http-nio-8082-exec-2] DEBUG o.e.admin.mapper.AdminBannerMapper.countBanners - <==      Total: 1
2025-08-20 16:02:54 [http-nio-8082-exec-2] DEBUG o.e.a.mapper.AdminBannerMapper.selectBannerList - ==>  Preparing: SELECT id, image_url, link_url, sort, status, create_time, update_time, create_by, update_by, remark FROM t_banner ORDER BY sort ASC, create_time DESC LIMIT ?, ?
2025-08-20 16:02:54 [http-nio-8082-exec-2] DEBUG o.e.a.mapper.AdminBannerMapper.selectBannerList - ==> Parameters: 0(Integer), 5(Integer)
2025-08-20 16:02:54 [http-nio-8082-exec-2] DEBUG o.e.a.mapper.AdminBannerMapper.selectBannerList - <==      Total: 5
2025-08-20 16:02:54 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:02:54 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data={total=6, size=5, page=1, list=[Banner(id=10, imageUrl=/uploads/images/2025/08/20/c2 (truncated)...]
2025-08-20 16:02:54 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/banner/list, 耗时: 66ms, 状态: 200
2025-08-20 16:02:54 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:02:57 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/list?page=1&size=5&search=&category=&status=", parameters={masked}
2025-08-20 16:02:57 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/categories", parameters={}
2025-08-20 16:02:57 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/list, 参数: page=1&size=5&search=&category=&status=, IP: 127.0.0.1
2025-08-20 16:02:57 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/categories, IP: 127.0.0.1
2025-08-20 16:02:57 [http-nio-8082-exec-6] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:02:57 [http-nio-8082-exec-4] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:02:57 [http-nio-8082-exec-4] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/categories
2025-08-20 16:02:57 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/admin/list?page=1&size=5
2025-08-20 16:02:57 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 16:02:57 [http-nio-8082-exec-4] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 16:02:57 [http-nio-8082-exec-4] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 16:02:57 [http-nio-8082-exec-4] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.List<java.lang.String>]
2025-08-20 16:02:57 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:02:57 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data=[热带水果, 温带水果, 亚热带水果, 进口水果, 有机水果])]
2025-08-20 16:02:57 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:02:57 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/categories, 耗时: 211ms, 状态: 200
2025-08-20 16:02:57 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 16:02:57 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 16:02:57 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:02:57 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=15, size=5, page=1, list=[{id=1, name=测试商品, description=n (truncated)...]
2025-08-20 16:02:57 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:02:57 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/list, 耗时: 258ms, 状态: 200
2025-08-20 16:05:25 [SpringApplicationShutdownHook] DEBUG o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@514646ef, started on Wed Aug 20 14:55:43 CST 2025
2025-08-20 16:05:25 [SpringApplicationShutdownHook] DEBUG org.springframework.web.SimpLogging - clientOutboundChannel removed SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2025-08-20 16:05:25 [SpringApplicationShutdownHook] DEBUG org.springframework.web.SimpLogging - clientInboundChannel removed WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2025-08-20 16:05:25 [SpringApplicationShutdownHook] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - Stopping...
2025-08-20 16:05:25 [SpringApplicationShutdownHook] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@250967f1]]
2025-08-20 16:05:25 [SpringApplicationShutdownHook] DEBUG org.springframework.web.SimpLogging - clientInboundChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@250967f1]
2025-08-20 16:05:25 [SpringApplicationShutdownHook] DEBUG org.springframework.web.SimpLogging - brokerChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@250967f1]
2025-08-20 16:05:25 [SpringApplicationShutdownHook] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - Stopped.
2025-08-20 16:05:25 [SpringApplicationShutdownHook] DEBUG org.springframework.web.SimpLogging - clientInboundChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-08-20 16:05:25 [SpringApplicationShutdownHook] DEBUG org.springframework.web.SimpLogging - brokerChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-08-20 16:05:25 [SpringApplicationShutdownHook] DEBUG o.s.d.redis.listener.RedisMessageListenerContainer - Stopped RedisMessageListenerContainer.
2025-08-20 16:05:25 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-08-20 16:05:25 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-08-20 16:05:37 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-08-20 16:05:37 [main] INFO  org.example.admin.AdminApplication - Starting AdminApplication using Java 1.8.0_351 on 192.168.2.7 with PID 43663 (/Users/peng/Downloads/full-goods-parent/full-goods-admin/target/classes started by peng in /Users/peng/Downloads/full-goods-parent/full-goods-admin)
2025-08-20 16:05:37 [main] DEBUG org.example.admin.AdminApplication - Running with Spring Boot v2.7.5, Spring v5.3.23
2025-08-20 16:05:37 [main] INFO  org.example.admin.AdminApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-20 16:05:37 [main] DEBUG o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@514646ef
2025-08-20 16:05:38 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-20 16:05:38 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-20 16:05:38 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 25 ms. Found 0 Redis repository interfaces.
2025-08-20 16:05:38 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - Skipping MapperFactoryBean with name 'adminBannerMapper' and 'org.example.admin.mapper.AdminBannerMapper' mapperInterface. Bean already defined with the same name!
2025-08-20 16:05:38 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - Skipping MapperFactoryBean with name 'categoryMapper' and 'org.example.admin.mapper.CategoryMapper' mapperInterface. Bean already defined with the same name!
2025-08-20 16:05:38 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[org.example.common.mapper, org.example.admin.mapper]' package. Please check your configuration.
2025-08-20 16:05:39 [main] DEBUG o.s.b.w.e.tomcat.TomcatServletWebServerFactory - Code archive: /Users/peng/.m2/repository/org/springframework/boot/spring-boot/2.7.5/spring-boot-2.7.5.jar
2025-08-20 16:05:39 [main] DEBUG o.s.b.w.e.tomcat.TomcatServletWebServerFactory - Code archive: /Users/peng/.m2/repository/org/springframework/boot/spring-boot/2.7.5/spring-boot-2.7.5.jar
2025-08-20 16:05:39 [main] DEBUG o.s.b.w.e.tomcat.TomcatServletWebServerFactory - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2025-08-20 16:05:39 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8082 (http)
2025-08-20 16:05:39 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8082"]
2025-08-20 16:05:39 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-08-20 16:05:39 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.68]
2025-08-20 16:05:39 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/admin] - Initializing Spring embedded WebApplicationContext
2025-08-20 16:05:39 [main] DEBUG o.s.b.w.s.c.ServletWebServerApplicationContext - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2025-08-20 16:05:39 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2298 ms
2025-08-20 16:05:39 [main] DEBUG o.s.b.web.servlet.ServletContextInitializerBeans - Mapping filters: filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, hiddenHttpMethodFilter urls=[/*] order=2147483647
2025-08-20 16:05:39 [main] DEBUG o.s.b.web.servlet.ServletContextInitializerBeans - Mapping servlets: dispatcherServlet urls=[/], statViewServlet urls=[/druid/*]
2025-08-20 16:05:40 [main] DEBUG o.s.b.w.servlet.filter.OrderedRequestContextFilter - Filter 'requestContextFilter' configured for use
2025-08-20 16:05:40 [main] DEBUG o.s.web.filter.HiddenHttpMethodFilter - Filter 'hiddenHttpMethodFilter' configured for use
2025-08-20 16:05:40 [main] DEBUG o.s.b.w.s.filter.OrderedCharacterEncodingFilter - Filter 'characterEncodingFilter' configured for use
2025-08-20 16:05:40 [main] DEBUG o.s.b.web.servlet.filter.OrderedFormContentFilter - Filter 'formContentFilter' configured for use
2025-08-20 16:05:40 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2025-08-20 16:05:41 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-08-20 16:05:42 [main] DEBUG o.s.w.s.server.support.WebSocketHandlerMapping - Patterns [/ws/**] in 'stompWebSocketHandlerMapping'
2025-08-20 16:05:42 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.AdminMessageController:
	
2025-08-20 16:05:42 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.AdminMessageSendingController:
	
2025-08-20 16:05:42 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.AdminMessageTemplateController:
	
2025-08-20 16:05:42 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.AuthController:
	
2025-08-20 16:05:42 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.BannerController:
	
2025-08-20 16:05:42 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.CategoryController:
	
2025-08-20 16:05:42 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.DashboardController:
	
2025-08-20 16:05:42 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.DeliveryController:
	
2025-08-20 16:05:42 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.ModelController:
	
2025-08-20 16:05:42 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.OrderController:
	
2025-08-20 16:05:42 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.ProductController:
	
2025-08-20 16:05:42 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.TrainingController:
	
2025-08-20 16:05:42 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.UserController:
	
2025-08-20 16:05:42 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.s.b.a.w.s.e.BasicErrorController:
	
2025-08-20 16:05:42 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-20 16:05:42 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 150 mappings in 'requestMappingHandlerMapping'
2025-08-20 16:05:42 [main] DEBUG o.s.web.servlet.handler.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /uploads/**, /images/**] in 'resourceHandlerMapping'
2025-08-20 16:05:42 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-20 16:05:42 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2025-08-20 16:05:42 [main] DEBUG o.s.d.redis.listener.RedisMessageListenerContainer - Starting RedisMessageListenerContainer...
2025-08-20 16:05:42 [main] DEBUG o.s.d.redis.listener.RedisMessageListenerContainer - Postpone listening for Redis messages until actual listeners are added.
2025-08-20 16:05:43 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8082"]
2025-08-20 16:05:43 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8082 (http) with context path '/admin'
2025-08-20 16:05:43 [main] DEBUG org.springframework.web.SimpLogging - clientOutboundChannel added SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2025-08-20 16:05:43 [main] DEBUG org.springframework.web.SimpLogging - clientInboundChannel added WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2025-08-20 16:05:43 [main] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - Starting...
2025-08-20 16:05:43 [main] DEBUG org.springframework.web.SimpLogging - clientInboundChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@250967f1]
2025-08-20 16:05:43 [main] DEBUG org.springframework.web.SimpLogging - brokerChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@250967f1]
2025-08-20 16:05:43 [main] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@250967f1]]
2025-08-20 16:05:43 [main] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - Started.
2025-08-20 16:05:43 [main] DEBUG org.springframework.web.SimpLogging - clientInboundChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-08-20 16:05:43 [main] DEBUG org.springframework.web.SimpLogging - brokerChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-08-20 16:05:43 [main] INFO  org.example.admin.AdminApplication - Started AdminApplication in 6.556 seconds (JVM running for 6.994)
2025-08-20 16:06:01 [http-nio-8082-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/admin] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-20 16:06:01 [http-nio-8082-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-20 16:06:01 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-20 16:06:01 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-20 16:06:01 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-20 16:06:01 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@3068e41a
2025-08-20 16:06:01 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@7b4dc90c
2025-08-20 16:06:01 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-20 16:06:01 [http-nio-8082-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 34 ms
2025-08-20 16:06:01 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/category/list?page=1&size=5&search=", parameters={masked}
2025-08-20 16:06:01 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/category/list, 参数: page=1&size=5&search=, IP: 127.0.0.1
2025-08-20 16:06:01 [http-nio-8082-exec-1] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:06:02 [http-nio-8082-exec-1] DEBUG o.e.a.m.CategoryMapper.selectByConditions_COUNT - ==>  Preparing: SELECT count(0) FROM t_fruit_category
2025-08-20 16:06:02 [http-nio-8082-exec-1] DEBUG o.e.a.m.CategoryMapper.selectByConditions_COUNT - ==> Parameters: 
2025-08-20 16:06:02 [http-nio-8082-exec-1] DEBUG o.e.a.m.CategoryMapper.selectByConditions_COUNT - <==      Total: 1
2025-08-20 16:06:02 [http-nio-8082-exec-1] DEBUG o.e.admin.mapper.CategoryMapper.selectByConditions - ==>  Preparing: SELECT id, name, icon_name, icon_url, sort_order, status, create_time, update_time, create_by, update_by, remark FROM t_fruit_category ORDER BY sort_order ASC, id ASC LIMIT ?
2025-08-20 16:06:02 [http-nio-8082-exec-1] DEBUG o.e.admin.mapper.CategoryMapper.selectByConditions - ==> Parameters: 5(Integer)
2025-08-20 16:06:02 [http-nio-8082-exec-1] DEBUG o.e.admin.mapper.CategoryMapper.selectByConditions - <==      Total: 5
2025-08-20 16:06:02 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:06:02 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data={total=6, pages=2, size=5, page=1, list=[{iconName=Apple, createTime=2025-08-20 16:0 (truncated)...]
2025-08-20 16:06:02 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/category/list, 耗时: 601ms, 状态: 200
2025-08-20 16:06:02 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:06:03 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/categories", parameters={}
2025-08-20 16:06:03 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/list?page=1&size=5&search=&category=&status=", parameters={masked}
2025-08-20 16:06:03 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/list, 参数: page=1&size=5&search=&category=&status=, IP: 127.0.0.1
2025-08-20 16:06:03 [http-nio-8082-exec-3] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:06:03 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/categories, IP: 127.0.0.1
2025-08-20 16:06:03 [http-nio-8082-exec-2] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:06:03 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/admin/list?page=1&size=5
2025-08-20 16:06:03 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/categories
2025-08-20 16:06:03 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 16:06:03 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 16:06:04 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 16:06:04 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.List<java.lang.String>]
2025-08-20 16:06:04 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 16:06:04 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 16:06:04 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:06:04 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:06:04 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data=[热带水果, 温带水果, 亚热带水果, 进口水果, 有机水果])]
2025-08-20 16:06:04 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=15, size=5, page=1, list=[{id=1, name=测试商品, description=n (truncated)...]
2025-08-20 16:06:04 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/categories, 耗时: 398ms, 状态: 200
2025-08-20 16:06:04 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:06:04 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:06:04 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/list, 耗时: 403ms, 状态: 200
2025-08-20 16:06:06 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/delivery/orders?page=1&size=10", parameters={masked}
2025-08-20 16:06:06 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/delivery/express-companies", parameters={}
2025-08-20 16:06:06 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/delivery/express-companies, IP: 127.0.0.1
2025-08-20 16:06:06 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/delivery/orders, 参数: page=1&size=10, IP: 127.0.0.1
2025-08-20 16:06:06 [http-nio-8082-exec-4] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:06:06 [http-nio-8082-exec-5] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:06:06 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:06:06 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data=[{code=SF, name=顺丰速运}, {code=YTO, name=圆通速递}, {code=ZTO, name=中通快递}, {code=STO, name (truncated)...]
2025-08-20 16:06:06 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/delivery/express-companies, 耗时: 51ms, 状态: 200
2025-08-20 16:06:06 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:06:06 [http-nio-8082-exec-5] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/order/admin/list?page=1&size=10&status=paid
2025-08-20 16:06:06 [http-nio-8082-exec-5] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 16:06:06 [http-nio-8082-exec-5] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 16:06:06 [http-nio-8082-exec-5] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 16:06:06 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:06:06 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data={total=3, size=3, page=1, list=[{id=16, orderNo=175567585345232f286, userId=3, statu (truncated)...]
2025-08-20 16:06:06 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/delivery/orders, 耗时: 118ms, 状态: 200
2025-08-20 16:06:06 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:06:14 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/admin/admin/delivery/ship", parameters={}
2025-08-20 16:06:14 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: POST, URI: /admin/admin/delivery/ship, IP: 127.0.0.1
2025-08-20 16:06:14 [http-nio-8082-exec-6] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:06:14 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [{orderId=16, trackingNumber=123456, courier=顺丰速运}]
2025-08-20 16:06:14 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:06:14 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=404, message=订单不存在}]
2025-08-20 16:06:14 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: POST, URI: /admin/admin/delivery/ship, 耗时: 54ms, 状态: 200
2025-08-20 16:06:14 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:06:21 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/delivery/express-companies", parameters={}
2025-08-20 16:06:21 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/order/list?page=1&size=5&search=&status=", parameters={masked}
2025-08-20 16:06:21 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/order/list, 参数: page=1&size=5&search=&status=, IP: 127.0.0.1
2025-08-20 16:06:21 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/delivery/express-companies, IP: 127.0.0.1
2025-08-20 16:06:21 [http-nio-8082-exec-7] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:06:21 [http-nio-8082-exec-8] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:06:21 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:06:21 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data=[{code=SF, name=顺丰速运}, {code=YTO, name=圆通速递}, {code=ZTO, name=中通快递}, {code=STO, name (truncated)...]
2025-08-20 16:06:21 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/delivery/express-companies, 耗时: 24ms, 状态: 200
2025-08-20 16:06:21 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:06:21 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/order/admin/list?page=1&size=5
2025-08-20 16:06:21 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 16:06:21 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 16:06:21 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 16:06:21 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:06:21 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=5, size=5, page=1, list=[{id=17, orderNo=17556769966067e6 (truncated)...]
2025-08-20 16:06:21 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/order/list, 耗时: 96ms, 状态: 200
2025-08-20 16:06:21 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:06:42 [MessageBroker-1] INFO  o.s.web.socket.config.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2025-08-20 16:08:13 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/list?page=1&size=5&search=&category=&status=", parameters={masked}
2025-08-20 16:08:13 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/categories", parameters={}
2025-08-20 16:08:13 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/categories, IP: 127.0.0.1
2025-08-20 16:08:13 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/list, 参数: page=1&size=5&search=&category=&status=, IP: 127.0.0.1
2025-08-20 16:08:13 [http-nio-8082-exec-10] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:08:13 [http-nio-8082-exec-9] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:08:13 [http-nio-8082-exec-10] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/categories
2025-08-20 16:08:13 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/admin/list?page=1&size=5
2025-08-20 16:08:13 [http-nio-8082-exec-10] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 16:08:13 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 16:08:13 [http-nio-8082-exec-10] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 16:08:13 [http-nio-8082-exec-10] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.List<java.lang.String>]
2025-08-20 16:08:13 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:08:13 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data=[热带水果, 温带水果, 亚热带水果, 进口水果, 有机水果])]
2025-08-20 16:08:13 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/categories, 耗时: 93ms, 状态: 200
2025-08-20 16:08:13 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:08:13 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 16:08:13 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 16:08:13 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:08:13 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=15, size=5, page=1, list=[{id=1, name=测试商品, description=n (truncated)...]
2025-08-20 16:08:13 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:08:13 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/list, 耗时: 120ms, 状态: 200
2025-08-20 16:08:58 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/admin/admin/fruit/add", parameters={}
2025-08-20 16:08:58 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: POST, URI: /admin/admin/fruit/add, IP: 127.0.0.1
2025-08-20 16:08:58 [http-nio-8082-exec-1] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:08:58 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [Fruit(id=null, name=苹果, description=null, origin=广西, price=100, unit=kg, stock=3, imageUrl=/uploads/ (truncated)...]
2025-08-20 16:08:58 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - HTTP POST http://localhost:8080/api/fruit/admin/add
2025-08-20 16:08:58 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - Accept=[text/plain, application/json, application/*+json, */*]
2025-08-20 16:08:58 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - Writing [Fruit(id=null, name=苹果, description=null, origin=广西, price=100, unit=kg, stock=3, imageUrl=/uploads/images/2025/08/20/af789b80-9c37-40be-b605-f0577148b1c4.jpg, category=温带水果, taste=null, nutrition=null, suitableCrowd=null, status=1, recommended=null, flashSaleActive=null, flashSalePrice=null, flashSaleOriginalPrice=null, flashSaleStartTime=null, flashSaleEndTime=null, flashSaleStock=null, flashSaleSoldCount=null)] with org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
2025-08-20 16:08:59 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 16:08:59 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.lang.String] as "application/json;charset=UTF-8"
2025-08-20 16:08:59 [http-nio-8082-exec-1] INFO  o.e.admin.service.impl.AdminProductServiceImpl - 添加商品成功: 苹果
2025-08-20 16:08:59 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:08:59 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data=商品添加成功)]
2025-08-20 16:08:59 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: POST, URI: /admin/admin/fruit/add, 耗时: 180ms, 状态: 200
2025-08-20 16:08:59 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:08:59 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/list?page=1&size=5&search=&category=&status=", parameters={masked}
2025-08-20 16:08:59 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/list, 参数: page=1&size=5&search=&category=&status=, IP: 127.0.0.1
2025-08-20 16:08:59 [http-nio-8082-exec-2] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:08:59 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/admin/list?page=1&size=5
2025-08-20 16:08:59 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 16:08:59 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 16:08:59 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 16:08:59 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:08:59 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=16, size=5, page=1, list=[{id=1, name=测试商品, description=n (truncated)...]
2025-08-20 16:08:59 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/list, 耗时: 91ms, 状态: 200
2025-08-20 16:08:59 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:09:07 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - PUT "/admin/admin/fruit/update", parameters={}
2025-08-20 16:09:07 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: PUT, URI: /admin/admin/fruit/update, IP: 127.0.0.1
2025-08-20 16:09:07 [http-nio-8082-exec-3] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:09:07 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [Fruit(id=1, name=测试商品1, description=null, origin=测试产地, price=99.99, unit=盒/5, stock=100, imageUrl=/u (truncated)...]
2025-08-20 16:09:07 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - HTTP PUT http://localhost:8080/api/fruit/admin/update/1
2025-08-20 16:09:07 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - Writing [Fruit(id=1, name=测试商品1, description=null, origin=测试产地, price=99.99, unit=盒/5, stock=100, imageUrl=/uploads/images/2025/08/17/81defe3f-7902-4aa0-b490-771389706e69.jpg, category=热带水果, taste=null, nutrition=null, suitableCrowd=null, status=1, recommended=null, flashSaleActive=null, flashSalePrice=null, flashSaleOriginalPrice=null, flashSaleStartTime=null, flashSaleEndTime=null, flashSaleStock=null, flashSaleSoldCount=null)] with org.springframework.http.converter.json.MappingJackson2HttpMessageConverter
2025-08-20 16:09:07 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 16:09:07 [http-nio-8082-exec-3] INFO  o.e.admin.service.impl.AdminProductServiceImpl - 更新商品成功: 测试商品1
2025-08-20 16:09:07 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:09:07 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data=商品更新成功)]
2025-08-20 16:09:07 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:09:07 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: PUT, URI: /admin/admin/fruit/update, 耗时: 108ms, 状态: 200
2025-08-20 16:09:07 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/list?page=1&size=5&search=&category=&status=", parameters={masked}
2025-08-20 16:09:07 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/list, 参数: page=1&size=5&search=&category=&status=, IP: 127.0.0.1
2025-08-20 16:09:07 [http-nio-8082-exec-4] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:09:07 [http-nio-8082-exec-4] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/admin/list?page=1&size=5
2025-08-20 16:09:07 [http-nio-8082-exec-4] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 16:09:07 [http-nio-8082-exec-4] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 16:09:07 [http-nio-8082-exec-4] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 16:09:07 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:09:07 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=16, size=5, page=1, list=[{id=1, name=测试商品1, description= (truncated)...]
2025-08-20 16:09:07 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:09:07 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/list, 耗时: 47ms, 状态: 200
2025-08-20 16:09:12 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/list?page=4&size=5&search=&category=&status=", parameters={masked}
2025-08-20 16:09:12 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/list, 参数: page=4&size=5&search=&category=&status=, IP: 127.0.0.1
2025-08-20 16:09:12 [http-nio-8082-exec-5] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:09:12 [http-nio-8082-exec-5] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/admin/list?page=4&size=5
2025-08-20 16:09:12 [http-nio-8082-exec-5] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 16:09:12 [http-nio-8082-exec-5] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 16:09:12 [http-nio-8082-exec-5] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 16:09:12 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:09:12 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=16, size=5, page=4, list=[{id=19, name=苹果, description=nu (truncated)...]
2025-08-20 16:09:12 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/list, 耗时: 178ms, 状态: 200
2025-08-20 16:09:12 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:09:21 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/list?page=1&size=5&search=&category=&status=", parameters={masked}
2025-08-20 16:09:21 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/list, 参数: page=1&size=5&search=&category=&status=, IP: 127.0.0.1
2025-08-20 16:09:21 [http-nio-8082-exec-6] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:09:21 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/admin/list?page=1&size=5
2025-08-20 16:09:21 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 16:09:21 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 16:09:21 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 16:09:21 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:09:21 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=16, size=5, page=1, list=[{id=1, name=测试商品1, description= (truncated)...]
2025-08-20 16:09:21 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/list, 耗时: 115ms, 状态: 200
2025-08-20 16:09:21 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:22:21 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/delivery/express-companies", parameters={}
2025-08-20 16:22:21 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/order/list?page=1&size=5&search=&status=", parameters={masked}
2025-08-20 16:22:21 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/delivery/express-companies, IP: 127.0.0.1
2025-08-20 16:22:21 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/order/list, 参数: page=1&size=5&search=&status=, IP: 127.0.0.1
2025-08-20 16:22:21 [http-nio-8082-exec-8] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:22:21 [http-nio-8082-exec-7] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:22:21 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/order/admin/list?page=1&size=5
2025-08-20 16:22:21 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:22:21 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data=[{code=SF, name=顺丰速运}, {code=YTO, name=圆通速递}, {code=ZTO, name=中通快递}, {code=STO, name (truncated)...]
2025-08-20 16:22:21 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 16:22:21 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:22:21 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/delivery/express-companies, 耗时: 43ms, 状态: 200
2025-08-20 16:22:21 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 16:22:21 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 16:22:21 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:22:21 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=5, size=5, page=1, list=[{id=18, orderNo=1755677616078aa1 (truncated)...]
2025-08-20 16:22:21 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:22:21 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/order/list, 耗时: 208ms, 状态: 200
2025-08-20 16:22:25 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/dashboard/delivery-efficiency", parameters={}
2025-08-20 16:22:25 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/order/statistics", parameters={}
2025-08-20 16:22:25 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/dashboard/promotion-effect", parameters={}
2025-08-20 16:22:25 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/dashboard/sales-trend?days=7", parameters={masked}
2025-08-20 16:22:25 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/dashboard/delay-reasons", parameters={}
2025-08-20 16:22:25 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/dashboard/promotion-effect, IP: 127.0.0.1
2025-08-20 16:22:25 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/order/statistics, IP: 127.0.0.1
2025-08-20 16:22:25 [http-nio-8082-exec-10] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:22:25 [http-nio-8082-exec-1] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:22:25 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/dashboard/delivery-efficiency, IP: 127.0.0.1
2025-08-20 16:22:25 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/dashboard/delay-reasons, IP: 127.0.0.1
2025-08-20 16:22:25 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/dashboard/sales-trend, 参数: days=7, IP: 127.0.0.1
2025-08-20 16:22:25 [http-nio-8082-exec-2] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:22:25 [http-nio-8082-exec-9] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:22:25 [http-nio-8082-exec-3] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:22:25 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:22:25 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:22:25 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/order/admin/statistics
2025-08-20 16:22:25 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:22:25 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 16:22:25 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={values=[65, 25, 8, 2], categories=[当日发货, 次日发货, 2-3天发货, 3天以上]})]
2025-08-20 16:22:25 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={revenue=[45000, 32000, 28000, 20000], channels=[微信小程序, APP, H5, (truncated)...]
2025-08-20 16:22:25 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data=[{reason=库存不足, impact=高, count=15}, {reason=商品缺货, impact=中, coun (truncated)...]
2025-08-20 16:22:25 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/dashboard/delay-reasons, 耗时: 95ms, 状态: 200
2025-08-20 16:22:25 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/dashboard/delivery-efficiency, 耗时: 95ms, 状态: 200
2025-08-20 16:22:25 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:22:25 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/order/sales-trend?days=7
2025-08-20 16:22:25 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:22:25 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 16:22:25 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/dashboard/promotion-effect, 耗时: 167ms, 状态: 200
2025-08-20 16:22:25 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:22:25 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 16:22:25 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 16:22:25 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:22:25 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={code=200, message=操作成功, data={cancelledOrders=1, shippedOrders= (truncated)...]
2025-08-20 16:22:25 [http-nio-8082-exec-9] DEBUG org.springframework.web.client.RestTemplate - Response 404 NOT_FOUND
2025-08-20 16:22:25 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/order/statistics, 耗时: 246ms, 状态: 200
2025-08-20 16:22:25 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:22:25 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:22:25 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={dates=[2024-01-21, 2024-01-20, 2024-01-19, 2024-01-18, 2024-01- (truncated)...]
2025-08-20 16:22:25 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/dashboard/sales-trend, 耗时: 272ms, 状态: 200
2025-08-20 16:22:25 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:35:49 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/order/statistics", parameters={}
2025-08-20 16:35:49 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/dashboard/delay-reasons", parameters={}
2025-08-20 16:35:49 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/dashboard/sales-trend?days=7", parameters={masked}
2025-08-20 16:35:49 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/dashboard/delivery-efficiency", parameters={}
2025-08-20 16:35:49 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/dashboard/promotion-effect", parameters={}
2025-08-20 16:35:49 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/dashboard/delay-reasons, IP: 127.0.0.1
2025-08-20 16:35:49 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/order/statistics, IP: 127.0.0.1
2025-08-20 16:35:49 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/dashboard/sales-trend, 参数: days=7, IP: 127.0.0.1
2025-08-20 16:35:49 [http-nio-8082-exec-8] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:35:49 [http-nio-8082-exec-4] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:35:49 [http-nio-8082-exec-7] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:35:49 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/dashboard/delivery-efficiency, IP: 127.0.0.1
2025-08-20 16:35:49 [http-nio-8082-exec-6] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:35:49 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/dashboard/promotion-effect, IP: 127.0.0.1
2025-08-20 16:35:49 [http-nio-8082-exec-5] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:35:49 [http-nio-8082-exec-4] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/order/admin/statistics
2025-08-20 16:35:49 [http-nio-8082-exec-4] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 16:35:49 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:35:49 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:35:49 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:35:49 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/order/sales-trend?days=7
2025-08-20 16:35:49 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={values=[65, 25, 8, 2], categories=[当日发货, 次日发货, 2-3天发货, 3天以上]})]
2025-08-20 16:35:49 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 16:35:49 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={revenue=[45000, 32000, 28000, 20000], channels=[微信小程序, APP, H5, (truncated)...]
2025-08-20 16:35:49 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data=[{reason=库存不足, impact=高, count=15}, {reason=商品缺货, impact=中, coun (truncated)...]
2025-08-20 16:35:49 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/dashboard/promotion-effect, 耗时: 151ms, 状态: 200
2025-08-20 16:35:49 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/dashboard/delivery-efficiency, 耗时: 154ms, 状态: 200
2025-08-20 16:35:49 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/dashboard/delay-reasons, 耗时: 202ms, 状态: 200
2025-08-20 16:35:49 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:35:49 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:35:49 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:35:50 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:35:50 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=500, message=获取统计数据失败: 获取订单统计失败: I/O error on GET request for "http://localhost:8080/api (truncated)...]
2025-08-20 16:35:50 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:35:50 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={dates=[2024-01-21, 2024-01-20, 2024-01-19, 2024-01-18, 2024-01- (truncated)...]
2025-08-20 16:35:50 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:35:50 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/order/statistics, 耗时: 260ms, 状态: 200
2025-08-20 16:35:50 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:35:50 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/dashboard/sales-trend, 耗时: 349ms, 状态: 200
2025-08-20 16:36:42 [MessageBroker-1] INFO  o.s.web.socket.config.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 0, completed tasks = 1]
2025-08-20 16:57:27 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/categories", parameters={}
2025-08-20 16:57:27 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/list?page=1&size=5&search=&category=&status=", parameters={masked}
2025-08-20 16:57:27 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/categories, IP: 127.0.0.1
2025-08-20 16:57:27 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/list, 参数: page=1&size=5&search=&category=&status=, IP: 127.0.0.1
2025-08-20 16:57:27 [http-nio-8082-exec-3] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:57:27 [http-nio-8082-exec-2] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 16:57:28 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/categories
2025-08-20 16:57:28 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 16:57:28 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/admin/list?page=1&size=5
2025-08-20 16:57:28 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 16:57:28 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 16:57:28 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.List<java.lang.String>]
2025-08-20 16:57:28 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:57:28 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data=[热带水果, 温带水果, 亚热带水果, 进口水果, 有机水果])]
2025-08-20 16:57:28 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/categories, 耗时: 116ms, 状态: 200
2025-08-20 16:57:28 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:57:28 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 16:57:28 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 16:57:28 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 16:57:28 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=16, size=5, page=1, list=[{id=1, name=测试商品1, description= (truncated)...]
2025-08-20 16:57:28 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 16:57:28 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/list, 耗时: 398ms, 状态: 200
2025-08-20 17:06:42 [MessageBroker-2] INFO  o.s.web.socket.config.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 3, active threads = 1, queued tasks = 0, completed tasks = 2]
2025-08-20 17:36:42 [MessageBroker-1] INFO  o.s.web.socket.config.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 0, completed tasks = 3]
2025-08-20 17:45:14 [SpringApplicationShutdownHook] DEBUG o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@514646ef, started on Wed Aug 20 16:05:37 CST 2025
2025-08-20 17:45:14 [SpringApplicationShutdownHook] DEBUG org.springframework.web.SimpLogging - clientOutboundChannel removed SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2025-08-20 17:45:14 [SpringApplicationShutdownHook] DEBUG org.springframework.web.SimpLogging - clientInboundChannel removed WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2025-08-20 17:45:14 [SpringApplicationShutdownHook] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - Stopping...
2025-08-20 17:45:14 [SpringApplicationShutdownHook] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@250967f1]]
2025-08-20 17:45:14 [SpringApplicationShutdownHook] DEBUG org.springframework.web.SimpLogging - clientInboundChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@250967f1]
2025-08-20 17:45:14 [SpringApplicationShutdownHook] DEBUG org.springframework.web.SimpLogging - brokerChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@250967f1]
2025-08-20 17:45:14 [SpringApplicationShutdownHook] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - Stopped.
2025-08-20 17:45:14 [SpringApplicationShutdownHook] DEBUG org.springframework.web.SimpLogging - clientInboundChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-08-20 17:45:14 [SpringApplicationShutdownHook] DEBUG org.springframework.web.SimpLogging - brokerChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-08-20 17:45:14 [SpringApplicationShutdownHook] DEBUG o.s.d.redis.listener.RedisMessageListenerContainer - Stopped RedisMessageListenerContainer.
2025-08-20 17:45:15 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-08-20 17:45:15 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-08-20 18:24:09 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-08-20 18:24:09 [main] INFO  org.example.admin.AdminApplication - Starting AdminApplication using Java 1.8.0_351 on 192.168.2.7 with PID 71878 (/Users/peng/Downloads/full-goods-parent/full-goods-admin/target/classes started by peng in /Users/peng/Downloads/full-goods-parent/full-goods-admin)
2025-08-20 18:24:09 [main] DEBUG org.example.admin.AdminApplication - Running with Spring Boot v2.7.5, Spring v5.3.23
2025-08-20 18:24:09 [main] INFO  org.example.admin.AdminApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-20 18:24:09 [main] DEBUG o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@514646ef
2025-08-20 18:24:10 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-20 18:24:10 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-20 18:24:10 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23 ms. Found 0 Redis repository interfaces.
2025-08-20 18:24:10 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - Skipping MapperFactoryBean with name 'adminBannerMapper' and 'org.example.admin.mapper.AdminBannerMapper' mapperInterface. Bean already defined with the same name!
2025-08-20 18:24:10 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - Skipping MapperFactoryBean with name 'categoryMapper' and 'org.example.admin.mapper.CategoryMapper' mapperInterface. Bean already defined with the same name!
2025-08-20 18:24:10 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[org.example.common.mapper, org.example.admin.mapper]' package. Please check your configuration.
2025-08-20 18:24:11 [main] DEBUG o.s.b.w.e.tomcat.TomcatServletWebServerFactory - Code archive: /Users/peng/.m2/repository/org/springframework/boot/spring-boot/2.7.5/spring-boot-2.7.5.jar
2025-08-20 18:24:11 [main] DEBUG o.s.b.w.e.tomcat.TomcatServletWebServerFactory - Code archive: /Users/peng/.m2/repository/org/springframework/boot/spring-boot/2.7.5/spring-boot-2.7.5.jar
2025-08-20 18:24:11 [main] DEBUG o.s.b.w.e.tomcat.TomcatServletWebServerFactory - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2025-08-20 18:24:11 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8082 (http)
2025-08-20 18:24:11 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8082"]
2025-08-20 18:24:11 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-08-20 18:24:11 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.68]
2025-08-20 18:24:11 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/admin] - Initializing Spring embedded WebApplicationContext
2025-08-20 18:24:11 [main] DEBUG o.s.b.w.s.c.ServletWebServerApplicationContext - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2025-08-20 18:24:11 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2381 ms
2025-08-20 18:24:11 [main] DEBUG o.s.b.web.servlet.ServletContextInitializerBeans - Mapping filters: filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, hiddenHttpMethodFilter urls=[/*] order=2147483647
2025-08-20 18:24:11 [main] DEBUG o.s.b.web.servlet.ServletContextInitializerBeans - Mapping servlets: dispatcherServlet urls=[/], statViewServlet urls=[/druid/*]
2025-08-20 18:24:11 [main] DEBUG o.s.b.w.servlet.filter.OrderedRequestContextFilter - Filter 'requestContextFilter' configured for use
2025-08-20 18:24:11 [main] DEBUG o.s.web.filter.HiddenHttpMethodFilter - Filter 'hiddenHttpMethodFilter' configured for use
2025-08-20 18:24:11 [main] DEBUG o.s.b.w.s.filter.OrderedCharacterEncodingFilter - Filter 'characterEncodingFilter' configured for use
2025-08-20 18:24:11 [main] DEBUG o.s.b.web.servlet.filter.OrderedFormContentFilter - Filter 'formContentFilter' configured for use
2025-08-20 18:24:12 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2025-08-20 18:24:12 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-08-20 18:24:13 [main] DEBUG o.s.w.s.server.support.WebSocketHandlerMapping - Patterns [/ws/**] in 'stompWebSocketHandlerMapping'
2025-08-20 18:24:13 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.AdminMessageController:
	
2025-08-20 18:24:13 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.AdminMessageSendingController:
	
2025-08-20 18:24:13 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.AdminMessageTemplateController:
	
2025-08-20 18:24:13 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.AuthController:
	
2025-08-20 18:24:13 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.BannerController:
	
2025-08-20 18:24:13 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.CategoryController:
	
2025-08-20 18:24:13 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.DashboardController:
	
2025-08-20 18:24:13 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.DeliveryController:
	
2025-08-20 18:24:13 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.ModelController:
	
2025-08-20 18:24:13 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.OrderController:
	
2025-08-20 18:24:13 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.ProductController:
	
2025-08-20 18:24:13 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.TrainingController:
	
2025-08-20 18:24:13 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.UserController:
	
2025-08-20 18:24:13 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.s.b.a.w.s.e.BasicErrorController:
	
2025-08-20 18:24:13 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-20 18:24:13 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 150 mappings in 'requestMappingHandlerMapping'
2025-08-20 18:24:13 [main] DEBUG o.s.web.servlet.handler.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /uploads/**, /images/**] in 'resourceHandlerMapping'
2025-08-20 18:24:13 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-20 18:24:13 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2025-08-20 18:24:14 [main] DEBUG o.s.d.redis.listener.RedisMessageListenerContainer - Starting RedisMessageListenerContainer...
2025-08-20 18:24:14 [main] DEBUG o.s.d.redis.listener.RedisMessageListenerContainer - Postpone listening for Redis messages until actual listeners are added.
2025-08-20 18:24:14 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8082"]
2025-08-20 18:24:14 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8082 (http) with context path '/admin'
2025-08-20 18:24:14 [main] DEBUG org.springframework.web.SimpLogging - clientOutboundChannel added SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2025-08-20 18:24:14 [main] DEBUG org.springframework.web.SimpLogging - clientInboundChannel added WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2025-08-20 18:24:14 [main] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - Starting...
2025-08-20 18:24:14 [main] DEBUG org.springframework.web.SimpLogging - clientInboundChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@250967f1]
2025-08-20 18:24:14 [main] DEBUG org.springframework.web.SimpLogging - brokerChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@250967f1]
2025-08-20 18:24:14 [main] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@250967f1]]
2025-08-20 18:24:14 [main] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - Started.
2025-08-20 18:24:14 [main] DEBUG org.springframework.web.SimpLogging - clientInboundChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-08-20 18:24:14 [main] DEBUG org.springframework.web.SimpLogging - brokerChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-08-20 18:24:14 [main] INFO  org.example.admin.AdminApplication - Started AdminApplication in 5.717 seconds (JVM running for 6.314)
2025-08-20 18:24:21 [http-nio-8082-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/admin] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-20 18:24:21 [http-nio-8082-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-20 18:24:21 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-20 18:24:21 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-20 18:24:21 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-20 18:24:21 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@590163c2
2025-08-20 18:24:21 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@35e17c8
2025-08-20 18:24:21 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-20 18:24:21 [http-nio-8082-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 31 ms
2025-08-20 18:24:21 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/user/list?page=1&size=5&search=&status=", parameters={masked}
2025-08-20 18:24:21 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/user/list, 参数: page=1&size=5&search=&status=, IP: 127.0.0.1
2025-08-20 18:24:21 [http-nio-8082-exec-1] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 18:24:21 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/user/list?page=1&size=5
2025-08-20 18:24:21 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 18:24:21 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 18:24:21 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - Reading to [org.example.common.response.Result<?>]
2025-08-20 18:24:21 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 18:24:21 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=8, size=5, page=1, list=[{createTime=2025-08-15T15:49:36. (truncated)...]
2025-08-20 18:24:21 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/user/list, 耗时: 652ms, 状态: 200
2025-08-20 18:24:21 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 18:24:22 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/list?page=1&size=5&search=&category=&status=", parameters={masked}
2025-08-20 18:24:22 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/categories", parameters={}
2025-08-20 18:24:22 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/categories, IP: 127.0.0.1
2025-08-20 18:24:22 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/list, 参数: page=1&size=5&search=&category=&status=, IP: 127.0.0.1
2025-08-20 18:24:22 [http-nio-8082-exec-3] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 18:24:22 [http-nio-8082-exec-2] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 18:24:22 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/categories
2025-08-20 18:24:22 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 18:24:22 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/admin/list?page=1&size=5
2025-08-20 18:24:22 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 18:24:22 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 18:24:22 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.List<java.lang.String>]
2025-08-20 18:24:22 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 18:24:22 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data=[热带水果, 温带水果, 亚热带水果, 进口水果, 有机水果])]
2025-08-20 18:24:22 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/categories, 耗时: 158ms, 状态: 200
2025-08-20 18:24:22 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 18:24:23 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 18:24:23 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 18:24:23 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 18:24:23 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=16, size=5, page=1, list=[{id=1, name=测试商品1, description= (truncated)...]
2025-08-20 18:24:23 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/list, 耗时: 461ms, 状态: 200
2025-08-20 18:24:23 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 18:24:34 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/list?page=4&size=5&search=&category=&status=", parameters={masked}
2025-08-20 18:24:34 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/list, 参数: page=4&size=5&search=&category=&status=, IP: 127.0.0.1
2025-08-20 18:24:34 [http-nio-8082-exec-4] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 18:24:34 [http-nio-8082-exec-4] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/admin/list?page=4&size=5
2025-08-20 18:24:34 [http-nio-8082-exec-4] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 18:24:34 [http-nio-8082-exec-4] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 18:24:34 [http-nio-8082-exec-4] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 18:24:34 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 18:24:34 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=16, size=5, page=4, list=[{id=19, name=苹果, description=nu (truncated)...]
2025-08-20 18:24:34 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/list, 耗时: 144ms, 状态: 200
2025-08-20 18:24:34 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 18:24:37 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/user/list?page=1&size=5&search=&status=", parameters={masked}
2025-08-20 18:24:37 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/user/list, 参数: page=1&size=5&search=&status=, IP: 127.0.0.1
2025-08-20 18:24:37 [http-nio-8082-exec-5] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 18:24:37 [http-nio-8082-exec-5] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/user/list?page=1&size=5
2025-08-20 18:24:37 [http-nio-8082-exec-5] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 18:24:37 [http-nio-8082-exec-5] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 18:24:37 [http-nio-8082-exec-5] DEBUG org.springframework.web.client.RestTemplate - Reading to [org.example.common.response.Result<?>]
2025-08-20 18:24:37 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 18:24:37 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=8, size=5, page=1, list=[{createTime=2025-08-15T15:49:36. (truncated)...]
2025-08-20 18:24:37 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/user/list, 耗时: 56ms, 状态: 200
2025-08-20 18:24:37 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 18:24:40 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/categories", parameters={}
2025-08-20 18:24:40 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/list?page=1&size=5&search=&category=&status=", parameters={masked}
2025-08-20 18:24:40 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/list, 参数: page=1&size=5&search=&category=&status=, IP: 127.0.0.1
2025-08-20 18:24:40 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/categories, IP: 127.0.0.1
2025-08-20 18:24:40 [http-nio-8082-exec-6] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 18:24:40 [http-nio-8082-exec-7] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 18:24:40 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/categories
2025-08-20 18:24:40 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/admin/list?page=1&size=5
2025-08-20 18:24:40 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 18:24:40 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 18:24:40 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 18:24:40 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.List<java.lang.String>]
2025-08-20 18:24:40 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 18:24:40 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data=[热带水果, 温带水果, 亚热带水果, 进口水果, 有机水果])]
2025-08-20 18:24:40 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 18:24:40 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/categories, 耗时: 41ms, 状态: 200
2025-08-20 18:24:40 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 18:24:40 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 18:24:40 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 18:24:40 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=16, size=5, page=1, list=[{id=1, name=测试商品1, description= (truncated)...]
2025-08-20 18:24:40 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/list, 耗时: 120ms, 状态: 200
2025-08-20 18:24:40 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 18:24:41 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/fruit/list?page=4&size=5&search=&category=&status=", parameters={masked}
2025-08-20 18:24:41 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/fruit/list, 参数: page=4&size=5&search=&category=&status=, IP: 127.0.0.1
2025-08-20 18:24:41 [http-nio-8082-exec-8] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 18:24:41 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/fruit/admin/list?page=4&size=5
2025-08-20 18:24:41 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 18:24:41 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 18:24:41 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 18:24:41 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 18:24:41 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=16, size=5, page=4, list=[{id=19, name=苹果, description=nu (truncated)...]
2025-08-20 18:24:41 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/fruit/list, 耗时: 69ms, 状态: 200
2025-08-20 18:24:41 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 18:24:56 [SpringApplicationShutdownHook] DEBUG o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@514646ef, started on Wed Aug 20 18:24:09 CST 2025
2025-08-20 18:24:56 [SpringApplicationShutdownHook] DEBUG org.springframework.web.SimpLogging - clientOutboundChannel removed SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2025-08-20 18:24:56 [SpringApplicationShutdownHook] DEBUG org.springframework.web.SimpLogging - clientInboundChannel removed WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2025-08-20 18:24:56 [SpringApplicationShutdownHook] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - Stopping...
2025-08-20 18:24:56 [SpringApplicationShutdownHook] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@250967f1]]
2025-08-20 18:24:56 [SpringApplicationShutdownHook] DEBUG org.springframework.web.SimpLogging - clientInboundChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@250967f1]
2025-08-20 18:24:56 [SpringApplicationShutdownHook] DEBUG org.springframework.web.SimpLogging - brokerChannel removed SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@250967f1]
2025-08-20 18:24:56 [SpringApplicationShutdownHook] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - Stopped.
2025-08-20 18:24:56 [SpringApplicationShutdownHook] DEBUG org.springframework.web.SimpLogging - clientInboundChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-08-20 18:24:56 [SpringApplicationShutdownHook] DEBUG org.springframework.web.SimpLogging - brokerChannel removed UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-08-20 18:24:56 [SpringApplicationShutdownHook] DEBUG o.s.d.redis.listener.RedisMessageListenerContainer - Stopped RedisMessageListenerContainer.
2025-08-20 18:24:56 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closing ...
2025-08-20 18:24:56 [SpringApplicationShutdownHook] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
2025-08-20 18:25:17 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 6.2.5.Final
2025-08-20 18:25:17 [main] INFO  org.example.admin.AdminApplication - Starting AdminApplication using Java 1.8.0_351 on 192.168.2.7 with PID 72686 (/Users/peng/Downloads/full-goods-parent/full-goods-admin/target/classes started by peng in /Users/peng/Downloads/full-goods-parent/full-goods-admin)
2025-08-20 18:25:17 [main] DEBUG org.example.admin.AdminApplication - Running with Spring Boot v2.7.5, Spring v5.3.23
2025-08-20 18:25:17 [main] INFO  org.example.admin.AdminApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-20 18:25:17 [main] DEBUG o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@514646ef
2025-08-20 18:25:18 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-08-20 18:25:18 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-08-20 18:25:18 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 33 ms. Found 0 Redis repository interfaces.
2025-08-20 18:25:19 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - Skipping MapperFactoryBean with name 'adminBannerMapper' and 'org.example.admin.mapper.AdminBannerMapper' mapperInterface. Bean already defined with the same name!
2025-08-20 18:25:19 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - Skipping MapperFactoryBean with name 'categoryMapper' and 'org.example.admin.mapper.CategoryMapper' mapperInterface. Bean already defined with the same name!
2025-08-20 18:25:19 [main] WARN  org.mybatis.spring.mapper.ClassPathMapperScanner - No MyBatis mapper was found in '[org.example.common.mapper, org.example.admin.mapper]' package. Please check your configuration.
2025-08-20 18:25:19 [main] DEBUG o.s.b.w.e.tomcat.TomcatServletWebServerFactory - Code archive: /Users/peng/.m2/repository/org/springframework/boot/spring-boot/2.7.5/spring-boot-2.7.5.jar
2025-08-20 18:25:19 [main] DEBUG o.s.b.w.e.tomcat.TomcatServletWebServerFactory - Code archive: /Users/peng/.m2/repository/org/springframework/boot/spring-boot/2.7.5/spring-boot-2.7.5.jar
2025-08-20 18:25:19 [main] DEBUG o.s.b.w.e.tomcat.TomcatServletWebServerFactory - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2025-08-20 18:25:19 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8082 (http)
2025-08-20 18:25:19 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8082"]
2025-08-20 18:25:19 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-08-20 18:25:19 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.68]
2025-08-20 18:25:20 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/admin] - Initializing Spring embedded WebApplicationContext
2025-08-20 18:25:20 [main] DEBUG o.s.b.w.s.c.ServletWebServerApplicationContext - Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2025-08-20 18:25:20 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2451 ms
2025-08-20 18:25:20 [main] DEBUG o.s.b.web.servlet.ServletContextInitializerBeans - Mapping filters: filterRegistrationBean urls=[/*] order=2147483647, characterEncodingFilter urls=[/*] order=-2147483648, formContentFilter urls=[/*] order=-9900, requestContextFilter urls=[/*] order=-105, hiddenHttpMethodFilter urls=[/*] order=2147483647
2025-08-20 18:25:20 [main] DEBUG o.s.b.web.servlet.ServletContextInitializerBeans - Mapping servlets: dispatcherServlet urls=[/], statViewServlet urls=[/druid/*]
2025-08-20 18:25:20 [main] DEBUG o.s.b.w.servlet.filter.OrderedRequestContextFilter - Filter 'requestContextFilter' configured for use
2025-08-20 18:25:20 [main] DEBUG o.s.web.filter.HiddenHttpMethodFilter - Filter 'hiddenHttpMethodFilter' configured for use
2025-08-20 18:25:20 [main] DEBUG o.s.b.w.s.filter.OrderedCharacterEncodingFilter - Filter 'characterEncodingFilter' configured for use
2025-08-20 18:25:20 [main] DEBUG o.s.b.web.servlet.filter.OrderedFormContentFilter - Filter 'formContentFilter' configured for use
2025-08-20 18:25:20 [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
2025-08-20 18:25:21 [main] INFO  com.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
2025-08-20 18:25:22 [main] DEBUG o.s.w.s.server.support.WebSocketHandlerMapping - Patterns [/ws/**] in 'stompWebSocketHandlerMapping'
2025-08-20 18:25:22 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.AdminMessageController:
	
2025-08-20 18:25:22 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.AdminMessageSendingController:
	
2025-08-20 18:25:22 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.AdminMessageTemplateController:
	
2025-08-20 18:25:22 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.AuthController:
	
2025-08-20 18:25:22 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.BannerController:
	
2025-08-20 18:25:22 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.CategoryController:
	
2025-08-20 18:25:22 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.DashboardController:
	
2025-08-20 18:25:22 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.DeliveryController:
	
2025-08-20 18:25:22 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.ModelController:
	
2025-08-20 18:25:22 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.OrderController:
	
2025-08-20 18:25:22 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.ProductController:
	
2025-08-20 18:25:22 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.TrainingController:
	
2025-08-20 18:25:22 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.e.a.c.UserController:
	
2025-08-20 18:25:22 [main] DEBUG o.s.w.s.m.WebSocketAnnotationMethodMessageHandler - 
	o.s.b.a.w.s.e.BasicErrorController:
	
2025-08-20 18:25:22 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-08-20 18:25:22 [main] DEBUG o.s.w.s.m.m.a.RequestMappingHandlerMapping - 150 mappings in 'requestMappingHandlerMapping'
2025-08-20 18:25:22 [main] DEBUG o.s.web.servlet.handler.SimpleUrlHandlerMapping - Patterns [/webjars/**, /**, /uploads/**, /images/**] in 'resourceHandlerMapping'
2025-08-20 18:25:22 [main] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 1 @ExceptionHandler, 1 ResponseBodyAdvice
2025-08-20 18:25:22 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2025-08-20 18:25:22 [main] DEBUG o.s.d.redis.listener.RedisMessageListenerContainer - Starting RedisMessageListenerContainer...
2025-08-20 18:25:22 [main] DEBUG o.s.d.redis.listener.RedisMessageListenerContainer - Postpone listening for Redis messages until actual listeners are added.
2025-08-20 18:25:23 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8082"]
2025-08-20 18:25:23 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8082 (http) with context path '/admin'
2025-08-20 18:25:23 [main] DEBUG org.springframework.web.SimpLogging - clientOutboundChannel added SubProtocolWebSocketHandler[StompSubProtocolHandler[v10.stomp, v11.stomp, v12.stomp]]
2025-08-20 18:25:23 [main] DEBUG org.springframework.web.SimpLogging - clientInboundChannel added WebSocketAnnotationMethodMessageHandler[prefixes=[/app/]]
2025-08-20 18:25:23 [main] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - Starting...
2025-08-20 18:25:23 [main] DEBUG org.springframework.web.SimpLogging - clientInboundChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@250967f1]
2025-08-20 18:25:23 [main] DEBUG org.springframework.web.SimpLogging - brokerChannel added SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@250967f1]
2025-08-20 18:25:23 [main] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@250967f1]]
2025-08-20 18:25:23 [main] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - Started.
2025-08-20 18:25:23 [main] DEBUG org.springframework.web.SimpLogging - clientInboundChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-08-20 18:25:23 [main] DEBUG org.springframework.web.SimpLogging - brokerChannel added UserDestinationMessageHandler[DefaultUserDestinationResolver[prefix=/user/]]
2025-08-20 18:25:23 [main] INFO  org.example.admin.AdminApplication - Started AdminApplication in 6.064 seconds (JVM running for 6.461)
2025-08-20 18:26:22 [MessageBroker-1] INFO  o.s.web.socket.config.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2025-08-20 18:56:22 [MessageBroker-1] INFO  o.s.web.socket.config.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 0, completed tasks = 1]
2025-08-20 19:26:22 [MessageBroker-2] INFO  o.s.web.socket.config.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 3, active threads = 1, queued tasks = 0, completed tasks = 2]
2025-08-20 19:56:22 [MessageBroker-1] INFO  o.s.web.socket.config.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 0, completed tasks = 3]
2025-08-20 20:26:22 [MessageBroker-3] INFO  o.s.web.socket.config.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 5, active threads = 1, queued tasks = 0, completed tasks = 4]
2025-08-20 20:56:22 [MessageBroker-2] INFO  o.s.web.socket.config.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 6, active threads = 1, queued tasks = 0, completed tasks = 5]
2025-08-20 21:26:22 [MessageBroker-4] INFO  o.s.web.socket.config.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 7, active threads = 1, queued tasks = 0, completed tasks = 6]
2025-08-20 21:56:22 [MessageBroker-1] INFO  o.s.web.socket.config.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 0, completed tasks = 7]
2025-08-20 22:26:22 [MessageBroker-1] INFO  o.s.web.socket.config.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 0, completed tasks = 8]
2025-08-20 22:56:22 [MessageBroker-1] INFO  o.s.web.socket.config.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 0, completed tasks = 9]
2025-08-20 23:24:53 [http-nio-8082-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/admin] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-20 23:24:53 [http-nio-8082-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-20 23:24:53 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-08-20 23:24:53 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-08-20 23:24:53 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-08-20 23:24:53 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@71c6d54a
2025-08-20 23:24:53 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@6d32eb89
2025-08-20 23:24:53 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-08-20 23:24:53 [http-nio-8082-exec-2] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 125 ms
2025-08-20 23:24:53 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/message-templates/enabled", parameters={}
2025-08-20 23:24:53 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/message-templates/enabled, IP: 127.0.0.1
2025-08-20 23:24:53 [http-nio-8082-exec-2] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 23:24:53 [http-nio-8082-exec-2] INFO  o.e.a.controller.AdminMessageTemplateController - 获取启用状态的模板列表请求
2025-08-20 23:24:53 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/message-templates/enabled
2025-08-20 23:24:53 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 23:24:54 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/message-templates/statistics", parameters={}
2025-08-20 23:24:54 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/message-templates/list?page=1&size=10&templateName=", parameters={masked}
2025-08-20 23:24:54 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/message-templates/statistics, IP: 127.0.0.1
2025-08-20 23:24:54 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/message-templates/list, 参数: page=1&size=10&templateName=, IP: 127.0.0.1
2025-08-20 23:24:54 [http-nio-8082-exec-3] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 23:24:54 [http-nio-8082-exec-1] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 23:24:54 [http-nio-8082-exec-3] INFO  o.e.a.controller.AdminMessageTemplateController - 获取模板统计数据请求
2025-08-20 23:24:54 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/message-templates/statistics
2025-08-20 23:24:54 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 23:24:54 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 23:24:54 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Reading to [org.example.common.response.Result<?>]
2025-08-20 23:24:54 [http-nio-8082-exec-1] INFO  o.e.a.controller.AdminMessageTemplateController - 获取消息模板列表请求，页码：1，大小：10，模板名称：，消息类型：null，状态：null
2025-08-20 23:24:54 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/message-templates?page=1&size=10
2025-08-20 23:24:54 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 23:24:54 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 23:24:54 [http-nio-8082-exec-3] DEBUG org.springframework.web.client.RestTemplate - Reading to [org.example.common.response.Result<?>]
2025-08-20 23:24:54 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 23:24:54 [http-nio-8082-exec-1] DEBUG org.springframework.web.client.RestTemplate - Reading to [org.example.common.response.Result<?>]
2025-08-20 23:24:54 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 23:24:54 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 23:24:54 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 23:24:54 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data=[{id=55, templateCode=TEST_DB_CONNECTION, templateName=数据库连接测试,  (truncated)...]
2025-08-20 23:24:54 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={enabledCount=5, typeStatistics={1=2, 2=1, 5=2}, disabledCount=0 (truncated)...]
2025-08-20 23:24:54 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=5, list=[{id=55, templateCode=TEST_DB_CONNECTION, templat (truncated)...]
2025-08-20 23:24:54 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/message-templates/list, 耗时: 317ms, 状态: 200
2025-08-20 23:24:54 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/message-templates/enabled, 耗时: 1032ms, 状态: 200
2025-08-20 23:24:54 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/message-templates/statistics, 耗时: 317ms, 状态: 200
2025-08-20 23:24:54 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 23:24:54 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 23:24:54 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 23:25:16 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/statistics", parameters={}
2025-08-20 23:25:16 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/statistics, IP: 127.0.0.1
2025-08-20 23:25:16 [http-nio-8082-exec-4] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 23:25:16 [http-nio-8082-exec-4] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/training/statistics
2025-08-20 23:25:16 [http-nio-8082-exec-4] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 23:25:17 [http-nio-8082-exec-4] DEBUG org.springframework.web.client.RestTemplate - Response 404 NOT_FOUND
2025-08-20 23:25:17 [http-nio-8082-exec-4] ERROR org.example.admin.service.impl.TrainingServiceImpl - 获取训练统计信息失败
org.springframework.web.client.HttpClientErrorException$NotFound: 404 : "{"timestamp":"2025-08-20T15:25:17.044+00:00","status":404,"error":"Not Found","message":"No message available","path":"/api/training/statistics"}"
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:113)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:168)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:631)
	at org.example.admin.service.impl.TrainingServiceImpl.getTrainingStatistics(TrainingServiceImpl.java:413)
	at org.example.admin.controller.TrainingController.getTrainingStatistics(TrainingController.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:670)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2025-08-20 23:25:17 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 23:25:17 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={completedTasks=10, totalTrainingTime=48小时, failedTasks=2, total (truncated)...]
2025-08-20 23:25:17 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/statistics, 耗时: 147ms, 状态: 200
2025-08-20 23:25:17 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 23:25:17 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/model-types", parameters={}
2025-08-20 23:25:17 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/model-types, IP: 127.0.0.1
2025-08-20 23:25:17 [http-nio-8082-exec-5] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 23:25:17 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 23:25:17 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={types=[{name=文本分类, description=对文本进行分类，如情感分析、主题分类等, id=text_cla (truncated)...]
2025-08-20 23:25:17 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/model-types, 耗时: 9ms, 状态: 200
2025-08-20 23:25:17 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 23:25:17 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/datasets?page=1&size=100&dataType=", parameters={masked}
2025-08-20 23:25:17 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/datasets, 参数: page=1&size=100&dataType=, IP: 127.0.0.1
2025-08-20 23:25:17 [http-nio-8082-exec-6] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 23:25:17 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 23:25:17 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=0, size=100, datasets=[], page=1})]
2025-08-20 23:25:17 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/datasets, 耗时: 17ms, 状态: 200
2025-08-20 23:25:17 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 23:25:17 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/tasks?page=1&size=10&status=&modelType=", parameters={masked}
2025-08-20 23:25:17 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/tasks, 参数: page=1&size=10&status=&modelType=, IP: 127.0.0.1
2025-08-20 23:25:17 [http-nio-8082-exec-7] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 23:25:17 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 23:25:17 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=0, size=10, page=1, tasks=[]})]
2025-08-20 23:25:17 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/tasks, 耗时: 4ms, 状态: 200
2025-08-20 23:25:17 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 23:26:22 [MessageBroker-1] INFO  o.s.web.socket.config.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 0, completed tasks = 10]
2025-08-20 23:27:57 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/statistics", parameters={}
2025-08-20 23:27:57 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/statistics, IP: 127.0.0.1
2025-08-20 23:27:57 [http-nio-8082-exec-8] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 23:27:57 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/training/statistics
2025-08-20 23:27:57 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 23:27:57 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - Response 404 NOT_FOUND
2025-08-20 23:27:57 [http-nio-8082-exec-8] ERROR org.example.admin.service.impl.TrainingServiceImpl - 获取训练统计信息失败
org.springframework.web.client.HttpClientErrorException$NotFound: 404 : "{"timestamp":"2025-08-20T15:27:57.176+00:00","status":404,"error":"Not Found","message":"No message available","path":"/api/training/statistics"}"
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:113)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:168)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:631)
	at org.example.admin.service.impl.TrainingServiceImpl.getTrainingStatistics(TrainingServiceImpl.java:413)
	at org.example.admin.controller.TrainingController.getTrainingStatistics(TrainingController.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:670)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2025-08-20 23:27:57 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 23:27:57 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={completedTasks=10, totalTrainingTime=48小时, failedTasks=2, total (truncated)...]
2025-08-20 23:27:57 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 23:27:57 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/statistics, 耗时: 58ms, 状态: 200
2025-08-20 23:27:57 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/model-types", parameters={}
2025-08-20 23:27:57 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/model-types, IP: 127.0.0.1
2025-08-20 23:27:57 [http-nio-8082-exec-9] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 23:27:57 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 23:27:57 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={types=[{name=文本分类, description=对文本进行分类，如情感分析、主题分类等, id=text_cla (truncated)...]
2025-08-20 23:27:57 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/model-types, 耗时: 9ms, 状态: 200
2025-08-20 23:27:57 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 23:27:57 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/datasets?page=1&size=100&dataType=", parameters={masked}
2025-08-20 23:27:57 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/datasets, 参数: page=1&size=100&dataType=, IP: 127.0.0.1
2025-08-20 23:27:57 [http-nio-8082-exec-10] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 23:27:57 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 23:27:57 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=0, size=100, datasets=[], page=1})]
2025-08-20 23:27:57 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/datasets, 耗时: 10ms, 状态: 200
2025-08-20 23:27:57 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 23:27:57 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/tasks?page=1&size=10&status=&modelType=", parameters={masked}
2025-08-20 23:27:57 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/tasks, 参数: page=1&size=10&status=&modelType=, IP: 127.0.0.1
2025-08-20 23:27:57 [http-nio-8082-exec-3] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 23:27:57 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 23:27:57 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=0, size=10, page=1, tasks=[]})]
2025-08-20 23:27:57 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/tasks, 耗时: 2ms, 状态: 200
2025-08-20 23:27:57 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 23:36:23 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/delivery/express-companies", parameters={}
2025-08-20 23:36:23 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/order/list?page=1&size=5&search=&status=", parameters={masked}
2025-08-20 23:36:23 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/order/list, 参数: page=1&size=5&search=&status=, IP: 127.0.0.1
2025-08-20 23:36:23 [http-nio-8082-exec-2] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 23:36:23 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/delivery/express-companies, IP: 127.0.0.1
2025-08-20 23:36:23 [http-nio-8082-exec-1] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 23:36:23 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 23:36:23 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/order/admin/list?page=1&size=5
2025-08-20 23:36:23 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 23:36:23 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data=[{code=SF, name=顺丰速运}, {code=YTO, name=圆通速递}, {code=ZTO, name=中通快递}, {code=STO, name (truncated)...]
2025-08-20 23:36:23 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/delivery/express-companies, 耗时: 67ms, 状态: 200
2025-08-20 23:36:23 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 23:36:23 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 23:36:23 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 23:36:23 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 23:36:23 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=5, size=5, page=1, list=[{id=30, orderNo=1755701659494d2b (truncated)...]
2025-08-20 23:36:23 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 23:36:23 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/order/list, 耗时: 383ms, 状态: 200
2025-08-20 23:36:25 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/banner/list?page=1&size=5&search=", parameters={masked}
2025-08-20 23:36:25 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/banner/list, 参数: page=1&size=5&search=, IP: 127.0.0.1
2025-08-20 23:36:25 [http-nio-8082-exec-4] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 23:36:25 [http-nio-8082-exec-4] DEBUG o.e.admin.mapper.AdminBannerMapper.countBanners - ==>  Preparing: SELECT COUNT(*) FROM t_banner
2025-08-20 23:36:25 [http-nio-8082-exec-4] DEBUG o.e.admin.mapper.AdminBannerMapper.countBanners - ==> Parameters: 
2025-08-20 23:36:25 [http-nio-8082-exec-4] DEBUG o.e.admin.mapper.AdminBannerMapper.countBanners - <==      Total: 1
2025-08-20 23:36:25 [http-nio-8082-exec-4] DEBUG o.e.a.mapper.AdminBannerMapper.selectBannerList - ==>  Preparing: SELECT id, image_url, link_url, sort, status, create_time, update_time, create_by, update_by, remark FROM t_banner ORDER BY sort ASC, create_time DESC LIMIT ?, ?
2025-08-20 23:36:25 [http-nio-8082-exec-4] DEBUG o.e.a.mapper.AdminBannerMapper.selectBannerList - ==> Parameters: 0(Integer), 5(Integer)
2025-08-20 23:36:25 [http-nio-8082-exec-4] DEBUG o.e.a.mapper.AdminBannerMapper.selectBannerList - <==      Total: 5
2025-08-20 23:36:25 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 23:36:25 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data={total=6, size=5, page=1, list=[Banner(id=10, imageUrl=/uploads/images/2025/08/20/c2 (truncated)...]
2025-08-20 23:36:25 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/banner/list, 耗时: 668ms, 状态: 200
2025-08-20 23:36:25 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 23:36:27 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/delivery/express-companies", parameters={}
2025-08-20 23:36:27 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/delivery/orders?page=1&size=10", parameters={masked}
2025-08-20 23:36:27 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/delivery/express-companies, IP: 127.0.0.1
2025-08-20 23:36:27 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/delivery/orders, 参数: page=1&size=10, IP: 127.0.0.1
2025-08-20 23:36:27 [http-nio-8082-exec-5] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 23:36:27 [http-nio-8082-exec-6] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 23:36:27 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 23:36:27 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data=[{code=SF, name=顺丰速运}, {code=YTO, name=圆通速递}, {code=ZTO, name=中通快递}, {code=STO, name (truncated)...]
2025-08-20 23:36:27 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/delivery/express-companies, 耗时: 5ms, 状态: 200
2025-08-20 23:36:27 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 23:36:27 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/order/admin/list?page=1&size=10&status=paid
2025-08-20 23:36:27 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 23:36:27 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - Response 200 OK
2025-08-20 23:36:27 [http-nio-8082-exec-6] DEBUG org.springframework.web.client.RestTemplate - Reading to [java.util.Map<java.lang.String, java.lang.Object>]
2025-08-20 23:36:27 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 23:36:27 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.annotation.HttpEntityMethodProcessor - Writing [{code=200, data={total=1, size=1, page=1, list=[{id=30, orderNo=1755701659494d2b639, userId=1, statu (truncated)...]
2025-08-20 23:36:27 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/delivery/orders, 耗时: 91ms, 状态: 200
2025-08-20 23:36:27 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 23:37:03 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/statistics", parameters={}
2025-08-20 23:37:03 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/statistics, IP: 127.0.0.1
2025-08-20 23:37:03 [http-nio-8082-exec-7] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 23:37:03 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/training/statistics
2025-08-20 23:37:03 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 23:37:03 [http-nio-8082-exec-7] DEBUG org.springframework.web.client.RestTemplate - Response 404 NOT_FOUND
2025-08-20 23:37:03 [http-nio-8082-exec-7] ERROR org.example.admin.service.impl.TrainingServiceImpl - 获取训练统计信息失败
org.springframework.web.client.HttpClientErrorException$NotFound: 404 : "{"timestamp":"2025-08-20T15:37:03.416+00:00","status":404,"error":"Not Found","message":"No message available","path":"/api/training/statistics"}"
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:113)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:168)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:631)
	at org.example.admin.service.impl.TrainingServiceImpl.getTrainingStatistics(TrainingServiceImpl.java:413)
	at org.example.admin.controller.TrainingController.getTrainingStatistics(TrainingController.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:670)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2025-08-20 23:37:03 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 23:37:03 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={completedTasks=10, totalTrainingTime=48小时, failedTasks=2, total (truncated)...]
2025-08-20 23:37:03 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/statistics, 耗时: 93ms, 状态: 200
2025-08-20 23:37:03 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 23:37:03 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/model-types", parameters={}
2025-08-20 23:37:03 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/model-types, IP: 127.0.0.1
2025-08-20 23:37:03 [http-nio-8082-exec-8] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 23:37:03 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 23:37:03 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={types=[{name=文本分类, description=对文本进行分类，如情感分析、主题分类等, id=text_cla (truncated)...]
2025-08-20 23:37:03 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/model-types, 耗时: 4ms, 状态: 200
2025-08-20 23:37:03 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 23:37:03 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/datasets?page=1&size=100&dataType=", parameters={masked}
2025-08-20 23:37:03 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/datasets, 参数: page=1&size=100&dataType=, IP: 127.0.0.1
2025-08-20 23:37:03 [http-nio-8082-exec-9] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 23:37:03 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 23:37:03 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=0, size=100, datasets=[], page=1})]
2025-08-20 23:37:03 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/datasets, 耗时: 6ms, 状态: 200
2025-08-20 23:37:03 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 23:37:03 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/tasks?page=1&size=10&status=&modelType=", parameters={masked}
2025-08-20 23:37:03 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/tasks, 参数: page=1&size=10&status=&modelType=, IP: 127.0.0.1
2025-08-20 23:37:03 [http-nio-8082-exec-10] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 23:37:03 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 23:37:03 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=0, size=10, page=1, tasks=[]})]
2025-08-20 23:37:03 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/tasks, 耗时: 5ms, 状态: 200
2025-08-20 23:37:03 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 23:51:11 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/model/list", parameters={}
2025-08-20 23:51:11 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/model/list, IP: 127.0.0.1
2025-08-20 23:51:11 [http-nio-8082-exec-3] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 23:51:11 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 23:51:11 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=3, size=10, page=1, list=[{provider=OpenAI, createTime=20 (truncated)...]
2025-08-20 23:51:11 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/model/list, 耗时: 96ms, 状态: 200
2025-08-20 23:51:11 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 23:52:06 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - POST "/admin/admin/model/upload", parameters={multipart}
2025-08-20 23:52:06 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: POST, URI: /admin/admin/model/upload, IP: 127.0.0.1
2025-08-20 23:52:06 [http-nio-8082-exec-1] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 23:52:06 [http-nio-8082-exec-1] DEBUG org.springframework.web.method.HandlerMethod - Could not resolve parameter [3] in public org.example.common.response.Result<java.lang.Boolean> org.example.admin.controller.ModelController.uploadModel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String,java.lang.String): Required request parameter 'description' for method parameter type String is not present
2025-08-20 23:52:06 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler org.example.common.exception.GlobalExceptionHandler#handleMissingServletRequestParameterException(MissingServletRequestParameterException, HttpServletRequest)
2025-08-20 23:52:06 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 23:52:06 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=500, message=缺少必需的请求参数: description, data=null)]
2025-08-20 23:52:06 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'description' for method parameter type String is not present]
2025-08-20 23:52:06 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: POST, URI: /admin/admin/model/upload, 耗时: 53ms, 状态: 400
2025-08-20 23:52:06 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 400 BAD_REQUEST
2025-08-20 23:53:33 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/statistics", parameters={}
2025-08-20 23:53:33 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/statistics, IP: 127.0.0.1
2025-08-20 23:53:33 [http-nio-8082-exec-2] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 23:53:33 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/training/statistics
2025-08-20 23:53:33 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 23:53:33 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Response 404 NOT_FOUND
2025-08-20 23:53:33 [http-nio-8082-exec-2] ERROR org.example.admin.service.impl.TrainingServiceImpl - 获取训练统计信息失败
org.springframework.web.client.HttpClientErrorException$NotFound: 404 : "{"timestamp":"2025-08-20T15:53:33.481+00:00","status":404,"error":"Not Found","message":"No message available","path":"/api/training/statistics"}"
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:113)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:168)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:631)
	at org.example.admin.service.impl.TrainingServiceImpl.getTrainingStatistics(TrainingServiceImpl.java:413)
	at org.example.admin.controller.TrainingController.getTrainingStatistics(TrainingController.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:670)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2025-08-20 23:53:33 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 23:53:33 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={completedTasks=10, totalTrainingTime=48小时, failedTasks=2, total (truncated)...]
2025-08-20 23:53:33 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/statistics, 耗时: 138ms, 状态: 200
2025-08-20 23:53:33 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 23:53:33 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/model-types", parameters={}
2025-08-20 23:53:33 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/model-types, IP: 127.0.0.1
2025-08-20 23:53:33 [http-nio-8082-exec-4] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 23:53:33 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 23:53:33 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={types=[{name=文本分类, description=对文本进行分类，如情感分析、主题分类等, id=text_cla (truncated)...]
2025-08-20 23:53:33 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/model-types, 耗时: 4ms, 状态: 200
2025-08-20 23:53:33 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 23:53:33 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/datasets?page=1&size=100&dataType=", parameters={masked}
2025-08-20 23:53:33 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/datasets, 参数: page=1&size=100&dataType=, IP: 127.0.0.1
2025-08-20 23:53:33 [http-nio-8082-exec-5] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 23:53:33 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 23:53:33 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=0, size=100, datasets=[], page=1})]
2025-08-20 23:53:33 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/datasets, 耗时: 4ms, 状态: 200
2025-08-20 23:53:33 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 23:53:33 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/tasks?page=1&size=10&status=&modelType=", parameters={masked}
2025-08-20 23:53:33 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/tasks, 参数: page=1&size=10&status=&modelType=, IP: 127.0.0.1
2025-08-20 23:53:33 [http-nio-8082-exec-6] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 23:53:33 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 23:53:33 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=0, size=10, page=1, tasks=[]})]
2025-08-20 23:53:33 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/tasks, 耗时: 5ms, 状态: 200
2025-08-20 23:53:33 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 23:53:34 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/model/list", parameters={}
2025-08-20 23:53:34 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/model/list, IP: 127.0.0.1
2025-08-20 23:53:34 [http-nio-8082-exec-7] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 23:53:34 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 23:53:34 [http-nio-8082-exec-7] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=3, size=10, page=1, list=[{provider=OpenAI, createTime=20 (truncated)...]
2025-08-20 23:53:34 [http-nio-8082-exec-7] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/model/list, 耗时: 7ms, 状态: 200
2025-08-20 23:53:34 [http-nio-8082-exec-7] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 23:53:39 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/statistics", parameters={}
2025-08-20 23:53:39 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/statistics, IP: 127.0.0.1
2025-08-20 23:53:39 [http-nio-8082-exec-8] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 23:53:39 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/training/statistics
2025-08-20 23:53:39 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 23:53:39 [http-nio-8082-exec-8] DEBUG org.springframework.web.client.RestTemplate - Response 404 NOT_FOUND
2025-08-20 23:53:39 [http-nio-8082-exec-8] ERROR org.example.admin.service.impl.TrainingServiceImpl - 获取训练统计信息失败
org.springframework.web.client.HttpClientErrorException$NotFound: 404 : "{"timestamp":"2025-08-20T15:53:39.773+00:00","status":404,"error":"Not Found","message":"No message available","path":"/api/training/statistics"}"
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:113)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:168)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:631)
	at org.example.admin.service.impl.TrainingServiceImpl.getTrainingStatistics(TrainingServiceImpl.java:413)
	at org.example.admin.controller.TrainingController.getTrainingStatistics(TrainingController.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:670)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2025-08-20 23:53:39 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 23:53:39 [http-nio-8082-exec-8] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={completedTasks=10, totalTrainingTime=48小时, failedTasks=2, total (truncated)...]
2025-08-20 23:53:39 [http-nio-8082-exec-8] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/statistics, 耗时: 27ms, 状态: 200
2025-08-20 23:53:39 [http-nio-8082-exec-8] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 23:53:39 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/model-types", parameters={}
2025-08-20 23:53:39 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/model-types, IP: 127.0.0.1
2025-08-20 23:53:39 [http-nio-8082-exec-9] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 23:53:39 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 23:53:39 [http-nio-8082-exec-9] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={types=[{name=文本分类, description=对文本进行分类，如情感分析、主题分类等, id=text_cla (truncated)...]
2025-08-20 23:53:39 [http-nio-8082-exec-9] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/model-types, 耗时: 6ms, 状态: 200
2025-08-20 23:53:39 [http-nio-8082-exec-9] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 23:53:39 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/datasets?page=1&size=100&dataType=", parameters={masked}
2025-08-20 23:53:39 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/datasets, 参数: page=1&size=100&dataType=, IP: 127.0.0.1
2025-08-20 23:53:39 [http-nio-8082-exec-10] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 23:53:39 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 23:53:39 [http-nio-8082-exec-10] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=0, size=100, datasets=[], page=1})]
2025-08-20 23:53:39 [http-nio-8082-exec-10] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/datasets, 耗时: 5ms, 状态: 200
2025-08-20 23:53:39 [http-nio-8082-exec-10] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 23:53:39 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/tasks?page=1&size=10&status=&modelType=", parameters={masked}
2025-08-20 23:53:39 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/tasks, 参数: page=1&size=10&status=&modelType=, IP: 127.0.0.1
2025-08-20 23:53:39 [http-nio-8082-exec-3] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 23:53:39 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 23:53:39 [http-nio-8082-exec-3] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=0, size=10, page=1, tasks=[]})]
2025-08-20 23:53:39 [http-nio-8082-exec-3] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/tasks, 耗时: 5ms, 状态: 200
2025-08-20 23:53:39 [http-nio-8082-exec-3] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 23:53:46 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/model/list", parameters={}
2025-08-20 23:53:46 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/model/list, IP: 127.0.0.1
2025-08-20 23:53:46 [http-nio-8082-exec-1] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 23:53:46 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 23:53:46 [http-nio-8082-exec-1] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=3, size=10, page=1, list=[{provider=OpenAI, createTime=20 (truncated)...]
2025-08-20 23:53:46 [http-nio-8082-exec-1] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/model/list, 耗时: 5ms, 状态: 200
2025-08-20 23:53:46 [http-nio-8082-exec-1] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 23:54:01 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/statistics", parameters={}
2025-08-20 23:54:01 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/statistics, IP: 127.0.0.1
2025-08-20 23:54:01 [http-nio-8082-exec-2] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 23:54:01 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - HTTP GET http://localhost:8080/api/training/statistics
2025-08-20 23:54:01 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Accept=[application/json, application/*+json]
2025-08-20 23:54:01 [http-nio-8082-exec-2] DEBUG org.springframework.web.client.RestTemplate - Response 404 NOT_FOUND
2025-08-20 23:54:01 [http-nio-8082-exec-2] ERROR org.example.admin.service.impl.TrainingServiceImpl - 获取训练统计信息失败
org.springframework.web.client.HttpClientErrorException$NotFound: 404 : "{"timestamp":"2025-08-20T15:54:01.328+00:00","status":404,"error":"Not Found","message":"No message available","path":"/api/training/statistics"}"
	at org.springframework.web.client.HttpClientErrorException.create(HttpClientErrorException.java:113)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:168)
	at org.springframework.web.client.DefaultResponseErrorHandler.handleError(DefaultResponseErrorHandler.java:122)
	at org.springframework.web.client.ResponseErrorHandler.handleError(ResponseErrorHandler.java:63)
	at org.springframework.web.client.RestTemplate.handleResponse(RestTemplate.java:819)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:777)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:711)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:631)
	at org.example.admin.service.impl.TrainingServiceImpl.getTrainingStatistics(TrainingServiceImpl.java:413)
	at org.example.admin.controller.TrainingController.getTrainingStatistics(TrainingController.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1071)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:964)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:670)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:779)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:227)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:114)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:189)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:162)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:197)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:97)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:135)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:78)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:360)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:399)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:893)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1789)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:750)
2025-08-20 23:54:01 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 23:54:01 [http-nio-8082-exec-2] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={completedTasks=10, totalTrainingTime=48小时, failedTasks=2, total (truncated)...]
2025-08-20 23:54:01 [http-nio-8082-exec-2] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/statistics, 耗时: 42ms, 状态: 200
2025-08-20 23:54:01 [http-nio-8082-exec-2] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 23:54:01 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/model-types", parameters={}
2025-08-20 23:54:01 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/model-types, IP: 127.0.0.1
2025-08-20 23:54:01 [http-nio-8082-exec-4] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 23:54:01 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 23:54:01 [http-nio-8082-exec-4] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={types=[{name=文本分类, description=对文本进行分类，如情感分析、主题分类等, id=text_cla (truncated)...]
2025-08-20 23:54:01 [http-nio-8082-exec-4] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/model-types, 耗时: 5ms, 状态: 200
2025-08-20 23:54:01 [http-nio-8082-exec-4] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 23:54:01 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/datasets?page=1&size=100&dataType=", parameters={masked}
2025-08-20 23:54:01 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/datasets, 参数: page=1&size=100&dataType=, IP: 127.0.0.1
2025-08-20 23:54:01 [http-nio-8082-exec-5] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 23:54:01 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 23:54:01 [http-nio-8082-exec-5] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=0, size=100, datasets=[], page=1})]
2025-08-20 23:54:01 [http-nio-8082-exec-5] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/datasets, 耗时: 3ms, 状态: 200
2025-08-20 23:54:01 [http-nio-8082-exec-5] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
2025-08-20 23:54:01 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - GET "/admin/admin/training/tasks?page=1&size=10&status=&modelType=", parameters={masked}
2025-08-20 23:54:01 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求开始 - 方法: GET, URI: /admin/admin/training/tasks, 参数: page=1&size=10&status=&modelType=, IP: 127.0.0.1
2025-08-20 23:54:01 [http-nio-8082-exec-6] DEBUG org.example.common.interceptor.LoggingInterceptor - User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36
2025-08-20 23:54:01 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Using 'application/json', given [application/json, text/plain, */*] and supported [application/json, application/*+json, application/json, application/*+json]
2025-08-20 23:54:01 [http-nio-8082-exec-6] DEBUG o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Writing [Result(code=200, message=操作成功, data={total=0, size=10, page=1, tasks=[]})]
2025-08-20 23:54:01 [http-nio-8082-exec-6] INFO  org.example.common.interceptor.LoggingInterceptor - 请求完成 - 方法: GET, URI: /admin/admin/training/tasks, 耗时: 3ms, 状态: 200
2025-08-20 23:54:01 [http-nio-8082-exec-6] DEBUG org.springframework.web.servlet.DispatcherServlet - Completed 200 OK
